version: '3'

services:
  db:
    image: postgres:11
    command: postgres -c 'max_connections=1000'
    environment:
      - POSTGRES_DB=ab2d
      - POSTGRES_USER=ab2d
      - POSTGRES_PASSWORD=ab2d
    ports:
      - "5432:5432"
  build:
    image: maven:3-jdk-13
    working_dir: /usr/src/mymaven
    command: mvn clean package
    volumes:
      - .:/usr/src/mymaven
      - ${HOME}/.m2:/root/.m2
  api:
    build:
      context: ./api
    environment:
      - AB2D_DB_HOST=db
      - AB2D_DB_PORT=5432
      - AB2D_DB_DATABASE=ab2d
      - AB2D_DB_SSL_MODE=allow
      - AB2D_DB_USER=ab2d
      - AB2D_DB_PASSWORD=ab2d
      - AB2D_EFS_MOUNT=/opt/ab2d
      - NEW_RELIC_LICENSE_KEY="${NEW_RELIC_LICENSE_KEY}"
      - NEW_RELIC_APP_NAME="${NEW_RELIC_APP_NAME}"
      - AB2D_EXECUTION_ENV=${AB2D_EXECUTION_ENV}
    ports:
      - "8443:8443"
    depends_on:
      - db
    volumes:
      - tmp-volume:/opt/ab2d
  worker:
    build:
      context: ./worker
    environment:
      - AB2D_DB_HOST=db
      - AB2D_DB_PORT=5432
      - AB2D_DB_DATABASE=ab2d
      - AB2D_DB_SSL_MODE=allow
      - AB2D_DB_USER=ab2d
      - AB2D_DB_PASSWORD=ab2d
      - AB2D_EFS_MOUNT=/opt/ab2d
      - AB2D_BFD_URL=https://prod-sbx.bfd.cms.gov/v1/fhir/
      - AB2D_BFD_KEYSTORE_PASSWORD=${AB2D_BFD_KEYSTORE_PASSWORD}
      - AB2D_BFD_KEYSTORE_LOCATION=${AB2D_BFD_KEYSTORE_LOCATION}
      - NEW_RELIC_LICENSE_KEY="${NEW_RELIC_LICENSE_KEY}"
      - NEW_RELIC_APP_NAME="${NEW_RELIC_APP_NAME}"
      - AB2D_OPT_OUT_JOB_SCHEDULE=${AB2D_OPT_OUT_JOB_SCHEDULE}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AB2D_HICN_HASH_PEPPER=${AB2D_HICN_HASH_PEPPER}
      - AB2D_HICN_HASH_ITER=${AB2D_HICN_HASH_ITER}
      - AB2D_CLAIMS_SKIP_BILLABLE_PERIOD_CHECK=${AB2D_CLAIMS_SKIP_BILLABLE_PERIOD_CHECK}
      - AB2D_KEYSTORE_LOCATION=${AB2D_KEYSTORE_LOCATION}
      - AB2D_KEYSTORE_PASSWORD=${AB2D_KEYSTORE_PASSWORD}
      - AB2D_KEY_ALIAS=${AB2D_KEY_ALIAS}
      - AB2D_EXECUTION_ENV=${AB2D_EXECUTION_ENV}
      - AB2D_STUCK_JOB_CANCEL_THRESHOLD=${AB2D_STUCK_JOB_CANCEL_THRESHOLD}
    depends_on:
      - db
    volumes:
      - tmp-volume:/opt/ab2d

# This needs a shared volume so that both the API and worker module can access the ndjson files being generated
volumes:
  tmp-volume:
    driver: local
    driver_opts:
      type: none
      device: /opt/ab2d
      o: bind
