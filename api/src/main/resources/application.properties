spring.datasource.url=jdbc:postgresql://${AB2D_DB_HOST}:${AB2D_DB_PORT}/${AB2D_DB_DATABASE}
spring.datasource.username=${AB2D_DB_USER}
spring.datasource.password=${AB2D_DB_PASSWORD}
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# In a Production system we would use Liquibase or a similar tool, but for the purposes of this exercise
# we are keeping things simple and just using Hibernate DDL generator. Works just fine for our purposes.
spring.jpa.hibernate.ddl-auto=update
spring.integration.jdbc.initialize-schema=always

api.retry-after.delay=30