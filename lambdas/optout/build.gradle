plugins {
    id 'java'
}

version "$optoutVersion"

repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.2'
    implementation 'com.amazonaws:aws-lambda-java-events:2.2.2'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.529'
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation 'software.amazon.awssdk:s3:2.25.6'
    implementation 'software.amazon.awssdk:sts:2.25.6'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation(project(":lambda-lib"))
    testImplementation 'com.amazonaws:aws-java-sdk-sqs:1.11.792'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
    testImplementation 'org.mockito:mockito-core:4.8.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.7'
    testImplementation 'org.testcontainers:postgresql:1.19.1'
    testImplementation project(':lambda-test-utils')
    testImplementation 'org.liquibase:liquibase-core:4.23.0'
    testImplementation 'io.findify:s3mock_2.13:0.2.6'
}

task buildZip(type: Zip) {

    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
    archiveFileName = 'optout.zip'
}

ext.set("zipName", 'optout')

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property 'sonar.coverage.exclusions', "**/OptOutConstants.java"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '7.5'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

build.dependsOn buildZip

