[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for directory /Users/ben/Code/ab2d/common/src/main/resources
[2025-06-25 13:39:53] FINE [liquibase.configuration] No configuration value for liquibase.searchPath found
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/liquibase-core.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for directory /opt/homebrew/Cellar/liquibase/4.32.0/libexec/lib
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/jaybird.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/ojdbc8.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/snakeyaml.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/snowflake-jdbc.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/slf4j-api.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/picocli.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/jaxb-runtime.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/commons-io.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/jaxb-api.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/slf4j-nop.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/jaxb-core.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/hsqldb.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/mssql-jdbc.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/h2.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/mariadb-java-client.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/liquibase-commercial.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/commons-lang3.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/postgresql.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/sqlite-jdbc.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/opencsv.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/commons-text.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/commons-collections4.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/jcc.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for directory /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/extensions/liquibase-commercial-bigquery.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for file /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/extensions/liquibase-checks.jar
[2025-06-25 13:39:53] FINE [liquibase.resource] Creating resourceAccessor for directory /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/extensions
[2025-06-25 13:39:53] FINE [liquibase.resource] Overall search path: 
  - /Users/ben/Code/ab2d/common/src/main/resources
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/liquibase-core.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/lib
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/jaybird.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/ojdbc8.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/snakeyaml.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/snowflake-jdbc.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/slf4j-api.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/picocli.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/jaxb-runtime.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/commons-io.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/jaxb-api.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/slf4j-nop.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/jaxb-core.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/hsqldb.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/mssql-jdbc.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/h2.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/mariadb-java-client.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/liquibase-commercial.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/commons-lang3.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/postgresql.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/sqlite-jdbc.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/opencsv.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/commons-text.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/commons-collections4.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib/jcc.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/lib
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/extensions/liquibase-commercial-bigquery.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/extensions/liquibase-checks.jar
  - /opt/homebrew/Cellar/liquibase/4.32.0/libexec/internal/extensions
[2025-06-25 13:39:53] FINE [liquibase.configuration] No configuration value for liquibase.uiService found
[2025-06-25 13:39:53] FINE [liquibase.configuration] Configuration liquibase.uiService is using the default value of CONSOLE
[2025-06-25 13:39:53] FINE [liquibase.configuration] No configuration value for liquibase.mirrorConsoleMessagesToLog found
[2025-06-25 13:39:53] FINE [liquibase.configuration] Configuration liquibase.mirrorConsoleMessagesToLog is using the default value of true
[2025-06-25 13:39:53] FINE [liquibase.configuration] No configuration value for liquibase.shouldRun aka should.run found
[2025-06-25 13:39:53] FINE [liquibase.configuration] Configuration liquibase.shouldRun is using the default value of true
[2025-06-25 13:39:53] FINE [liquibase.configuration] No configuration value for liquibase.showBanner found
[2025-06-25 13:39:53] FINE [liquibase.configuration] Configuration liquibase.showBanner is using the default value of true
####################################################
##   _     _             _ _                      ##
##  | |   (_)           (_) |                     ##
##  | |    _  __ _ _   _ _| |__   __ _ ___  ___   ##
##  | |   | |/ _` | | | | | '_ \ / _` / __|/ _ \  ##
##  | |___| | (_| | |_| | | |_) | (_| \__ \  __/  ##
##  \_____/_|\__, |\__,_|_|_.__/ \__,_|___/\___|  ##
##              | |                               ##
##              |_|                               ##
##                                                ## 
##  Get documentation at docs.liquibase.com       ##
##  Get certified courses at learn.liquibase.com  ## 
##                                                ##
####################################################
Starting Liquibase at 13:39:53 using Java 24.0.1 (version 4.32.0 #8159 built at 2025-05-19 23:00+0000)
[2025-06-25 13:39:53] INFO [liquibase.ui] ####################################################
##   _     _             _ _                      ##
##  | |   (_)           (_) |                     ##
##  | |    _  __ _ _   _ _| |__   __ _ ___  ___   ##
##  | |   | |/ _` | | | | | '_ \ / _` / __|/ _ \  ##
##  | |___| | (_| | |_| | | |_) | (_| \__ \  __/  ##
##  \_____/_|\__, |\__,_|_|_.__/ \__,_|___/\___|  ##
##              | |                               ##
##              |_|                               ##
##                                                ## 
##  Get documentation at docs.liquibase.com       ##
##  Get certified courses at learn.liquibase.com  ## 
##                                                ##
####################################################
Starting Liquibase at 13:39:53 using Java 24.0.1 (version 4.32.0 #8159 built at 2025-05-19 23:00+0000)
Liquibase Version: 4.32.0
[2025-06-25 13:39:53] INFO [liquibase.ui] Liquibase Version: 4.32.0
Liquibase Open Source 4.32.0 by Liquibase
[2025-06-25 13:39:53] INFO [liquibase.ui] Liquibase Open Source 4.32.0 by Liquibase
[2025-06-25 13:39:53] FINE [liquibase.configuration] No configuration value for liquibase.monitorPerformance found
[2025-06-25 13:39:53] FINE [liquibase.configuration] Configuration liquibase.monitorPerformance is using the default value of false
[2025-06-25 13:39:53] FINE [liquibase.integration] Performance monitoring disabled
[2025-06-25 13:39:58] INFO [liquibase.integration] Starting command execution.
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.outputFile found
[2025-06-25 13:39:58] FINE [liquibase.servicelocator] Loaded liquibase.io.OutputFileHandler instance liquibase.io.StandardOutputFileHandler
[2025-06-25 13:39:58] FINE [liquibase.servicelocator] Loaded liquibase.io.OutputFileHandler instance com.datical.liquibase.ext.io.ProOutputFileHandler
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.strict found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.strict is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.changeExecListener found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.changeExecListener found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.changeExecListenerClass found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.changeExecListenerClass found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.changeExecListenerPropertiesFile found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.changeExecListenerPropertiesFile found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.changelogFile found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Found 'liquibase.command.changelogFile' configuration of 'db/changelog/db.changelog-master.yaml'
    command argument '--changelog-file' of 'db/changelog/db.changelog-master.yaml'
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.changelogParameters found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.changelogParameters found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.contextFilter aka liquibase.command.update.contexts found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.contextFilter aka liquibase.command.contexts found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.database found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.database found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.databaseChangelog found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.databaseChangelog found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.defaultCatalogName found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.defaultCatalogName found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.defaultSchemaName found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.defaultSchemaName found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.driver found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.driver found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.driverPropertiesFile found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.driverPropertiesFile found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.labelFilter aka liquibase.command.update.labels found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.labelFilter aka liquibase.command.labels found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.password found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Found 'liquibase.command.password' configuration of '*****'
    command argument '--password' of '*****'
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.reportEnabled aka liquibase.command.update.reportsEnabled found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.reportEnabled aka liquibase.command.reportsEnabled found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.reportFormat aka liquibase.command.update.reportsFormat found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.reportFormat aka liquibase.command.reportsFormat found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.reportName aka liquibase.command.update.reportsName found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.reportName aka liquibase.command.reportsName found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.reportPath aka liquibase.command.update.reportsPath found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.reportPath aka liquibase.command.reportsPath found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.reportSuppressException aka liquibase.command.update.reportSuppressExceptions aka liquibase.command.update.reportsSuppressException aka liquibase.command.update.reportsSuppressExceptions found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.reportSuppressException aka liquibase.command.reportSuppressExceptions aka liquibase.command.reportsSuppressException aka liquibase.command.reportsSuppressExceptions found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.reportSuppressSql aka liquibase.command.update.reportsSuppressSql found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.reportSuppressSql aka liquibase.command.reportsSuppressSql found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.rollbackOnError found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.update.rollbackOnError is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.rollbackOnError found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.rollbackOnError is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.runOnce found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.update.runOnce is using the default value of true
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.runOnce found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.runOnce is using the default value of true
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.showSummary found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.update.showSummary is using the default value of SUMMARY
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.showSummary found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.showSummary is using the default value of SUMMARY
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.showSummaryOutput found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.update.showSummaryOutput is using the default value of ALL
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.showSummaryOutput found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.showSummaryOutput is using the default value of ALL
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.skipDatabaseStep found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.update.skipDatabaseStep is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.skipDatabaseStep found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.skipDatabaseStep is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.updateNullChecksums found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.update.updateNullChecksums is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.updateNullChecksums found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.updateNullChecksums is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.url found
[2025-06-25 13:39:58] FINE [liquibase.servicelocator] Loaded liquibase.database.jvm.ConnectionPatterns instance liquibase.database.jvm.JdbcConnectionPatterns
[2025-06-25 13:39:58] FINE [liquibase.configuration] Found 'liquibase.command.url' configuration of 'jdbc:postgresql://localhost:5432/test_database'
    command argument '--url' of '*****'
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.username found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Found 'liquibase.command.username' configuration of 'postgres'
    command argument '--username' of 'postgres'
[2025-06-25 13:39:58] FINE [liquibase.command] Pipeline for command 'update: liquibase.command.core.helpers.DbUrlConnectionArgumentsCommandStep then liquibase.command.core.helpers.ShowSummaryArgument then com.datical.liquibase.ext.command.helpers.RollbackOnErrorArgument then com.datical.liquibase.ext.command.helpers.ReportCommandArguments then liquibase.command.core.helpers.DbUrlConnectionCommandStep then liquibase.command.core.helpers.DatabaseChangelogCommandStep then com.datical.liquibase.ext.command.helpers.ProChangeExecListenerCommandStep then com.datical.liquibase.ext.command.UserMetadataMdcCommandStep then com.datical.liquibase.ext.command.ProUpdateCommandStep
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.customLogDataFile found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.update.runOnce is using the default value of true
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.runOnce is using the default value of true
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.outputFileEncoding found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.outputFileEncoding is using the default value of UTF-8
[2025-06-25 13:39:58] FINE [liquibase.command] Writing output with encoding 'UTF-8'
[2025-06-25 13:39:58] FINE [liquibase.command] Executing internal command dbUrlConnectionArguments
[2025-06-25 13:39:58] FINE [liquibase.command] Executing internal command showSummary
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.update.showSummary is using the default value of SUMMARY
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.showSummary is using the default value of SUMMARY
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.update.showSummaryOutput is using the default value of ALL
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.showSummaryOutput is using the default value of ALL
[2025-06-25 13:39:58] FINE [liquibase.command] Executing internal command rollbackOnError
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.update.rollbackOnError is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.rollbackOnError is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.command] Executing internal command report
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.reports.enabled aka liquibase.report.enabled found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.reports.enabled is using the default value of true
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.reports.suppressSql aka liquibase.report.suppressSql found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.reports.suppressSql is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.reports.suppressException aka liquibase.report.suppressException aka liquibase.report.suppressExceptions aka liquibase.reports.suppressExceptions found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.reports.suppressException is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.reports.name aka liquibase.report.name found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.reports.name is using the default value of report-dd-MMM-yyyy-HHmmss
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.reports.path aka liquibase.report.path found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.reports.path is using the default value of .
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.reports.format aka liquibase.report.format found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.reports.format is using the default value of HTML
[2025-06-25 13:39:58] FINE [liquibase.command] Executing internal command dbUrlConnectionCommandStep
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.update.skipDatabaseStep is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.skipDatabaseStep is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.update.ignoreMissingReferences found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.update.ignoreMissingReferences is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.command.ignoreMissingReferences found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.command.ignoreMissingReferences is using the default value of false
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.driver found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.liquibaseCatalogName aka liquibase.catalogName found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.liquibaseSchemaName aka liquibase.schemaName found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.databaseClass found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.propertyProviderClass found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.liquibaseTablespaceName aka liquibase.databaseChangeLogTablespaceName aka liquibase.liquibaseTableSpaceName found
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.databaseChangelogLockTableName aka liquibase.databaseChangeLogLockTableName found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.databaseChangelogLockTableName is using the default value of DATABASECHANGELOGLOCK
[2025-06-25 13:39:58] FINE [liquibase.configuration] No configuration value for liquibase.databaseChangelogTableName aka liquibase.databaseChangeLogTableName found
[2025-06-25 13:39:58] FINE [liquibase.configuration] Configuration liquibase.databaseChangelogTableName is using the default value of DATABASECHANGELOG
[2025-06-25 13:39:58] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.CockroachDatabase
[2025-06-25 13:39:58] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.DB2Database
[2025-06-25 13:39:58] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.Db2zDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.DerbyDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.EnterpriseDBDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.FirebirdDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.H2Database
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.HsqlDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.InformixDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.Ingres9Database
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.MSSQLDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.MariaDBDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.MockDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.MySQLDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.OracleDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.PostgresDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.SQLiteDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.SybaseASADatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.SybaseDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.UnsupportedDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.database.core.SnowflakeDatabase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.Database instance liquibase.ext.bigquery.database.BigQueryDatabase
[2025-06-25 13:39:59] FINE [liquibase.database] Properties:
[2025-06-25 13:39:59] FINE [liquibase.database] Key:'password' Value:'**********'
[2025-06-25 13:39:59] FINE [liquibase.database] Key:'user' Value:'postgres'
[2025-06-25 13:39:59] FINE [liquibase.database] Connecting to the URL:'jdbc:postgresql://localhost:5432/test_database' using driver:'org.postgresql.Driver'
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.DatabaseConnection instance liquibase.database.jvm.JdbcConnection
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.DatabaseConnection instance com.datical.liquibase.ext.database.jvm.ProJdbcConnection
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.DatabaseConnection instance com.datical.liquibase.ext.database.jvm.SnowflakeProJdbcConnection
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.DatabaseConnection instance liquibase.ext.bigquery.database.BigQueryConnection
[2025-06-25 13:39:59] FINE [liquibase.database] Connection has been created
[2025-06-25 13:39:59] FINE [liquibase.database] Connected to postgres@jdbc:postgresql://localhost:5432/test_database
[2025-06-25 13:39:59] FINE [liquibase.database] Setting auto commit to false from true
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.preserveSchemaCase found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.preserveSchemaCase is using the default value of false
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.executor.Executor instance liquibase.executor.jvm.JdbcExecutor
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.executor.Executor instance liquibase.executor.jvm.SnowflakeJdbcExecutor
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.executor.Executor instance com.datical.liquibase.ext.tools.OracleSqlPlusExecutor
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.executor.Executor instance com.datical.liquibase.ext.tools.MssqlSqlcmdExecutor
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.executor.Executor instance com.datical.liquibase.ext.tools.PsqlExecutor
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddAutoIncrementGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddAutoIncrementGeneratorDB2
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddAutoIncrementGeneratorHsqlH2
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddAutoIncrementGeneratorInformix
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddAutoIncrementGeneratorMySQL
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddAutoIncrementGeneratorSQLite
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddColumnGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddColumnGeneratorDefaultClauseBeforeNotNull
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddColumnGeneratorSQLite
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddDefaultValueGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddDefaultValueGeneratorDerby
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddDefaultValueGeneratorHsqldb
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddDefaultValueGeneratorInformix
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddDefaultValueGeneratorMSSQL
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddDefaultValueGeneratorMySQL
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddDefaultValueGeneratorOracle
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddDefaultValueGeneratorPostgres
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddDefaultValueGeneratorSQLite
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybaseASA
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddForeignKeyConstraintGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddPrimaryKeyGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddPrimaryKeyGeneratorInformix
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddUniqueConstraintGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorInformix
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorTDS
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.AlterSequenceGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.BatchDmlExecutablePreparedStatementGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.ClearDatabaseChangeLogTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CommentGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CopyRowsGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateDatabaseChangeLogLockTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGeneratorSybase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateIndexGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateIndexGeneratorFirebird
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateIndexGeneratorPostgres
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateProcedureGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateSequenceGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateTableGeneratorInformix
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateViewGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateViewGeneratorInformix
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DeleteGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DropColumnGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DropDefaultValueGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DropForeignKeyConstraintGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DropIndexGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DropPrimaryKeyGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DropProcedureGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DropSequenceGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DropTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DropUniqueConstraintGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DropViewGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetNextChangeSetSequenceValueGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetViewDefinitionGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDB2
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDerby
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetViewDefinitionGeneratorFirebird
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetViewDefinitionGeneratorHsql
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetViewDefinitionGeneratorInformix
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetViewDefinitionGeneratorMSSQL
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetViewDefinitionGeneratorOracle
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetViewDefinitionGeneratorPostgres
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybase
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybaseASA
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InitializeDatabaseChangeLogLockTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertDataChangeGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertOrUpdateGeneratorDB2
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertOrUpdateGeneratorH2
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertOrUpdateGeneratorHsql
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertOrUpdateGeneratorInformix
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMSSQL
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMySQL
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertOrUpdateGeneratorOracle
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertOrUpdateGeneratorPostgres
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSQLite
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSybaseASA
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertSetGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.LockDatabaseChangeLogGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.MarkChangeSetRanGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.ModifyDataTypeGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.RawParameterizedSqlGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.RawSqlGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.ReindexGeneratorSQLite
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.RemoveChangeSetRanStatusGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.RenameColumnGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.RenameSequenceGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.RenameTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.RenameViewGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.ReorganizeTableGeneratorDB2
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.RuntimeGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogLockGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.SetColumnRemarksGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.SetNullableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.SetTableRemarksGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.SetViewRemarksGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.StoredProcedureGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.TableIsEmptyGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.TableRowCountGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.TagDatabaseGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.UnlockDatabaseChangeLogGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.UpdateChangeSetChecksumGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.UpdateChangeSetFilenameGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.UpdateDataChangeGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.UpdateGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.CreateSequenceGeneratorSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DropDefaultValueGeneratorSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.DropProcedureGeneratorSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.RenameTableGeneratorSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.RenameViewGeneratorSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.SetColumnRemarksGeneratorSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.SetTableRemarksGeneratorSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.appdba.markunused.change.MarkUnusedGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.appdba.synonym.change.CreateSynonymGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.appdba.synonym.change.DropSynonymGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.trigger.change.EnableTriggerGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.trigger.change.CreateTriggerGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.trigger.change.RenameTriggerGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.trigger.change.DropTriggerGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.trigger.change.DisableTriggerGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.function.change.DropFunctionGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.function.change.CreateFunctionGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageBodyGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageBodyGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.checkconstraint.change.AddCheckConstraintGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.checkconstraint.change.EnableCheckConstraintGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.checkconstraint.change.DisableCheckConstraintGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.storedlogic.checkconstraint.change.DropCheckConstraintGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.sqlgenerator.SelectFromDatabaseChangeLogHistoryGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.sqlgenerator.compositetype.CreateCompositeTypeGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.sqlgenerator.compositetype.ChangeCompositeTypeSchemaGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.sqlgenerator.compositetype.DropCompositeTypeGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.sqlgenerator.compositetype.AlterCompositeTypeAttributesGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.sqlgenerator.compositetype.ChangeCompositeTypeOwnerGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.sqlgenerator.compositetype.RenameCompositeTypeGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.sqlgenerator.compositetype.RenameCompositeTypeAttributeGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.sqlgenerator.CreateDatabaseChangeLogHistoryTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.sqlgenerator.InsertDatabaseChangeLogHistoryGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.datical.liquibase.ext.sqlgenerator.ProCreateDatabaseChangeLogTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.liquibase.ext.bigquery.sqlgenerator.BigQueryInsertDatabaseChangeLogHistoryGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance com.liquibase.ext.bigquery.sqlgenerator.BigQueryInsertGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQueryAddColumnGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQueryAddForeignKeyConstraintGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQueryAddPrimaryKeyConstraintGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQueryCreateDatabaseChangeLogLockTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQueryCreateDatabaseChangeLogTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQueryDeleteGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQueryCreateTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQueryModifyDataTypeGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQueryRenameTableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQueryRenameViewGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQuerySetNullableGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQueryUpdateGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.sqlgenerator.SqlGenerator instance liquibase.ext.bigquery.sqlgenerator.BigQueryInsertOrUpdateGenerator
[2025-06-25 13:39:59] INFO [liquibase.database] Set default schema name to ab2d
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.license.utility.enabled found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.license.utility.enabled is using the default value of false
[2025-06-25 13:39:59] FINE [liquibase.command] Executing internal command changelogCommandStep
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.supportPropertyEscaping aka enableEscaping found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.supportPropertyEscaping is using the default value of false
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.parser.ChangeLogParser instance liquibase.parser.core.formattedsql.FormattedSqlChangeLogParser
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.parser.ChangeLogParser instance liquibase.parser.core.json.JsonChangeLogParser
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.parser.ChangeLogParser instance liquibase.parser.core.sql.SqlChangeLogParser
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.validateXmlChangelogFiles found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.validateXmlChangelogFiles is using the default value of true
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.secureParsing found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.secureParsing is using the default value of true
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.parser.ChangeLogParser instance liquibase.parser.core.xml.XMLChangeLogSAXParser
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.parser.ChangeLogParser instance liquibase.parser.core.yaml.YamlChangeLogParser
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.parser.ChangeLogParser instance com.datical.liquibase.ext.parser.ProFormattedSqlChangeLogParser
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/db.changelog-master.yaml' to parser 'YamlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.preserveClasspathPrefixInNormalizedPaths found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.preserveClasspathPrefixInNormalizedPaths is using the default value of false
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.fileEncoding found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.fileEncoding is using the default value of UTF-8
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/schema.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-291-CreateSequence-hibernate_sequence'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.changeset.ChangeSetService instance liquibase.changeset.StandardChangeSetService
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.changeset.ChangeSetService instance com.datical.liquibase.ext.changeset.ProChangeSetService
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-291-CreateTable-beneficiary'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-291-CreateTable-sponsor'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-291-CreateTable-contract'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-291-CreateTable-coverage'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-291-CreateTable-user_account'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-291-CreateTable-role'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-291-CreateTable-user_role'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-291-CreateTable-job'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-291-CreateTable-job_output'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-514-CreateTable-consent'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.changelog.ChangeLogHistoryService instance liquibase.changelog.MockChangeLogHistoryService
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.changelog.ChangeLogHistoryService instance liquibase.changelog.StandardChangeLogHistoryService
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.CatalogSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.ColumnSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.ColumnSnapshotGeneratorH2
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.ColumnSnapshotGeneratorInformix
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.ColumnSnapshotGeneratorOracle
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.DataSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.ForeignKeySnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.IndexSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.PrimaryKeySnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.SchemaSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.SequenceSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.TableSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.UniqueConstraintSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.ViewSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.SchemaSnapshotGeneratorSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.SequenceSnapshotGeneratorSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.snapshot.jvm.UniqueConstraintSnapshotGeneratorSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.appdba.synonym.SynonymSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.checkconstraint.CheckConstraintSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.checkconstraint.postgres.PostgresCheckConstraintSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.databasepackage.PackageBodySnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.databasepackage.PackageSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.function.FunctionSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.function.postgres.EDBPostgresFunctionSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.function.postgres.PostgresFunctionSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.function.mysql.MySQLFunctionSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.storedproc.PostgresStoredProcedureSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.storedproc.MySQLStoredProcedureSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.storedproc.SnowflakeStoredProcedureSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.storedproc.StoredProcedureSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.trigger.TriggerSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.datical.liquibase.ext.storedlogic.trigger.postgres.PostgresTriggerSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.liquibase.ext.storedlogic.function.BigQueryFunctionSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance com.liquibase.ext.storedlogic.storedproc.BigQueryStoredProcedureSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.ext.bigquery.snapshot.jvm.BigQueryDatasetSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.ext.bigquery.snapshot.jvm.BigQueryViewSnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.ext.bigquery.snapshot.jvm.BigQueryForeignKeySnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.snapshot.SnapshotGenerator instance liquibase.ext.bigquery.snapshot.jvm.BigQueryPrimaryKeySnapshotGenerator
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.supportsMethodValidationLevel found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.supportsMethodValidationLevel is using the default value of WARN
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 1750883999346 as 4e886218faaf84a90e886d0fa6e411dd
[2025-06-25 13:39:59] FINE [liquibase.executor] Create Database Change Log Table
[2025-06-25 13:39:59] INFO [liquibase.changelog] Creating database history table with name: ab2d.databasechangelog
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.BigIntType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.BlobType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.BooleanType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.CharType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.ClobType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.CurrencyType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.DatabaseFunctionType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.DateTimeType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.DateType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.DecimalType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.DoubleType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.FloatType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.IntType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.MediumIntType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.NCharType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.NVarcharType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.NumberType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.SmallIntType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.TimeType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.TimestampType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.TinyIntType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.UUIDType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.UnknownType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.VarcharType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.XMLType
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.TextDataTypeSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.TimestampNTZTypeSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.DoubleDataTypeSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.BinaryTypeSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.ClobTypeSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.DateTypeSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.TimeTypeSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.datatype.core.TimestampTypeSnowflake
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.ext.bigquery.datatype.core.StringDataTypeBigQuery
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.ext.bigquery.datatype.core.GeographyDataTypeBigQuery
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.ext.bigquery.datatype.core.Float64DataTypeBigQuery
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.ext.bigquery.datatype.core.BoolDataTypeBigQuery
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.ext.bigquery.datatype.core.Int64DataTypeBigQuery
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.ext.bigquery.datatype.core.NumericDataTypeBigQuery
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.datatype.LiquibaseDataType instance liquibase.ext.bigquery.datatype.core.BignumericDataTypeBigQuery
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.includeCatalogInSpecification found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.includeCatalogInSpecification is using the default value of false
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.sql.logLevel found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.sql.logLevel is using the default value of FINE
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE ab2d.databasechangelog (ID VARCHAR(255) NOT NULL, AUTHOR VARCHAR(255) NOT NULL, FILENAME VARCHAR(255) NOT NULL, DATEEXECUTED TIMESTAMP WITHOUT TIME ZONE NOT NULL, ORDEREXECUTED INTEGER NOT NULL, EXECTYPE VARCHAR(10) NOT NULL, MD5SUM VARCHAR(35), DESCRIPTION VARCHAR(255), COMMENTS VARCHAR(255), TAG VARCHAR(255), LIQUIBASE VARCHAR(20), CONTEXTS VARCHAR(255), LABELS VARCHAR(255), DEPLOYMENT_ID VARCHAR(10))
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.LiquibaseTableNames instance liquibase.database.StandardLiquibaseTableNames
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.database.LiquibaseTableNames instance com.datical.liquibase.ext.database.ProLiquibaseTableNames
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.dbclhistory.tableName aka databasechangeloghistory.tableName found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.dbclhistory.tableName is using the default value of DATABASECHANGELOGHISTORY
[2025-06-25 13:39:59] INFO [liquibase.changelog] Reading from ab2d.databasechangelog
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/seed_data.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'initial_data_seed'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'dkrylovsb'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/ab2d-599-rename-consent.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'ab2d-599-rename-consent-table-to-opt_out'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_contract_number_to_job.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance liquibase.diff.compare.core.CatalogComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance liquibase.diff.compare.core.ColumnComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance liquibase.diff.compare.core.DefaultDatabaseObjectComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance liquibase.diff.compare.core.ForeignKeyComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance liquibase.diff.compare.core.IndexComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance liquibase.diff.compare.core.PrimaryKeyComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance liquibase.diff.compare.core.SchemaComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance liquibase.diff.compare.core.TableComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance liquibase.diff.compare.core.UniqueConstraintComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance com.datical.liquibase.ext.appdba.diff.compare.SynonymComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance com.datical.liquibase.ext.storedlogic.StoredLogicComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance com.datical.liquibase.ext.storedlogic.checkconstraint.CheckConstraintComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance com.datical.liquibase.ext.storedlogic.trigger.TriggerComparator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.diff.compare.DatabaseObjectComparator instance com.datical.liquibase.ext.appdba.diff.compare.TypeAttributeComparator
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/remove_not_null_job_output.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/ab2d-828-increase-username-column-length.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'ab2d-828-increase-username-column-length'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/ab2d-777-resolve_diff_ids.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'ab2d-777-opt-out-resolve-ben-id-mbi'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_sbx_accounts.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_multicontract_data.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/update_attestation_date.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-747-filter-out-claims-on-dates'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_concurrent_job_column.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_concurrent_job_column'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'adaykin'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_downloaded_to_job_output.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_downloaded_to_job_output'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'adaykin'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/ab2d-934-allow-for-zip-downloads.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'ab2d-934-allow-for-zip-downloads'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/ab2d-1069-recreate-coverage-table.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'ab2d-1069-drop-coverage-table'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'ab2d-1069-recreate-coverage-table-with-id-and-month'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_properties_table.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_properties_table'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'adaykin'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/modify_hpms_ids.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'modify_hpms_ids'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'adaykin'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_maintenance_mode_property.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_contract2beneCache_toggle_property.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_contract2benecache_toggle_in_property_table'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_zip_support_toggle_property.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'ab2d_1110_add_zip_support_toggle_in_property_table'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/ab2d-1144-add-since-val.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'ab2d-1144-add-since-val'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'ab2d_1167_add_column_to_opt_out_table'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'ab2d_1167_add_indexes_on_opt_out_table'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'spathiyil'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_checksum_length_job_output.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_checksum_length_job_output'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'adaykin'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/log_event_schema.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-1242-persist-events-api-request'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-1242-persist-events-api-response'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-1242-persist-events-bene-reload'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-1242-persist-events-bene-search'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-1242-persist-events-error'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-1242-persist-events-file'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-1242-persist-events-job_status_change'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_admin_user.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_admin_user'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'adaykin'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/update_contract_numbers.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'update_contract_numbers'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'adaykin'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/modify_hicn.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/ab2d-1377-add-aws-id.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'ab2d-1377-create-kinesis-logger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/ab2d-1377-add-env-id.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'ab2d-1377-create-kinesis-logger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/create_opt_out_file_table.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_properties_data_01.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_properties_data_01'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lhanekam'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_attestor_role.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_attestor_role'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'adaykin'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_created_modified_date.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_created_modified_date'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'enolan'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_ip_table.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/modify_coverage_schema.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'modify_coverage_schema'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/remove_opt_out.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'remove_opt_out'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_hpms_info_to_contract.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_coverage_search.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_coverage_search_table'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_last_success_to_coverage_period.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_last_success_to_coverage_period'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_mbi_to_coverage.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_mbi_to_coverage'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/ab2d-2701-add-created-and-modified-values-to-test-user.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_update_mode_to_contract.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/add_property_coverage_search.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_property_coverage_search'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v001/drop-sponsor-ref-not-null.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/test_only/truncate-fake-data.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'context' = 'test'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-2921'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'earl_nolan'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/add_coverage_delta.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_coverage_delta_table'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'enolan'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/add_fhir_version.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_fhir_version'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/add_coverage_search_props.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_coverage_search_props'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/remove_extra_users.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'remove_extra_users'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/rework_user_account_username.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'rework_user_account_username'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/rework_event_tables.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'rework_event_tables'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/remove_current_admin.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'remove_current_admin'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/remove_sponsor_table.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'remove_sponsor_table'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/delete_akamai_requests.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'delete_akamai_records'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/add_coverage_search_override.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_coverage_search_override'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/create_partitioned_coverage_table.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'create_partitioned_coverage_table'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'sb-wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/test_only/coverage-fake-partitions.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'context' = 'test'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'coverage-fake-partitions'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'sb-wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/replace_coverage_table.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'replace_coverage_table'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'sb-wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/drop_old_coverage_table.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'drop_old_coverage_table'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'sb-wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/rework_search_event.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'rework_bene_search_event'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/add_started_by_column_to_job.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_started_by_column_to_job'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched rollback
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/add_synthea_contracts.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'AB2D-3874'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/support_default_since.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'support_default_since'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/add_patient_eob_count.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'add_patient_eob_count'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/update_mode_and_contract_type.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'updatae_mode_and_contract_type'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'lsharshar'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2021/remove_deprecated_properties.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'remove_deprecated_properties'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'wnyffenegger'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2022/job_contract_bus_key.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'contract_bus_key'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'enolan'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2022/contract_coverage.sql' to parser 'ProFormattedSqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'failOnError' = 'true'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetID' = 'contract_bus_key'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched attribute 'changeSetAuthor' = 'enolan'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/test_only/create-ab2d-analyst.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2022/create-analyst-view.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2022/job_pdp_client_bus_key.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2022/add_missing_job_view_grant.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2022/event-service-database-migration.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2022/downloaded_count.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2022/properties-service-database-migration.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2022/contract-service-database-migration.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2023/drop-unused-tables.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2023/add_columns_to_coverage.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2023/add_optout_property.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2023/extend_coverage_partition.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2023/create_current_mbi_table.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2024/misc_opt_out_attribution.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2024/add_until_column.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2024/ab2d_6151_rename_column.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2025/add_sequences.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2025/alter_sequences.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2025/update_total_bene_served_procedure.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.parser] Matched file 'db/changelog/v2025/create_ab2d_schema.sql' to parser 'SqlChangeLogParser'
[2025-06-25 13:39:59] FINE [liquibase.configuration] Found 'liquibase.command.update.updateNullChecksums' configuration of 'true'
    command argument 'updateNullChecksums' of 'true'
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.lockservice.LockService instance liquibase.lockservice.LockServiceImpl
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.lockservice.LockService instance liquibase.lockservice.MockLockService
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.lockservice.LockService instance liquibase.lockservice.OfflineLockService
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.lockservice.LockService instance liquibase.lockservice.StandardLockService
[2025-06-25 13:39:59] INFO [liquibase.snapshot] Creating snapshot
[2025-06-25 13:39:59] FINE [liquibase.executor] Create Database Lock Table
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE ab2d.databasechangeloglock (ID INTEGER NOT NULL, LOCKED BOOLEAN NOT NULL, LOCKGRANTED TIMESTAMP WITHOUT TIME ZONE, LOCKEDBY VARCHAR(255), CONSTRAINT databasechangeloglock_pkey PRIMARY KEY (ID))
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.lockservice] Created database lock table with name: ab2d.databasechangeloglock
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.executor] Initialize Database Lock Table
[2025-06-25 13:39:59] FINE [liquibase.executor] 
DELETE FROM ab2d.databasechangeloglock
[2025-06-25 13:39:59] FINE [liquibase.executor] 0 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangeloglock (ID, LOCKED) VALUES (1, FALSE)
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.allowDuplicatedChangesetIdentifiers found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.allowDuplicatedChangesetIdentifiers is using the default value of false
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.changelog.visitor.ValidatingVisitorGenerator instance liquibase.changelog.visitor.StandardValidatingVisitorGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.changelog.visitor.ValidatingVisitorGenerator instance com.datical.liquibase.ext.changelog.visitor.ProValidatingVisitorGenerator
[2025-06-25 13:39:59] FINE [liquibase.command] Executing internal command changeExecListener
[2025-06-25 13:39:59] FINE [liquibase.command] Executing internal command userMetadataMdc
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.command.update.runOnce is using the default value of true
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.command.runOnce is using the default value of true
[2025-06-25 13:39:59] FINE [liquibase.command] Executing internal command update
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.changelogLockWaitTimeInMinutes aka liquibase.changeLogLockWaitTimeInMinutes found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.changelogLockWaitTimeInMinutes is using the default value of 5
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.executor] Lock Database
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] INFO [liquibase.lockservice] Successfully acquired change log lock
[2025-06-25 13:39:59] INFO [liquibase.command] Using deploymentId: 0883993631
[2025-06-25 13:39:59] INFO [liquibase.changelog] Reading from ab2d.databasechangelog
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 779e7224cb825756584a8be1269101da
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:779e7224cb825756584a8be1269101da: as ed0073cec9dae0898c39dba65acc418e
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 7693f15302f11f653dc0185d92f6521f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:7693f15302f11f653dc0185d92f6521f: as eae61353bc5697626c526e821e3428b8
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 0d781646a643507d66ffb6f2c7650a9b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:0d781646a643507d66ffb6f2c7650a9b: as dadbd9cfa2c8e3be6d0c70295b269efa
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 05b55cc52bc72bfdc8c441f150812162
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:05b55cc52bc72bfdc8c441f150812162: as db7bd48d702f5c4df8334033bccf7b7b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as a040a001ac6c3432c03a0f00319c02d5
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:a040a001ac6c3432c03a0f00319c02d5: as 850005e153d083f8b14b5e415479c294
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as e96546c31ec36fc73004524543ad88cb
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:e96546c31ec36fc73004524543ad88cb: as 9b245b42d7729eca1ac561f431c0d21b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 3d930e304afcc4f64132e0f6272822ff
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:3d930e304afcc4f64132e0f6272822ff: as c11cee3384b3680a65ef7f762f495908
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 7cf1fd5c9804f4e6d486fdc0620f5af9
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:7cf1fd5c9804f4e6d486fdc0620f5af9: as c354a43a5166ebbde8bec8f875ea8edc
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 33de5ce7dbfa2a18fb82df36c0e50290
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:33de5ce7dbfa2a18fb82df36c0e50290: as ed06e5ca057cfc62f5c08042efa416f0
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as a6d75469e79543073c7de457343c7784
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:a6d75469e79543073c7de457343c7784: as 43ab32b766c107561f6a02418bba15fa
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 1e7a567f74bee4992446c89b713429db
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:1e7a567f74bee4992446c89b713429db: as 75f9d2ea9723d62ad1031beeb7f27a22
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 4aac9cafbff0714ca60600a65fe21bd2
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:4aac9cafbff0714ca60600a65fe21bd2: as ee71ba99e55b09f82ac69c8dbbf93b71
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 5708e3c0b35b4f660db06d3b5fb70a55
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:5708e3c0b35b4f660db06d3b5fb70a55: as 4b3e4557ae27dac019d4bab547e63167
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as adfd50e9b8368a8851e709960fa70a0e
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:adfd50e9b8368a8851e709960fa70a0e: as 9b2e09803d4919418a659745079b7cf2
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 178023769cbd81a81b1323f1768a46fe
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:178023769cbd81a81b1323f1768a46fe: as 3a9c54c552a200bf66e0b90da217087c
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 06d5d28160259816428c139633d42c61
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:06d5d28160259816428c139633d42c61: as 7781e9cb5933f752dff508cf7f6671cf
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ad42ba95c84b96fd0cafd9079243401c
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ad42ba95c84b96fd0cafd9079243401c: as dd173fefb26f7b5372ecac663c91df46
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as c868dda776210c188ccb3fbd159112ca
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:c868dda776210c188ccb3fbd159112ca: as b83ad59423c60b82e39ded368c9a562f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 70b166b87020bc4cdfe6965125bae293
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:70b166b87020bc4cdfe6965125bae293: as 9d56af5cd1634287db1eb7a9c2df9ea5
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 7a790a7f357fad3726b2fc30e0db63ed
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:7a790a7f357fad3726b2fc30e0db63ed: as 4f46e30d2056d80b99c42535850a001b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 05dd1d5a4ce8b6b1ac05133f0899fc71
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:05dd1d5a4ce8b6b1ac05133f0899fc71: as b378ed890aa1f0bb3d6bb802791dbe77
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as f220f9f34909d5fa6cfb02968e5e80b4
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:f220f9f34909d5fa6cfb02968e5e80b4: as 08df1ef91a4826baef5e32b58925ac94
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as e37d185ece301231524e61e652e8e78f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:e37d185ece301231524e61e652e8e78f: as fa7c5e5742106db24ac4b365e4599721
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 632b6675cc25c0ae238689ec66e15e09
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:632b6675cc25c0ae238689ec66e15e09: as a02e3a80860e3908aaa91c1c9dcffb59
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as c58a3a542a4113f776f6433df916e178
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:c58a3a542a4113f776f6433df916e178: as 9f2eb64c2f384109ee2b2cc1d6c0f3ae
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 4949ff7b25b33dde1da6b331b200fe90
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:4949ff7b25b33dde1da6b331b200fe90: as 4b321540bd889808d59d708b44c4dfb8
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as a241f6a84fb5e6da46166a60d62d83d1
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:a241f6a84fb5e6da46166a60d62d83d1: as 1ce4528cb7e133ab82a4302e19f96eae
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 7af1824f38a7f8f36c1f65b4f28ced04
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:7af1824f38a7f8f36c1f65b4f28ced04: as 2892d085db89c57d490428afd554a164
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 7e9182177f7fef478f813e3a89c628cd
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:7e9182177f7fef478f813e3a89c628cd: as 1f680525d625501055d75f689cad740c
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 4b1c77c39c46b0bc3753a2bf3ca6f8f5
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:4b1c77c39c46b0bc3753a2bf3ca6f8f5: as 829e6389481f7656dd0456fc1e48c153
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 50903046ad9677a312a51fd043450ea1
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:50903046ad9677a312a51fd043450ea1: as aa5b43dc3feb00237ea290a398b888bb
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 578645dacda04cae13445ed14dc9bff0
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:578645dacda04cae13445ed14dc9bff0: as a30f704cc8f7b6ddd441184dc7d0763e
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 5d57fca9b26dcdd6d1255eca2eaa78f3
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:5d57fca9b26dcdd6d1255eca2eaa78f3: as 9874f45301083f0b90639efd3fcccc9f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 6e690acc3b71fb223663201a3f84d3aa
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:6e690acc3b71fb223663201a3f84d3aa: as d2a28c26cf2074cc8bc917cf22cff266
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as d90576cf52d7a3241598966b0338dfc3
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:d90576cf52d7a3241598966b0338dfc3: as 7b752da6ac153cf9882658dbc9ccc26a
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ed76382b917ba496b070970636c2bf77
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ed76382b917ba496b070970636c2bf77: as d1c9611c7d661a9a70a3f39ee19f2866
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as d06e559b8dba310fbdfe9b0f72898c1b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:d06e559b8dba310fbdfe9b0f72898c1b: as 63d2c7677379849465ce9e1a8b869599
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 5937126a2955fd859c3a87e4279a6b7a
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:5937126a2955fd859c3a87e4279a6b7a: as 4ba10405553ec6fad4f831b995ff3efb
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 2b7464749389b496bb6dac6134f2b5f9
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:2b7464749389b496bb6dac6134f2b5f9: as 97466b76def15f9e6a95f4a11faf34a7
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as d646b95a80ce2727df2cb870950d4277
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:d646b95a80ce2727df2cb870950d4277: as 795670e58e274ed35fb751f0f14bfd5f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 0bb467de78b88ac75b32ca3ea1553e43
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:0bb467de78b88ac75b32ca3ea1553e43: as aaadac5f6ef2c588adb66f81506b87c4
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 4d8822cc6f35d971189a67560fda92f6
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:4d8822cc6f35d971189a67560fda92f6: as 14141dd8fc0b4a7bffaadd4ce93f12b4
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 1640034e137c1c23d57c8ad4563bdacc
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:1640034e137c1c23d57c8ad4563bdacc: as e3fb3b16bf20ff0672243cc132f6cef8
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ec2e6dc6dd5559a2b00ce4da2c0d3346
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ec2e6dc6dd5559a2b00ce4da2c0d3346: as 8f44c96b6186bb64495b182278656d9f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as fc9c4c5e658100d2ba24ad1c6b2fe44f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:fc9c4c5e658100d2ba24ad1c6b2fe44f: as eb785a55ee836abe5ba6e1db98564331
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 68431febbb717662b3132600e53aa749
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:68431febbb717662b3132600e53aa749: as 454d5c9fbf77b3c16146cadbef5cd34c
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 58cb97ca78f254d272389b4aaf8bc3c0
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:58cb97ca78f254d272389b4aaf8bc3c0: as 2513323997355127434f9f7a8247e616
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as b6e4b165425dd26ae964295fee014648
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:b6e4b165425dd26ae964295fee014648: as 350cacc300b7eca5dc07bbcc5f722431
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 2591bb8510e5c2dc4277beea8b812358
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:2591bb8510e5c2dc4277beea8b812358: as 0520df2f7041b6e0a73dcfb2bef793ed
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 5daa522d1f22b1228f1a633eec113571
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:5daa522d1f22b1228f1a633eec113571: as 8ab1c9880e0551de2980dbf5abd4415d
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 421efa2a1874cb08091b31f762691782
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:421efa2a1874cb08091b31f762691782: as efc71352c370db1db668872af32cc73d
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ce15a6e39e5f10aae5e32eab9f51d58b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ce15a6e39e5f10aae5e32eab9f51d58b: as a5cfd80c51727bbe0f2e12465c9d567f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as c33cd392a70824021f666d49ab7aebf6
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:c33cd392a70824021f666d49ab7aebf6: as a6f74d7a50d5c78dfa7ded71b708b86e
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 2f53abec4ef949aa4113391301363739
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:2f53abec4ef949aa4113391301363739: as 6aa169f4eecea09b72bdafe1fe352b32
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as e14268331f3f25544d58279d0b99754c
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:e14268331f3f25544d58279d0b99754c: as 119881f0536ac06e62a539add3b99552
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ec5322e6ff971c9653958bf3e7d339fa
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ec5322e6ff971c9653958bf3e7d339fa: as bc7fd8acdb91c69c0c6d3a0fd7b9359d
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 2f756d61809c7e91ddd8710669420e2b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:2f756d61809c7e91ddd8710669420e2b: as 4c08fc1a991c456beb880e94e55a4642
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 4abb25c2cacabc23f85379961e49f4e7
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:4abb25c2cacabc23f85379961e49f4e7: as 0a277e452e55ecb30a709b3f65e51288
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 4d84e24820fcf31b69b75b352e9d1f1b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:4d84e24820fcf31b69b75b352e9d1f1b: as d4fe70b5a6a55bb37e0cf38382bc75bf
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 3c83bbfb88864d739fb934854bfb2f57
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:3c83bbfb88864d739fb934854bfb2f57: as 48f51f73b415d7e6f61e1cdd35079e57
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ad4dbb5651d0e8b44dda354a03f8ca10
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ad4dbb5651d0e8b44dda354a03f8ca10: as 7c06529c59bcb13bb32da42195562ffa
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as b0705a9ae99493da04bf843065040f3d
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:b0705a9ae99493da04bf843065040f3d: as d1f2ff69f107c1b779ac22ecbc512ac5
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as af35a2cfc5b7c96f82205be3dcdc0727
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:af35a2cfc5b7c96f82205be3dcdc0727: as 618e2e097ed7d1abd0bb630550c1eb7b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as b9f2f7298aea572c27829c3665c34fbd
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:b9f2f7298aea572c27829c3665c34fbd: as 19e62a3edb16f5d2cb2eab06ee85bd33
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as fd6e76b917438224a887145b71b0409d
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:fd6e76b917438224a887145b71b0409d: as f016416e39d96d9f2509b6f8f9ee9346
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as b6c23e26c2042ca36a49fa07f9f2e48c
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:b6c23e26c2042ca36a49fa07f9f2e48c: as d381d0a2dc0a85aa6b114dd53f9550e7
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 92f26eb47aa1ef3dea934132a8d2e299
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:92f26eb47aa1ef3dea934132a8d2e299: as 44d9d8b0e94ff2e8b0331573a9aac889
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 78a31e4d01ac706119cd91eb278506f4
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:78a31e4d01ac706119cd91eb278506f4: as c93a8041b40120d9719db1e59685ea46
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 9400e76bc89e6eedc34cdbab777469ec
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:9400e76bc89e6eedc34cdbab777469ec: as dfb9813e95e52a9b4fc84ecff8d0e1d3
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as cac5e95afaafa18cafe2f1c12b8f078d
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:cac5e95afaafa18cafe2f1c12b8f078d: as 0b7f71b24043db725a398937ad273a5a
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as e11617e2d6ccc5eb7ae2745113a1bfd1
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:e11617e2d6ccc5eb7ae2745113a1bfd1: as 0b0bcb2d6246827649656e2319173505
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 60a8c356819f4ef5be496b14d848ad88
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:60a8c356819f4ef5be496b14d848ad88: as 0155f862a272b60d6f52e236c4e11ecd
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as a885ce58438495cd1be4166717ec5604
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:a885ce58438495cd1be4166717ec5604: as 504ff7dae18097cfeec7ecc78acf0a78
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 1ad622b60300dad86ba465d00b1f73a5
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:1ad622b60300dad86ba465d00b1f73a5: as f6143c987e8f8d190f0cfd2779e86593
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 5eae66b4be7fcd91f08c16d9057db4c1
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:5eae66b4be7fcd91f08c16d9057db4c1: as e0cad44ed5a8c45340c935f6e14b8cc8
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 1e39fa29e59b8b287e7dcc1e0dd18377
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:1e39fa29e59b8b287e7dcc1e0dd18377: as 975525043c76d25ac730abd5a4f5375a
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 4656361ac2dc1a25590744bd837bb32b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:4656361ac2dc1a25590744bd837bb32b: as 9df166b7bf4b226bdf063818e92dc5f7
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 675beb99454257bb1a29bb17af5f794a
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:675beb99454257bb1a29bb17af5f794a: as 7c03916b1c3e5c0b4fdb37be989bcf97
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 8bfbd9288de8767e38a06509d3fe0f6e
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:8bfbd9288de8767e38a06509d3fe0f6e: as a0afe1bfe6e2c216a0591360954599ea
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as f588def3a0942c2935e867471ac01f9d
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:f588def3a0942c2935e867471ac01f9d: as 9f603e88310a7a4296b3891707f58971
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as a184622cc7fde3342f8c209b5c26e33a
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:a184622cc7fde3342f8c209b5c26e33a: as 0428a59a668b0f49dafd42f10e45b866
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 87612740bbccd43e3870add42b6a8345
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:87612740bbccd43e3870add42b6a8345: as ea015c8c53316d72aee26a29e091c3c1
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as e6cae69ca1e28cc2334efd78ea779e33
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:e6cae69ca1e28cc2334efd78ea779e33: as c275c99d66703fd701007f7ab709c0e7
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as b71ce75812a5efe67d04ca048158b504
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:b71ce75812a5efe67d04ca048158b504: as a57f34946f22fa71c61d54a9f90e3cfd
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as f24995a0eaa063d13a98aa0db7f767e8
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:f24995a0eaa063d13a98aa0db7f767e8: as 6053931167386a2c0d563b40933c7a91
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as b0fc9c76b385573e729d7e1d9eba8b3f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:b0fc9c76b385573e729d7e1d9eba8b3f: as 886140ba8c93943c401e90d71d5ed360
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as aba5ed1b422de1701ea67d6e15258b6c
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:aba5ed1b422de1701ea67d6e15258b6c: as 896cebce057df43027d256b7f707ce24
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ff2a2864e65950c527c18367b87e6336
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ff2a2864e65950c527c18367b87e6336: as 3d1ec36ec6f5a33e98bf282dfd5e1ffb
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as c481da280f46a7bae45ee7cf27078f7b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:c481da280f46a7bae45ee7cf27078f7b: as 24c7ac1ae667b09e6f86118021085390
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ce69ff0087cfd084bd331532169fd436
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ce69ff0087cfd084bd331532169fd436: as e1828a06fd63d17ae12c1f2a8f0c1e84
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as bb80d895c8fc15d8699b206c2886056f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:bb80d895c8fc15d8699b206c2886056f: as 9c74ab383954163ca5742f39791867bc
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 57e2b7a1c654c1a8847aca63038f16ed
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:57e2b7a1c654c1a8847aca63038f16ed: as 882a77f5342397c30020860cb484ee8c
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 99db992fe01e4f0a1f00325abbfb40a2
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:99db992fe01e4f0a1f00325abbfb40a2: as 84539ee08120438dcaaad9fd968bc338
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as b3c1e2eb7f2a5224096112ad22606d7b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:b3c1e2eb7f2a5224096112ad22606d7b: as 166cb6e432d2afeb48d4f12941740c88
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as a70bb6863a413a27fa3fa6fc30f8e0a7
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:a70bb6863a413a27fa3fa6fc30f8e0a7: as 5c23d768c1c263afd48f5f6e933ad50b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as f9e4fe5cba164e26da55f2e54251b646
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:f9e4fe5cba164e26da55f2e54251b646: as e8e473d4dc15d0e9725e505616e4401f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 814499f5fdabef3060ee4b572c75789a
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:814499f5fdabef3060ee4b572c75789a: as 008573ef3834a4b5a54a0378f1409fe4
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 6c43b0ca63dc57808ce1960236f36a3d
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:6c43b0ca63dc57808ce1960236f36a3d: as d2383c6a8829ccb89edc19406081418c
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as c42cc3cf0deedb69bd09851a8fd59722
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:c42cc3cf0deedb69bd09851a8fd59722: as d6100013347cc53244d4fe887ee44742
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as d11750735aaea862b8a86696a670bde8
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:d11750735aaea862b8a86696a670bde8: as c1bcadb1e468250eb561f2e4b03b8ba1
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as cc9a69770717ace035755c4d623f4b01
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:cc9a69770717ace035755c4d623f4b01: as e936262e2811c99319a7cd90ec91123c
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 8d6cb0103f9eb50da13a5b2d9b23ed6a
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:8d6cb0103f9eb50da13a5b2d9b23ed6a: as 1f1c1ad1ce2693c23737f9d46e434c0f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 3b8da6259ebad3d62404628fe9e4820a
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:3b8da6259ebad3d62404628fe9e4820a: as 1f5d747b50cdfde1167172d92a727ebb
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as da756708a6bbff1c91e0ecba7f1b8f66
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:da756708a6bbff1c91e0ecba7f1b8f66: as 895dd1d41aba8037a7a43fcc1ddbf255
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 3a2a3cb78342af9bdc2f6dd9226f067e
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:3a2a3cb78342af9bdc2f6dd9226f067e: as 00ed4b387a69df5cefef2edf167821f6
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as b455072716af3b4c55f02133baf143dc
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:b455072716af3b4c55f02133baf143dc: as b150a18fbce244bd63f290d01c8d3374
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 779e7224cb825756584a8be1269101da
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:779e7224cb825756584a8be1269101da: as ed0073cec9dae0898c39dba65acc418e
Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateSequence-hibernate_sequence::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateSequence-hibernate_sequence::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateSequence-hibernate_sequence::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/schema.sql::AB2D-291-CreateSequence-hibernate_sequence::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/schema.sql::AB2D-291-CreateSequence-hibernate_sequence::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.parser.LiquibaseSqlParser instance liquibase.util.StandardSqlParser
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.parser.LiquibaseSqlParser instance com.datical.liquibase.ext.parser.ExceptionSwallowingSqlParser
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE SEQUENCE hibernate_sequence START WITH 1 INCREMENT BY 1;
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE SEQUENCE hibernate_sequence START WITH 1 INCREMENT BY 1
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/schema.sql::AB2D-291-CreateSequence-hibernate_sequence::spathiyil ran successfully in 6ms
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-291-CreateSequence-hibernate_sequence', 'spathiyil', 'db/changelog/v001/schema.sql', NOW(), 1, '9:ed0073cec9dae0898c39dba65acc418e', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 7693f15302f11f653dc0185d92f6521f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:7693f15302f11f653dc0185d92f6521f: as eae61353bc5697626c526e821e3428b8
Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-beneficiary::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-beneficiary::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-beneficiary::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/schema.sql::AB2D-291-CreateTable-beneficiary::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/schema.sql::AB2D-291-CreateTable-beneficiary::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE beneficiary
(
    id                  BIGINT              NOT NULL,
    patient_id          VARCHAR(255)        NOT NULL
);

ALTER TABLE beneficiary ADD CONSTRAINT "pk_beneficiary" PRIMARY KEY (id);
ALTER TABLE beneficiary ADD CONSTRAINT "uc_beneficiary_patient_id" UNIQUE (patient_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE beneficiary
(
    id                  BIGINT              NOT NULL,
    patient_id          VARCHAR(255)        NOT NULL
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE beneficiary
(
    id                  BIGINT              NOT NULL,
    patient_id          VARCHAR(255)        NOT NULL
);

ALTER TABLE beneficiary ADD CONSTRAINT "pk_beneficiary" PRIMARY KEY (id);
ALTER TABLE beneficiary ADD CONSTRAINT "uc_beneficiary_patient_id" UNIQUE (patient_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE beneficiary ADD CONSTRAINT "pk_beneficiary" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE beneficiary
(
    id                  BIGINT              NOT NULL,
    patient_id          VARCHAR(255)        NOT NULL
);

ALTER TABLE beneficiary ADD CONSTRAINT "pk_beneficiary" PRIMARY KEY (id);
ALTER TABLE beneficiary ADD CONSTRAINT "uc_beneficiary_patient_id" UNIQUE (patient_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE beneficiary ADD CONSTRAINT "uc_beneficiary_patient_id" UNIQUE (patient_id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/schema.sql::AB2D-291-CreateTable-beneficiary::spathiyil ran successfully in 5ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-291-CreateTable-beneficiary', 'spathiyil', 'db/changelog/v001/schema.sql', NOW(), 2, '9:eae61353bc5697626c526e821e3428b8', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 0d781646a643507d66ffb6f2c7650a9b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:0d781646a643507d66ffb6f2c7650a9b: as dadbd9cfa2c8e3be6d0c70295b269efa
Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-sponsor::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-sponsor::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-sponsor::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/schema.sql::AB2D-291-CreateTable-sponsor::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/schema.sql::AB2D-291-CreateTable-sponsor::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE sponsor
(
    id                  BIGINT              NOT NULL,
    hpms_id             INTEGER             NOT NULL,
    org_name            VARCHAR(255)        NOT NULL,
    legal_name          VARCHAR(255),
    parent_id           BIGINT
);

ALTER TABLE sponsor ADD CONSTRAINT "pk_sponsor" PRIMARY KEY (id);
ALTER TABLE sponsor ADD CONSTRAINT "fk_sponsor_to_sponsor_parent" FOREIGN KEY (parent_id) REFERENCES sponsor (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE sponsor
(
    id                  BIGINT              NOT NULL,
    hpms_id             INTEGER             NOT NULL,
    org_name            VARCHAR(255)        NOT NULL,
    legal_name          VARCHAR(255),
    parent_id           BIGINT
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE sponsor
(
    id                  BIGINT              NOT NULL,
    hpms_id             INTEGER             NOT NULL,
    org_name            VARCHAR(255)        NOT NULL,
    legal_name          VARCHAR(255),
    parent_id           BIGINT
);

ALTER TABLE sponsor ADD CONSTRAINT "pk_sponsor" PRIMARY KEY (id);
ALTER TABLE sponsor ADD CONSTRAINT "fk_sponsor_to_sponsor_parent" FOREIGN KEY (parent_id) REFERENCES sponsor (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE sponsor ADD CONSTRAINT "pk_sponsor" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE sponsor
(
    id                  BIGINT              NOT NULL,
    hpms_id             INTEGER             NOT NULL,
    org_name            VARCHAR(255)        NOT NULL,
    legal_name          VARCHAR(255),
    parent_id           BIGINT
);

ALTER TABLE sponsor ADD CONSTRAINT "pk_sponsor" PRIMARY KEY (id);
ALTER TABLE sponsor ADD CONSTRAINT "fk_sponsor_to_sponsor_parent" FOREIGN KEY (parent_id) REFERENCES sponsor (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE sponsor ADD CONSTRAINT "fk_sponsor_to_sponsor_parent" FOREIGN KEY (parent_id) REFERENCES sponsor (id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/schema.sql::AB2D-291-CreateTable-sponsor::spathiyil ran successfully in 5ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-291-CreateTable-sponsor', 'spathiyil', 'db/changelog/v001/schema.sql', NOW(), 3, '9:dadbd9cfa2c8e3be6d0c70295b269efa', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 05b55cc52bc72bfdc8c441f150812162
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:05b55cc52bc72bfdc8c441f150812162: as db7bd48d702f5c4df8334033bccf7b7b
Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-contract::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-contract::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-contract::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/schema.sql::AB2D-291-CreateTable-contract::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/schema.sql::AB2D-291-CreateTable-contract::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE contract
(
    id                  BIGINT              NOT NULL,
    contract_number     VARCHAR(255)        NOT NULL,
    contract_name       VARCHAR(255)        NOT NULL,
    sponsor_id          BIGINT NOT NULL,
    attested_on         TIMESTAMP WITH TIME ZONE
);

ALTER TABLE contract ADD CONSTRAINT "pk_contract" PRIMARY KEY (id);
ALTER TABLE contract ADD CONSTRAINT "uc_contract_contract_number" UNIQUE (contract_number);
ALTER TABLE contract ADD CONSTRAINT "fk_contract_to_sponsor" FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE contract
(
    id                  BIGINT              NOT NULL,
    contract_number     VARCHAR(255)        NOT NULL,
    contract_name       VARCHAR(255)        NOT NULL,
    sponsor_id          BIGINT NOT NULL,
    attested_on         TIMESTAMP WITH TIME ZONE
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE contract
(
    id                  BIGINT              NOT NULL,
    contract_number     VARCHAR(255)        NOT NULL,
    contract_name       VARCHAR(255)        NOT NULL,
    sponsor_id          BIGINT NOT NULL,
    attested_on         TIMESTAMP WITH TIME ZONE
);

ALTER TABLE contract ADD CONSTRAINT "pk_contract" PRIMARY KEY (id);
ALTER TABLE contract ADD CONSTRAINT "uc_contract_contract_number" UNIQUE (contract_number);
ALTER TABLE contract ADD CONSTRAINT "fk_contract_to_sponsor" FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE contract ADD CONSTRAINT "pk_contract" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE contract
(
    id                  BIGINT              NOT NULL,
    contract_number     VARCHAR(255)        NOT NULL,
    contract_name       VARCHAR(255)        NOT NULL,
    sponsor_id          BIGINT NOT NULL,
    attested_on         TIMESTAMP WITH TIME ZONE
);

ALTER TABLE contract ADD CONSTRAINT "pk_contract" PRIMARY KEY (id);
ALTER TABLE contract ADD CONSTRAINT "uc_contract_contract_number" UNIQUE (contract_number);
ALTER TABLE contract ADD CONSTRAINT "fk_contract_to_sponsor" FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE contract ADD CONSTRAINT "uc_contract_contract_number" UNIQUE (contract_number)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE contract
(
    id                  BIGINT              NOT NULL,
    contract_number     VARCHAR(255)        NOT NULL,
    contract_name       VARCHAR(255)        NOT NULL,
    sponsor_id          BIGINT NOT NULL,
    attested_on         TIMESTAMP WITH TIME ZONE
);

ALTER TABLE contract ADD CONSTRAINT "pk_contract" PRIMARY KEY (id);
ALTER TABLE contract ADD CONSTRAINT "uc_contract_contract_number" UNIQUE (contract_number);
ALTER TABLE contract ADD CONSTRAINT "fk_contract_to_sponsor" FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE contract ADD CONSTRAINT "fk_contract_to_sponsor" FOREIGN KEY (sponsor_id) REFERENCES sponsor (id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/schema.sql::AB2D-291-CreateTable-contract::spathiyil ran successfully in 7ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-291-CreateTable-contract', 'spathiyil', 'db/changelog/v001/schema.sql', NOW(), 4, '9:db7bd48d702f5c4df8334033bccf7b7b', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as a040a001ac6c3432c03a0f00319c02d5
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:a040a001ac6c3432c03a0f00319c02d5: as 850005e153d083f8b14b5e415479c294
Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-coverage::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-coverage::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-coverage::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/schema.sql::AB2D-291-CreateTable-coverage::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/schema.sql::AB2D-291-CreateTable-coverage::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage
(
    beneficiary_id      BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_beneficiary_id_contract_id" UNIQUE (beneficiary_id, contract_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE coverage
(
    beneficiary_id      BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage
(
    beneficiary_id      BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_beneficiary_id_contract_id" UNIQUE (beneficiary_id, contract_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage
(
    beneficiary_id      BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_beneficiary_id_contract_id" UNIQUE (beneficiary_id, contract_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage
(
    beneficiary_id      BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_beneficiary_id_contract_id" UNIQUE (beneficiary_id, contract_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_beneficiary_id_contract_id" UNIQUE (beneficiary_id, contract_id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/schema.sql::AB2D-291-CreateTable-coverage::spathiyil ran successfully in 6ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-291-CreateTable-coverage', 'spathiyil', 'db/changelog/v001/schema.sql', NOW(), 5, '9:850005e153d083f8b14b5e415479c294', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as e96546c31ec36fc73004524543ad88cb
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:e96546c31ec36fc73004524543ad88cb: as 9b245b42d7729eca1ac561f431c0d21b
Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-user_account::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-user_account::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-user_account::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/schema.sql::AB2D-291-CreateTable-user_account::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/schema.sql::AB2D-291-CreateTable-user_account::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE user_account
(
    id                  BIGINT              NOT NULL,
    username           VARCHAR(64)         NOT NULL,
    first_name          VARCHAR(64),
    last_name           VARCHAR(64),
    email               VARCHAR(255),
    sponsor_id          BIGINT              NOT NULL,
    enabled             BOOLEAN             NOT NULL
);

ALTER TABLE user_account ADD CONSTRAINT "pk_user_account" PRIMARY KEY (id);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_username" UNIQUE (username);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_email" UNIQUE (email);
ALTER TABLE user_account ADD CONSTRAINT "fk_user_account_to_sponsor"  FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE user_account
(
    id                  BIGINT              NOT NULL,
    username           VARCHAR(64)         NOT NULL,
    first_name          VARCHAR(64),
    last_name           VARCHAR(64),
    email               VARCHAR(255),
    sponsor_id          BIGINT              NOT NULL,
    enabled             BOOLEAN             NOT NULL
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE user_account
(
    id                  BIGINT              NOT NULL,
    username           VARCHAR(64)         NOT NULL,
    first_name          VARCHAR(64),
    last_name           VARCHAR(64),
    email               VARCHAR(255),
    sponsor_id          BIGINT              NOT NULL,
    enabled             BOOLEAN             NOT NULL
);

ALTER TABLE user_account ADD CONSTRAINT "pk_user_account" PRIMARY KEY (id);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_username" UNIQUE (username);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_email" UNIQUE (email);
ALTER TABLE user_account ADD CONSTRAINT "fk_user_account_to_sponsor"  FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE user_account ADD CONSTRAINT "pk_user_account" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE user_account
(
    id                  BIGINT              NOT NULL,
    username           VARCHAR(64)         NOT NULL,
    first_name          VARCHAR(64),
    last_name           VARCHAR(64),
    email               VARCHAR(255),
    sponsor_id          BIGINT              NOT NULL,
    enabled             BOOLEAN             NOT NULL
);

ALTER TABLE user_account ADD CONSTRAINT "pk_user_account" PRIMARY KEY (id);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_username" UNIQUE (username);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_email" UNIQUE (email);
ALTER TABLE user_account ADD CONSTRAINT "fk_user_account_to_sponsor"  FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_username" UNIQUE (username)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE user_account
(
    id                  BIGINT              NOT NULL,
    username           VARCHAR(64)         NOT NULL,
    first_name          VARCHAR(64),
    last_name           VARCHAR(64),
    email               VARCHAR(255),
    sponsor_id          BIGINT              NOT NULL,
    enabled             BOOLEAN             NOT NULL
);

ALTER TABLE user_account ADD CONSTRAINT "pk_user_account" PRIMARY KEY (id);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_username" UNIQUE (username);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_email" UNIQUE (email);
ALTER TABLE user_account ADD CONSTRAINT "fk_user_account_to_sponsor"  FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_email" UNIQUE (email)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE user_account
(
    id                  BIGINT              NOT NULL,
    username           VARCHAR(64)         NOT NULL,
    first_name          VARCHAR(64),
    last_name           VARCHAR(64),
    email               VARCHAR(255),
    sponsor_id          BIGINT              NOT NULL,
    enabled             BOOLEAN             NOT NULL
);

ALTER TABLE user_account ADD CONSTRAINT "pk_user_account" PRIMARY KEY (id);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_username" UNIQUE (username);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_email" UNIQUE (email);
ALTER TABLE user_account ADD CONSTRAINT "fk_user_account_to_sponsor"  FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE user_account ADD CONSTRAINT "fk_user_account_to_sponsor"  FOREIGN KEY (sponsor_id) REFERENCES sponsor (id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/schema.sql::AB2D-291-CreateTable-user_account::spathiyil ran successfully in 7ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-291-CreateTable-user_account', 'spathiyil', 'db/changelog/v001/schema.sql', NOW(), 6, '9:9b245b42d7729eca1ac561f431c0d21b', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 3d930e304afcc4f64132e0f6272822ff
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:3d930e304afcc4f64132e0f6272822ff: as c11cee3384b3680a65ef7f762f495908
Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-role::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-role::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-role::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/schema.sql::AB2D-291-CreateTable-role::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/schema.sql::AB2D-291-CreateTable-role::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE role
(
    id                  BIGINT              NOT NULL,
    name                VARCHAR(64)         NOT NULL
);

ALTER TABLE role ADD CONSTRAINT "pk_role" PRIMARY KEY (id);
ALTER TABLE role ADD CONSTRAINT "uc_role_name" UNIQUE (name);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE role
(
    id                  BIGINT              NOT NULL,
    name                VARCHAR(64)         NOT NULL
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE role
(
    id                  BIGINT              NOT NULL,
    name                VARCHAR(64)         NOT NULL
);

ALTER TABLE role ADD CONSTRAINT "pk_role" PRIMARY KEY (id);
ALTER TABLE role ADD CONSTRAINT "uc_role_name" UNIQUE (name);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE role ADD CONSTRAINT "pk_role" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE role
(
    id                  BIGINT              NOT NULL,
    name                VARCHAR(64)         NOT NULL
);

ALTER TABLE role ADD CONSTRAINT "pk_role" PRIMARY KEY (id);
ALTER TABLE role ADD CONSTRAINT "uc_role_name" UNIQUE (name);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE role ADD CONSTRAINT "uc_role_name" UNIQUE (name)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/schema.sql::AB2D-291-CreateTable-role::spathiyil ran successfully in 4ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-291-CreateTable-role', 'spathiyil', 'db/changelog/v001/schema.sql', NOW(), 7, '9:c11cee3384b3680a65ef7f762f495908', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 7cf1fd5c9804f4e6d486fdc0620f5af9
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:7cf1fd5c9804f4e6d486fdc0620f5af9: as c354a43a5166ebbde8bec8f875ea8edc
Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-user_role::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-user_role::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-user_role::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/schema.sql::AB2D-291-CreateTable-user_role::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/schema.sql::AB2D-291-CreateTable-user_role::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE user_role
(
    user_account_id     BIGINT              NOT NULL,
    role_id             BIGINT              NOT NULL
);

ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id);
ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_role" FOREIGN KEY (role_id) REFERENCES role (id);
ALTER TABLE user_role ADD CONSTRAINT "uc_user_role_user_account_id_role_id" UNIQUE (user_account_id, role_id);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE user_role
(
    user_account_id     BIGINT              NOT NULL,
    role_id             BIGINT              NOT NULL
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE user_role
(
    user_account_id     BIGINT              NOT NULL,
    role_id             BIGINT              NOT NULL
);

ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id);
ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_role" FOREIGN KEY (role_id) REFERENCES role (id);
ALTER TABLE user_role ADD CONSTRAINT "uc_user_role_user_account_id_role_id" UNIQUE (user_account_id, role_id);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE user_role
(
    user_account_id     BIGINT              NOT NULL,
    role_id             BIGINT              NOT NULL
);

ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id);
ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_role" FOREIGN KEY (role_id) REFERENCES role (id);
ALTER TABLE user_role ADD CONSTRAINT "uc_user_role_user_account_id_role_id" UNIQUE (user_account_id, role_id);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_role" FOREIGN KEY (role_id) REFERENCES role (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE user_role
(
    user_account_id     BIGINT              NOT NULL,
    role_id             BIGINT              NOT NULL
);

ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id);
ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_role" FOREIGN KEY (role_id) REFERENCES role (id);
ALTER TABLE user_role ADD CONSTRAINT "uc_user_role_user_account_id_role_id" UNIQUE (user_account_id, role_id);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE user_role ADD CONSTRAINT "uc_user_role_user_account_id_role_id" UNIQUE (user_account_id, role_id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/schema.sql::AB2D-291-CreateTable-user_role::spathiyil ran successfully in 4ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-291-CreateTable-user_role', 'spathiyil', 'db/changelog/v001/schema.sql', NOW(), 8, '9:c354a43a5166ebbde8bec8f875ea8edc', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 33de5ce7dbfa2a18fb82df36c0e50290
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:33de5ce7dbfa2a18fb82df36c0e50290: as ed06e5ca057cfc62f5c08042efa416f0
Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-job::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-job::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-job::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/schema.sql::AB2D-291-CreateTable-job::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/schema.sql::AB2D-291-CreateTable-job::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE job
(
    id                  BIGINT              NOT NULL,
    job_uuid            VARCHAR(255)        NOT NULL,
    user_account_id     BIGINT              NOT NULL,
    created_at          TIMESTAMP WITH TIME ZONE         NOT NULL,
    expires_at          TIMESTAMP WITH TIME ZONE,
    resource_types      VARCHAR(255),
    status              VARCHAR(32)         NOT NULL,
    status_message      TEXT,
    request_url         TEXT,
    progress            INT,
    last_poll_time      TIMESTAMP WITH TIME ZONE,
    completed_at        TIMESTAMP WITH TIME ZONE
);

ALTER TABLE job ADD CONSTRAINT "pk_job" PRIMARY KEY (id);
ALTER TABLE job ADD CONSTRAINT uc_job_job_uuid UNIQUE (job_uuid);

ALTER TABLE job ADD CONSTRAINT "fk_job_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE job
(
    id                  BIGINT              NOT NULL,
    job_uuid            VARCHAR(255)        NOT NULL,
    user_account_id     BIGINT              NOT NULL,
    created_at          TIMESTAMP WITH TIME ZONE         NOT NULL,
    expires_at          TIMESTAMP WITH TIME ZONE,
    resource_types      VARCHAR(255),
    status              VARCHAR(32)         NOT NULL,
    status_message      TEXT,
    request_url         TEXT,
    progress            INT,
    last_poll_time      TIMESTAMP WITH TIME ZONE,
    completed_at        TIMESTAMP WITH TIME ZONE
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE job
(
    id                  BIGINT              NOT NULL,
    job_uuid            VARCHAR(255)        NOT NULL,
    user_account_id     BIGINT              NOT NULL,
    created_at          TIMESTAMP WITH TIME ZONE         NOT NULL,
    expires_at          TIMESTAMP WITH TIME ZONE,
    resource_types      VARCHAR(255),
    status              VARCHAR(32)         NOT NULL,
    status_message      TEXT,
    request_url         TEXT,
    progress            INT,
    last_poll_time      TIMESTAMP WITH TIME ZONE,
    completed_at        TIMESTAMP WITH TIME ZONE
);

ALTER TABLE job ADD CONSTRAINT "pk_job" PRIMARY KEY (id);
ALTER TABLE job ADD CONSTRAINT uc_job_job_uuid UNIQUE (job_uuid);

ALTER TABLE job ADD CONSTRAINT "fk_job_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE job ADD CONSTRAINT "pk_job" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE job
(
    id                  BIGINT              NOT NULL,
    job_uuid            VARCHAR(255)        NOT NULL,
    user_account_id     BIGINT              NOT NULL,
    created_at          TIMESTAMP WITH TIME ZONE         NOT NULL,
    expires_at          TIMESTAMP WITH TIME ZONE,
    resource_types      VARCHAR(255),
    status              VARCHAR(32)         NOT NULL,
    status_message      TEXT,
    request_url         TEXT,
    progress            INT,
    last_poll_time      TIMESTAMP WITH TIME ZONE,
    completed_at        TIMESTAMP WITH TIME ZONE
);

ALTER TABLE job ADD CONSTRAINT "pk_job" PRIMARY KEY (id);
ALTER TABLE job ADD CONSTRAINT uc_job_job_uuid UNIQUE (job_uuid);

ALTER TABLE job ADD CONSTRAINT "fk_job_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE job ADD CONSTRAINT uc_job_job_uuid UNIQUE (job_uuid)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE job
(
    id                  BIGINT              NOT NULL,
    job_uuid            VARCHAR(255)        NOT NULL,
    user_account_id     BIGINT              NOT NULL,
    created_at          TIMESTAMP WITH TIME ZONE         NOT NULL,
    expires_at          TIMESTAMP WITH TIME ZONE,
    resource_types      VARCHAR(255),
    status              VARCHAR(32)         NOT NULL,
    status_message      TEXT,
    request_url         TEXT,
    progress            INT,
    last_poll_time      TIMESTAMP WITH TIME ZONE,
    completed_at        TIMESTAMP WITH TIME ZONE
);

ALTER TABLE job ADD CONSTRAINT "pk_job" PRIMARY KEY (id);
ALTER TABLE job ADD CONSTRAINT uc_job_job_uuid UNIQUE (job_uuid);

ALTER TABLE job ADD CONSTRAINT "fk_job_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE job ADD CONSTRAINT "fk_job_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/schema.sql::AB2D-291-CreateTable-job::spathiyil ran successfully in 6ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-291-CreateTable-job', 'spathiyil', 'db/changelog/v001/schema.sql', NOW(), 9, '9:ed06e5ca057cfc62f5c08042efa416f0', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as a6d75469e79543073c7de457343c7784
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:a6d75469e79543073c7de457343c7784: as 43ab32b766c107561f6a02418bba15fa
Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-job_output::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-job_output::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/schema.sql::AB2D-291-CreateTable-job_output::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/schema.sql::AB2D-291-CreateTable-job_output::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/schema.sql::AB2D-291-CreateTable-job_output::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE job_output
(
    id                  BIGINT              NOT NULL,
    job_id              BIGINT              NOT NULL,
    file_path           TEXT                NOT NULL,
    fhir_resource_type  VARCHAR(255)        NOT NULL,
    error               BOOLEAN             NOT NULL
);

ALTER TABLE job_output ADD CONSTRAINT "pk_job_output" PRIMARY KEY (id);
ALTER TABLE job_output ADD CONSTRAINT "fk_job_output_to_job" FOREIGN KEY (job_id) REFERENCES job (id);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE job_output
(
    id                  BIGINT              NOT NULL,
    job_id              BIGINT              NOT NULL,
    file_path           TEXT                NOT NULL,
    fhir_resource_type  VARCHAR(255)        NOT NULL,
    error               BOOLEAN             NOT NULL
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE job_output
(
    id                  BIGINT              NOT NULL,
    job_id              BIGINT              NOT NULL,
    file_path           TEXT                NOT NULL,
    fhir_resource_type  VARCHAR(255)        NOT NULL,
    error               BOOLEAN             NOT NULL
);

ALTER TABLE job_output ADD CONSTRAINT "pk_job_output" PRIMARY KEY (id);
ALTER TABLE job_output ADD CONSTRAINT "fk_job_output_to_job" FOREIGN KEY (job_id) REFERENCES job (id);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE job_output ADD CONSTRAINT "pk_job_output" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE job_output
(
    id                  BIGINT              NOT NULL,
    job_id              BIGINT              NOT NULL,
    file_path           TEXT                NOT NULL,
    fhir_resource_type  VARCHAR(255)        NOT NULL,
    error               BOOLEAN             NOT NULL
);

ALTER TABLE job_output ADD CONSTRAINT "pk_job_output" PRIMARY KEY (id);
ALTER TABLE job_output ADD CONSTRAINT "fk_job_output_to_job" FOREIGN KEY (job_id) REFERENCES job (id);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE job_output ADD CONSTRAINT "fk_job_output_to_job" FOREIGN KEY (job_id) REFERENCES job (id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/schema.sql::AB2D-291-CreateTable-job_output::spathiyil ran successfully in 4ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-291-CreateTable-job_output', 'spathiyil', 'db/changelog/v001/schema.sql', NOW(), 10, '9:43ab32b766c107561f6a02418bba15fa', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 1e7a567f74bee4992446c89b713429db
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:1e7a567f74bee4992446c89b713429db: as 75f9d2ea9723d62ad1031beeb7f27a22
Running Changeset: db/changelog/v001/schema.sql::AB2D-514-CreateTable-consent::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/schema.sql::AB2D-514-CreateTable-consent::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/schema.sql::AB2D-514-CreateTable-consent::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/schema.sql::AB2D-514-CreateTable-consent::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/schema.sql::AB2D-514-CreateTable-consent::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE consent
(
    id                  BIGINT                      NOT NULL,
    hicn                VARCHAR(64)                 NOT NULL,
    effective_date      DATE                        NOT NULL,
    policy_code         VARCHAR(255)                NOT NULL,
    purpose_code        VARCHAR(255)                NOT NULL,
    lo_inc_code         VARCHAR(255)                NOT NULL,
    scope_code          VARCHAR(255)                NOT NULL
);

ALTER TABLE consent ADD CONSTRAINT "pk_consent" PRIMARY KEY (id);

CREATE INDEX "ix_consent_hicn" ON consent (hicn);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE consent
(
    id                  BIGINT                      NOT NULL,
    hicn                VARCHAR(64)                 NOT NULL,
    effective_date      DATE                        NOT NULL,
    policy_code         VARCHAR(255)                NOT NULL,
    purpose_code        VARCHAR(255)                NOT NULL,
    lo_inc_code         VARCHAR(255)                NOT NULL,
    scope_code          VARCHAR(255)                NOT NULL
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE consent
(
    id                  BIGINT                      NOT NULL,
    hicn                VARCHAR(64)                 NOT NULL,
    effective_date      DATE                        NOT NULL,
    policy_code         VARCHAR(255)                NOT NULL,
    purpose_code        VARCHAR(255)                NOT NULL,
    lo_inc_code         VARCHAR(255)                NOT NULL,
    scope_code          VARCHAR(255)                NOT NULL
);

ALTER TABLE consent ADD CONSTRAINT "pk_consent" PRIMARY KEY (id);

CREATE INDEX "ix_consent_hicn" ON consent (hicn);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE consent ADD CONSTRAINT "pk_consent" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE consent
(
    id                  BIGINT                      NOT NULL,
    hicn                VARCHAR(64)                 NOT NULL,
    effective_date      DATE                        NOT NULL,
    policy_code         VARCHAR(255)                NOT NULL,
    purpose_code        VARCHAR(255)                NOT NULL,
    lo_inc_code         VARCHAR(255)                NOT NULL,
    scope_code          VARCHAR(255)                NOT NULL
);

ALTER TABLE consent ADD CONSTRAINT "pk_consent" PRIMARY KEY (id);

CREATE INDEX "ix_consent_hicn" ON consent (hicn);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_consent_hicn" ON consent (hicn)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/schema.sql::AB2D-514-CreateTable-consent::spathiyil ran successfully in 4ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-514-CreateTable-consent', 'spathiyil', 'db/changelog/v001/schema.sql', NOW(), 11, '9:75f9d2ea9723d62ad1031beeb7f27a22', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 4aac9cafbff0714ca60600a65fe21bd2
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:4aac9cafbff0714ca60600a65fe21bd2: as ee71ba99e55b09f82ac69c8dbbf93b71
Running Changeset: db/changelog/v001/seed_data.sql::initial_data_seed::dkrylovsb
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/seed_data.sql::initial_data_seed::dkrylovsb
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/seed_data.sql::initial_data_seed::dkrylovsb
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/seed_data.sql::initial_data_seed::dkrylovsb
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/seed_data.sql::initial_data_seed::dkrylovsb
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ADMIN');
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'SPONSOR');

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 1, 'Haag-Goodwin', null, null);
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999, 'Kutch LLC', null,
                                                                           (select id from sponsor where hpms_id=1));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'EileenCFrierson@example.com', 'Eileen', 'Frierson', 'EileenCFrierson@example.com', (select id from sponsor where hpms_id=999), true);

INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='EileenCFrierson@example.com'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0001', 'S0001',
                                                                                           (select id from sponsor where hpms_id=999), '2019-11-01');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ADMIN')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ADMIN');
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'SPONSOR');

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 1, 'Haag-Goodwin', null, null);
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999, 'Kutch LLC', null,
                                                                           (select id from sponsor where hpms_id=1));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'EileenCFrierson@example.com', 'Eileen', 'Frierson', 'EileenCFrierson@example.com', (select id from sponsor where hpms_id=999), true);

INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='EileenCFrierson@example.com'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0001', 'S0001',
                                                                                           (select id from sponsor where hpms_id=999), '2019-11-01');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'SPONSOR')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ADMIN');
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'SPONSOR');

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 1, 'Haag-Goodwin', null, null);
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999, 'Kutch LLC', null,
                                                                           (select id from sponsor where hpms_id=1));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'EileenCFrierson@example.com', 'Eileen', 'Frierson', 'EileenCFrierson@example.com', (select id from sponsor where hpms_id=999), true);

INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='EileenCFrierson@example.com'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0001', 'S0001',
                                                                                           (select id from sponsor where hpms_id=999), '2019-11-01');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 1, 'Haag-Goodwin', null, null)
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ADMIN');
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'SPONSOR');

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 1, 'Haag-Goodwin', null, null);
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999, 'Kutch LLC', null,
                                                                           (select id from sponsor where hpms_id=1));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'EileenCFrierson@example.com', 'Eileen', 'Frierson', 'EileenCFrierson@example.com', (select id from sponsor where hpms_id=999), true);

INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='EileenCFrierson@example.com'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0001', 'S0001',
                                                                                           (select id from sponsor where hpms_id=999), '2019-11-01');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999, 'Kutch LLC', null,
                                                                           (select id from sponsor where hpms_id=1))
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ADMIN');
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'SPONSOR');

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 1, 'Haag-Goodwin', null, null);
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999, 'Kutch LLC', null,
                                                                           (select id from sponsor where hpms_id=1));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'EileenCFrierson@example.com', 'Eileen', 'Frierson', 'EileenCFrierson@example.com', (select id from sponsor where hpms_id=999), true);

INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='EileenCFrierson@example.com'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0001', 'S0001',
                                                                                           (select id from sponsor where hpms_id=999), '2019-11-01');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'EileenCFrierson@example.com', 'Eileen', 'Frierson', 'EileenCFrierson@example.com', (select id from sponsor where hpms_id=999), true)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ADMIN');
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'SPONSOR');

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 1, 'Haag-Goodwin', null, null);
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999, 'Kutch LLC', null,
                                                                           (select id from sponsor where hpms_id=1));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'EileenCFrierson@example.com', 'Eileen', 'Frierson', 'EileenCFrierson@example.com', (select id from sponsor where hpms_id=999), true);

INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='EileenCFrierson@example.com'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0001', 'S0001',
                                                                                           (select id from sponsor where hpms_id=999), '2019-11-01');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='EileenCFrierson@example.com'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'))
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ADMIN');
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'SPONSOR');

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 1, 'Haag-Goodwin', null, null);
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999, 'Kutch LLC', null,
                                                                           (select id from sponsor where hpms_id=1));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'EileenCFrierson@example.com', 'Eileen', 'Frierson', 'EileenCFrierson@example.com', (select id from sponsor where hpms_id=999), true);

INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='EileenCFrierson@example.com'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0001', 'S0001',
                                                                                           (select id from sponsor where hpms_id=999), '2019-11-01');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0001', 'S0001',
                                                                                           (select id from sponsor where hpms_id=999), '2019-11-01')
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/seed_data.sql::initial_data_seed::dkrylovsb ran successfully in 11ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('initial_data_seed', 'dkrylovsb', 'db/changelog/v001/seed_data.sql', NOW(), 12, '9:ee71ba99e55b09f82ac69c8dbbf93b71', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 5708e3c0b35b4f660db06d3b5fb70a55
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:5708e3c0b35b4f660db06d3b5fb70a55: as 4b3e4557ae27dac019d4bab547e63167
Running Changeset: db/changelog/v001/ab2d-599-rename-consent.sql::ab2d-599-rename-consent-table-to-opt_out::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/ab2d-599-rename-consent.sql::ab2d-599-rename-consent-table-to-opt_out::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/ab2d-599-rename-consent.sql::ab2d-599-rename-consent-table-to-opt_out::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/ab2d-599-rename-consent.sql::ab2d-599-rename-consent-table-to-opt_out::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/ab2d-599-rename-consent.sql::ab2d-599-rename-consent-table-to-opt_out::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE consent RENAME TO opt_out;
ALTER TABLE opt_out RENAME CONSTRAINT "pk_consent" TO "pk_opt_out";
ALTER INDEX "ix_consent_hicn" RENAME TO "ix_opt_out_hicn";

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE consent RENAME TO opt_out
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE consent RENAME TO opt_out;
ALTER TABLE opt_out RENAME CONSTRAINT "pk_consent" TO "pk_opt_out";
ALTER INDEX "ix_consent_hicn" RENAME TO "ix_opt_out_hicn";

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE opt_out RENAME CONSTRAINT "pk_consent" TO "pk_opt_out"
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE consent RENAME TO opt_out;
ALTER TABLE opt_out RENAME CONSTRAINT "pk_consent" TO "pk_opt_out";
ALTER INDEX "ix_consent_hicn" RENAME TO "ix_opt_out_hicn";

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER INDEX "ix_consent_hicn" RENAME TO "ix_opt_out_hicn"
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/ab2d-599-rename-consent.sql::ab2d-599-rename-consent-table-to-opt_out::spathiyil ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('ab2d-599-rename-consent-table-to-opt_out', 'spathiyil', 'db/changelog/v001/ab2d-599-rename-consent.sql', NOW(), 13, '9:4b3e4557ae27dac019d4bab547e63167', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as adfd50e9b8368a8851e709960fa70a0e
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:adfd50e9b8368a8851e709960fa70a0e: as 9b2e09803d4919418a659745079b7cf2
Running Changeset: db/changelog/v001/add_contract_number_to_job.sql::raw::includeAll
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_contract_number_to_job.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_contract_number_to_job.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_contract_number_to_job.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_contract_number_to_job.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE job ADD COLUMN contract_id BIGINT DEFAULT NULL;
ALTER TABLE job ADD CONSTRAINT "fk_job_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE job ADD COLUMN contract_id BIGINT DEFAULT NULL;
ALTER TABLE job ADD CONSTRAINT "fk_job_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] 0 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_contract_number_to_job.sql::raw::includeAll ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('raw', 'includeAll', 'db/changelog/v001/add_contract_number_to_job.sql', NOW(), 14, '9:9b2e09803d4919418a659745079b7cf2', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 178023769cbd81a81b1323f1768a46fe
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:178023769cbd81a81b1323f1768a46fe: as 3a9c54c552a200bf66e0b90da217087c
Running Changeset: db/changelog/v001/remove_not_null_job_output.sql::raw::includeAll
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/remove_not_null_job_output.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/remove_not_null_job_output.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/remove_not_null_job_output.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/remove_not_null_job_output.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE job_output ALTER COLUMN fhir_resource_type DROP NOT NULL;
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE job_output ALTER COLUMN fhir_resource_type DROP NOT NULL
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/remove_not_null_job_output.sql::raw::includeAll ran successfully in 1ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('raw', 'includeAll', 'db/changelog/v001/remove_not_null_job_output.sql', NOW(), 15, '9:3a9c54c552a200bf66e0b90da217087c', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 06d5d28160259816428c139633d42c61
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:06d5d28160259816428c139633d42c61: as 7781e9cb5933f752dff508cf7f6671cf
Running Changeset: db/changelog/v001/ab2d-828-increase-username-column-length.sql::ab2d-828-increase-username-column-length::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/ab2d-828-increase-username-column-length.sql::ab2d-828-increase-username-column-length::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/ab2d-828-increase-username-column-length.sql::ab2d-828-increase-username-column-length::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/ab2d-828-increase-username-column-length.sql::ab2d-828-increase-username-column-length::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/ab2d-828-increase-username-column-length.sql::ab2d-828-increase-username-column-length::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE user_account ALTER COLUMN username TYPE VARCHAR(255)

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE user_account ALTER COLUMN username TYPE VARCHAR(255)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/ab2d-828-increase-username-column-length.sql::ab2d-828-increase-username-column-length::spathiyil ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('ab2d-828-increase-username-column-length', 'spathiyil', 'db/changelog/v001/ab2d-828-increase-username-column-length.sql', NOW(), 16, '9:7781e9cb5933f752dff508cf7f6671cf', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ad42ba95c84b96fd0cafd9079243401c
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ad42ba95c84b96fd0cafd9079243401c: as dd173fefb26f7b5372ecac663c91df46
Running Changeset: db/changelog/v001/ab2d-777-resolve_diff_ids.sql::ab2d-777-opt-out-resolve-ben-id-mbi::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/ab2d-777-resolve_diff_ids.sql::ab2d-777-opt-out-resolve-ben-id-mbi::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/ab2d-777-resolve_diff_ids.sql::ab2d-777-opt-out-resolve-ben-id-mbi::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/ab2d-777-resolve_diff_ids.sql::ab2d-777-opt-out-resolve-ben-id-mbi::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/ab2d-777-resolve_diff_ids.sql::ab2d-777-opt-out-resolve-ben-id-mbi::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE opt_out ADD COLUMN mbi VARCHAR(255);
ALTER TABLE opt_out ADD COLUMN ccw_id VARCHAR(255);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE opt_out ADD COLUMN mbi VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE opt_out ADD COLUMN mbi VARCHAR(255);
ALTER TABLE opt_out ADD COLUMN ccw_id VARCHAR(255);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE opt_out ADD COLUMN ccw_id VARCHAR(255)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/ab2d-777-resolve_diff_ids.sql::ab2d-777-opt-out-resolve-ben-id-mbi::lsharshar ran successfully in 1ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('ab2d-777-opt-out-resolve-ben-id-mbi', 'lsharshar', 'db/changelog/v001/ab2d-777-resolve_diff_ids.sql', NOW(), 17, '9:dd173fefb26f7b5372ecac663c91df46', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as c868dda776210c188ccb3fbd159112ca
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:c868dda776210c188ccb3fbd159112ca: as b83ad59423c60b82e39ded368c9a562f
Running Changeset: db/changelog/v001/add_sbx_accounts.sql::raw::includeAll
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_sbx_accounts.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_sbx_accounts.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_sbx_accounts.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_sbx_accounts.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 8, 'PDP-SBX', null, null);

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 2, 'PDP-100', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 3, 'PDP-1000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 4, 'PDP-2000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 5, 'PDP-5000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 6, 'PDP-10000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 7, 'PDP-30000', null, (select id from sponsor where hpms_id=8));

UPDATE user_account SET enabled = false WHERE username = 'EileenCFrierson@example.com';

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lsrdZw5uWRx297', null, null, null, (select id from sponsor where hpms_id=2), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lsrdZw5uWRx297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lc65ErV8OmY297', null, null, null, (select id from sponsor where hpms_id=3), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lc65ErV8OmY297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lkicpxFGkGt297', null, null, null, (select id from sponsor where hpms_id=4), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lkicpxFGkGt297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0l6c1tQbTikz297', null, null, null, (select id from sponsor where hpms_id=5), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0l6c1tQbTikz297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lm9qoAtJHqC297', null, null, null, (select id from sponsor where hpms_id=6), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lm9qoAtJHqC297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lrjyVeVAZjt297', null, null, null, (select id from sponsor where hpms_id=7), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lrjyVeVAZjt297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0000', 'S0000',
                                                                                           (select id from sponsor where hpms_id=2), '2019-11-01');

UPDATE contract SET sponsor_id = (select id from sponsor where hpms_id = 3) WHERE contract_number = 'S0001';

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0002', 'S0002',
                                                                                           (select id from sponsor where hpms_id=4), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0005', 'S0005',
                                                                                           (select id from sponsor where hpms_id=5), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0010', 'S0010',
                                                                                           (select id from sponsor where hpms_id=6), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0030', 'S0030',
                                                                                           (select id from sponsor where hpms_id=7), '2019-11-01');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 8, 'PDP-SBX', null, null);

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 2, 'PDP-100', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 3, 'PDP-1000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 4, 'PDP-2000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 5, 'PDP-5000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 6, 'PDP-10000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 7, 'PDP-30000', null, (select id from sponsor where hpms_id=8));

UPDATE user_account SET enabled = false WHERE username = 'EileenCFrierson@example.com';

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lsrdZw5uWRx297', null, null, null, (select id from sponsor where hpms_id=2), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lsrdZw5uWRx297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lc65ErV8OmY297', null, null, null, (select id from sponsor where hpms_id=3), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lc65ErV8OmY297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lkicpxFGkGt297', null, null, null, (select id from sponsor where hpms_id=4), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lkicpxFGkGt297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0l6c1tQbTikz297', null, null, null, (select id from sponsor where hpms_id=5), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0l6c1tQbTikz297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lm9qoAtJHqC297', null, null, null, (select id from sponsor where hpms_id=6), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lm9qoAtJHqC297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lrjyVeVAZjt297', null, null, null, (select id from sponsor where hpms_id=7), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lrjyVeVAZjt297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0000', 'S0000',
                                                                                           (select id from sponsor where hpms_id=2), '2019-11-01');

UPDATE contract SET sponsor_id = (select id from sponsor where hpms_id = 3) WHERE contract_number = 'S0001';

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0002', 'S0002',
                                                                                           (select id from sponsor where hpms_id=4), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0005', 'S0005',
                                                                                           (select id from sponsor where hpms_id=5), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0010', 'S0010',
                                                                                           (select id from sponsor where hpms_id=6), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0030', 'S0030',
                                                                                           (select id from sponsor where hpms_id=7), '2019-11-01')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_sbx_accounts.sql::raw::includeAll ran successfully in 9ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('raw', 'includeAll', 'db/changelog/v001/add_sbx_accounts.sql', NOW(), 18, '9:b83ad59423c60b82e39ded368c9a562f', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 70b166b87020bc4cdfe6965125bae293
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:70b166b87020bc4cdfe6965125bae293: as 9d56af5cd1634287db1eb7a9c2df9ea5
Running Changeset: db/changelog/v001/add_multicontract_data.sql::raw::includeAll
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_multicontract_data.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_multicontract_data.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_multicontract_data.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_multicontract_data.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 9, 'AB2D-PDP-MULTICONTRACT', null, null);

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 10, 'AB2D-PDP-S0003', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 11, 'AB2D-PDP-S0004', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 12, 'AB2D-PDP-S0006', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 13, 'AB2D-PDP-S0007', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 14, 'AB2D-PDP-S0008', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 15, 'AB2D-PDP-S0009', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 16, 'AB2D-PDP-S0015', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 17, 'AB2D-PDP-S0100', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 18, 'AB2D-PDP-S0200', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 19, 'AB2D-PDP-S0300', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 20, 'AB2D-PDP-S0400', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 21, 'AB2D-PDP-S0500', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 22, 'AB2D-PDP-S1000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 23, 'AB2D-PDP-S2000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 24, 'AB2D-PDP-S3000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 25, 'AB2D-PDP-S5000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 26, 'AB2D-PDP-S9000', null, (select id from sponsor where hpms_id=9));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t7wfhvB2qSqPg297', null, null, null, (select id from sponsor where hpms_id=9), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t7wfhvB2qSqPg297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t7wdgfB2qSRTg397', null, null, null, (select id from sponsor where hpms_id=10), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t7wdgfB2qSRTg397'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca27wdgfKefjefTg534', null, null, null, (select id from sponsor where hpms_id=11), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca27wdgfKefjefTg534'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca27wcvnxkjjefTg334', null, null, null, (select id from sponsor where hpms_id=12), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca27wcvnxkjjefTg334'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca27w535jfejefTg124', null, null, null, (select id from sponsor where hpms_id=13), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca27w535jfejefTg124'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca902fhewffhhhwg144', null, null, null, (select id from sponsor where hpms_id=14), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca902fhewffhhhwg144'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '039fuewmn44fhhhwg144', null, null, null, (select id from sponsor where hpms_id=15), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='039fuewmn44fhhhwg144'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '832hfwef93hfkkf3hhhh', null, null, null, (select id from sponsor where hpms_id=16), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='832hfwef93hfkkf3hhhh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '9fhselhffhf93jhflshh', null, null, null, (select id from sponsor where hpms_id=17), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='9fhselhffhf93jhflshh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '39fhklsfzxmneu32feff', null, null, null, (select id from sponsor where hpms_id=18), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='39fhklsfzxmneu32feff'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'bvk329df23fhjfsdjkef', null, null, null, (select id from sponsor where hpms_id=19), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='bvk329df23fhjfsdjkef'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vdbewfjzjhfew93fh3hh', null, null, null, (select id from sponsor where hpms_id=20), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vdbewfjzjhfew93fh3hh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'zvhjefio239fhiew2fff', null, null, null, (select id from sponsor where hpms_id=21), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='zvhjefio239fhiew2fff'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vxcliwefnl239f03f2jf', null, null, null, (select id from sponsor where hpms_id=22), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vxcliwefnl239f03f2jf'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vzdhwfehj3249fwejkfh', null, null, null, (select id from sponsor where hpms_id=23), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vzdhwfehj3249fwejkfh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vznkweicln349fn32rjj', null, null, null, (select id from sponsor where hpms_id=24), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vznkweicln349fn32rjj'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'xi43hl32sdfl3kfkljew', null, null, null, (select id from sponsor where hpms_id=25), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='xi43hl32sdfl3kfkljew'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'afwjil423fweohfwejkl', null, null, null, (select id from sponsor where hpms_id=26), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='afwjil423fweohfwejkl'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0003', 'S0003',
                                                                                           (select id from sponsor where hpms_id=10), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0004', 'S0004',
                                                                                           (select id from sponsor where hpms_id=11), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0006', 'S0006',
                                                                                           (select id from sponsor where hpms_id=12), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0007', 'S0007',
                                                                                           (select id from sponsor where hpms_id=13), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0008', 'S0008',
                                                                                           (select id from sponsor where hpms_id=14), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0009', 'S0009',
                                                                                           (select id from sponsor where hpms_id=15), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0015', 'S0015',
                                                                                           (select id from sponsor where hpms_id=16), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0100', 'S0100',
                                                                                           (select id from sponsor where hpms_id=17), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0200', 'S0200',
                                                                                           (select id from sponsor where hpms_id=18), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0300', 'S0300',
                                                                                           (select id from sponsor where hpms_id=19), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0400', 'S0400',
                                                                                           (select id from sponsor where hpms_id=20), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0500', 'S0500',
                                                                                           (select id from sponsor where hpms_id=21), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S1000', 'S1000',
                                                                                           (select id from sponsor where hpms_id=22), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S2000', 'S2000',
                                                                                           (select id from sponsor where hpms_id=23), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S3000', 'S3000',
                                                                                           (select id from sponsor where hpms_id=24), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S5000', 'S5000',
                                                                                           (select id from sponsor where hpms_id=25), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S9000', 'S9000',
                                                                                           (select id from sponsor where hpms_id=26), '2019-11-01');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 9, 'AB2D-PDP-MULTICONTRACT', null, null);

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 10, 'AB2D-PDP-S0003', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 11, 'AB2D-PDP-S0004', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 12, 'AB2D-PDP-S0006', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 13, 'AB2D-PDP-S0007', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 14, 'AB2D-PDP-S0008', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 15, 'AB2D-PDP-S0009', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 16, 'AB2D-PDP-S0015', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 17, 'AB2D-PDP-S0100', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 18, 'AB2D-PDP-S0200', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 19, 'AB2D-PDP-S0300', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 20, 'AB2D-PDP-S0400', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 21, 'AB2D-PDP-S0500', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 22, 'AB2D-PDP-S1000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 23, 'AB2D-PDP-S2000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 24, 'AB2D-PDP-S3000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 25, 'AB2D-PDP-S5000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 26, 'AB2D-PDP-S9000', null, (select id from sponsor where hpms_id=9));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t7wfhvB2qSqPg297', null, null, null, (select id from sponsor where hpms_id=9), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t7wfhvB2qSqPg297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t7wdgfB2qSRTg397', null, null, null, (select id from sponsor where hpms_id=10), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t7wdgfB2qSRTg397'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca27wdgfKefjefTg534', null, null, null, (select id from sponsor where hpms_id=11), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca27wdgfKefjefTg534'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca27wcvnxkjjefTg334', null, null, null, (select id from sponsor where hpms_id=12), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca27wcvnxkjjefTg334'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca27w535jfejefTg124', null, null, null, (select id from sponsor where hpms_id=13), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca27w535jfejefTg124'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca902fhewffhhhwg144', null, null, null, (select id from sponsor where hpms_id=14), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca902fhewffhhhwg144'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '039fuewmn44fhhhwg144', null, null, null, (select id from sponsor where hpms_id=15), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='039fuewmn44fhhhwg144'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '832hfwef93hfkkf3hhhh', null, null, null, (select id from sponsor where hpms_id=16), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='832hfwef93hfkkf3hhhh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '9fhselhffhf93jhflshh', null, null, null, (select id from sponsor where hpms_id=17), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='9fhselhffhf93jhflshh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '39fhklsfzxmneu32feff', null, null, null, (select id from sponsor where hpms_id=18), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='39fhklsfzxmneu32feff'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'bvk329df23fhjfsdjkef', null, null, null, (select id from sponsor where hpms_id=19), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='bvk329df23fhjfsdjkef'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vdbewfjzjhfew93fh3hh', null, null, null, (select id from sponsor where hpms_id=20), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vdbewfjzjhfew93fh3hh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'zvhjefio239fhiew2fff', null, null, null, (select id from sponsor where hpms_id=21), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='zvhjefio239fhiew2fff'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vxcliwefnl239f03f2jf', null, null, null, (select id from sponsor where hpms_id=22), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vxcliwefnl239f03f2jf'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vzdhwfehj3249fwejkfh', null, null, null, (select id from sponsor where hpms_id=23), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vzdhwfehj3249fwejkfh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vznkweicln349fn32rjj', null, null, null, (select id from sponsor where hpms_id=24), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vznkweicln349fn32rjj'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'xi43hl32sdfl3kfkljew', null, null, null, (select id from sponsor where hpms_id=25), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='xi43hl32sdfl3kfkljew'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'afwjil423fweohfwejkl', null, null, null, (select id from sponsor where hpms_id=26), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='afwjil423fweohfwejkl'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0003', 'S0003',
                                                                                           (select id from sponsor where hpms_id=10), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0004', 'S0004',
                                                                                           (select id from sponsor where hpms_id=11), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0006', 'S0006',
                                                                                           (select id from sponsor where hpms_id=12), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0007', 'S0007',
                                                                                           (select id from sponsor where hpms_id=13), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0008', 'S0008',
                                                                                           (select id from sponsor where hpms_id=14), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0009', 'S0009',
                                                                                           (select id from sponsor where hpms_id=15), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0015', 'S0015',
                                                                                           (select id from sponsor where hpms_id=16), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0100', 'S0100',
                                                                                           (select id from sponsor where hpms_id=17), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0200', 'S0200',
                                                                                           (select id from sponsor where hpms_id=18), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0300', 'S0300',
                                                                                           (select id from sponsor where hpms_id=19), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0400', 'S0400',
                                                                                           (select id from sponsor where hpms_id=20), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0500', 'S0500',
                                                                                           (select id from sponsor where hpms_id=21), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S1000', 'S1000',
                                                                                           (select id from sponsor where hpms_id=22), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S2000', 'S2000',
                                                                                           (select id from sponsor where hpms_id=23), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S3000', 'S3000',
                                                                                           (select id from sponsor where hpms_id=24), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S5000', 'S5000',
                                                                                           (select id from sponsor where hpms_id=25), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S9000', 'S9000',
                                                                                           (select id from sponsor where hpms_id=26), '2019-11-01')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_multicontract_data.sql::raw::includeAll ran successfully in 28ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('raw', 'includeAll', 'db/changelog/v001/add_multicontract_data.sql', NOW(), 19, '9:9d56af5cd1634287db1eb7a9c2df9ea5', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 7a790a7f357fad3726b2fc30e0db63ed
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:7a790a7f357fad3726b2fc30e0db63ed: as 4f46e30d2056d80b99c42535850a001b
Running Changeset: db/changelog/v001/update_attestation_date.sql::AB2D-747-filter-out-claims-on-dates::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/update_attestation_date.sql::AB2D-747-filter-out-claims-on-dates::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/update_attestation_date.sql::AB2D-747-filter-out-claims-on-dates::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/update_attestation_date.sql::AB2D-747-filter-out-claims-on-dates::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/update_attestation_date.sql::AB2D-747-filter-out-claims-on-dates::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET attested_on='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET attested_on='2000-01-01'
[2025-06-25 13:39:59] FINE [liquibase.executor] 23 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/update_attestation_date.sql::AB2D-747-filter-out-claims-on-dates::lsharshar ran successfully in 0ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-747-filter-out-claims-on-dates', 'lsharshar', 'db/changelog/v001/update_attestation_date.sql', NOW(), 20, '9:4f46e30d2056d80b99c42535850a001b', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 05dd1d5a4ce8b6b1ac05133f0899fc71
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:05dd1d5a4ce8b6b1ac05133f0899fc71: as b378ed890aa1f0bb3d6bb802791dbe77
Running Changeset: db/changelog/v001/add_concurrent_job_column.sql::add_concurrent_job_column::adaykin
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_concurrent_job_column.sql::add_concurrent_job_column::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_concurrent_job_column.sql::add_concurrent_job_column::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_concurrent_job_column.sql::add_concurrent_job_column::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_concurrent_job_column.sql::add_concurrent_job_column::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE user_account ADD COLUMN max_parallel_jobs INT DEFAULT 1 NOT NULL;

UPDATE user_account SET max_parallel_jobs = 3;

UPDATE user_account SET max_parallel_jobs = 30 WHERE username = '0oa2t7wfhvB2qSqPg297';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE user_account ADD COLUMN max_parallel_jobs INT DEFAULT 1 NOT NULL
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE user_account ADD COLUMN max_parallel_jobs INT DEFAULT 1 NOT NULL;

UPDATE user_account SET max_parallel_jobs = 3;

UPDATE user_account SET max_parallel_jobs = 30 WHERE username = '0oa2t7wfhvB2qSqPg297';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE user_account SET max_parallel_jobs = 3
[2025-06-25 13:39:59] FINE [liquibase.executor] 25 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE user_account ADD COLUMN max_parallel_jobs INT DEFAULT 1 NOT NULL;

UPDATE user_account SET max_parallel_jobs = 3;

UPDATE user_account SET max_parallel_jobs = 30 WHERE username = '0oa2t7wfhvB2qSqPg297';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE user_account SET max_parallel_jobs = 30 WHERE username = '0oa2t7wfhvB2qSqPg297'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_concurrent_job_column.sql::add_concurrent_job_column::adaykin ran successfully in 3ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_concurrent_job_column', 'adaykin', 'db/changelog/v001/add_concurrent_job_column.sql', NOW(), 21, '9:b378ed890aa1f0bb3d6bb802791dbe77', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as f220f9f34909d5fa6cfb02968e5e80b4
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:f220f9f34909d5fa6cfb02968e5e80b4: as 08df1ef91a4826baef5e32b58925ac94
Running Changeset: db/changelog/v001/add_downloaded_to_job_output.sql::add_downloaded_to_job_output::adaykin
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_downloaded_to_job_output.sql::add_downloaded_to_job_output::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_downloaded_to_job_output.sql::add_downloaded_to_job_output::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_downloaded_to_job_output.sql::add_downloaded_to_job_output::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_downloaded_to_job_output.sql::add_downloaded_to_job_output::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE job_output ADD COLUMN downloaded boolean NOT NULL DEFAULT false;

ALTER TABLE job_output ADD CONSTRAINT "uc_job_id_file_path" UNIQUE (job_id, file_path);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE job_output ADD COLUMN downloaded boolean NOT NULL DEFAULT false
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE job_output ADD COLUMN downloaded boolean NOT NULL DEFAULT false;

ALTER TABLE job_output ADD CONSTRAINT "uc_job_id_file_path" UNIQUE (job_id, file_path);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE job_output ADD CONSTRAINT "uc_job_id_file_path" UNIQUE (job_id, file_path)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_downloaded_to_job_output.sql::add_downloaded_to_job_output::adaykin ran successfully in 3ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_downloaded_to_job_output', 'adaykin', 'db/changelog/v001/add_downloaded_to_job_output.sql', NOW(), 22, '9:08df1ef91a4826baef5e32b58925ac94', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as e37d185ece301231524e61e652e8e78f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:e37d185ece301231524e61e652e8e78f: as fa7c5e5742106db24ac4b365e4599721
Running Changeset: db/changelog/v001/ab2d-934-allow-for-zip-downloads.sql::ab2d-934-allow-for-zip-downloads::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/ab2d-934-allow-for-zip-downloads.sql::ab2d-934-allow-for-zip-downloads::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/ab2d-934-allow-for-zip-downloads.sql::ab2d-934-allow-for-zip-downloads::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/ab2d-934-allow-for-zip-downloads.sql::ab2d-934-allow-for-zip-downloads::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/ab2d-934-allow-for-zip-downloads.sql::ab2d-934-allow-for-zip-downloads::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE job ADD COLUMN output_format VARCHAR(255);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE job ADD COLUMN output_format VARCHAR(255)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/ab2d-934-allow-for-zip-downloads.sql::ab2d-934-allow-for-zip-downloads::lsharshar ran successfully in 1ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('ab2d-934-allow-for-zip-downloads', 'lsharshar', 'db/changelog/v001/ab2d-934-allow-for-zip-downloads.sql', NOW(), 23, '9:fa7c5e5742106db24ac4b365e4599721', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 632b6675cc25c0ae238689ec66e15e09
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:632b6675cc25c0ae238689ec66e15e09: as a02e3a80860e3908aaa91c1c9dcffb59
Running Changeset: db/changelog/v001/ab2d-1069-recreate-coverage-table.sql::ab2d-1069-drop-coverage-table::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/ab2d-1069-recreate-coverage-table.sql::ab2d-1069-drop-coverage-table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/ab2d-1069-recreate-coverage-table.sql::ab2d-1069-drop-coverage-table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/ab2d-1069-recreate-coverage-table.sql::ab2d-1069-drop-coverage-table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/ab2d-1069-recreate-coverage-table.sql::ab2d-1069-drop-coverage-table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
DROP TABLE coverage;


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
DROP TABLE coverage
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/ab2d-1069-recreate-coverage-table.sql::ab2d-1069-drop-coverage-table::spathiyil ran successfully in 3ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('ab2d-1069-drop-coverage-table', 'spathiyil', 'db/changelog/v001/ab2d-1069-recreate-coverage-table.sql', NOW(), 24, '9:a02e3a80860e3908aaa91c1c9dcffb59', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as c58a3a542a4113f776f6433df916e178
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:c58a3a542a4113f776f6433df916e178: as 9f2eb64c2f384109ee2b2cc1d6c0f3ae
Running Changeset: db/changelog/v001/ab2d-1069-recreate-coverage-table.sql::ab2d-1069-recreate-coverage-table-with-id-and-month::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/ab2d-1069-recreate-coverage-table.sql::ab2d-1069-recreate-coverage-table-with-id-and-month::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/ab2d-1069-recreate-coverage-table.sql::ab2d-1069-recreate-coverage-table-with-id-and-month::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/ab2d-1069-recreate-coverage-table.sql::ab2d-1069-recreate-coverage-table-with-id-and-month::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/ab2d-1069-recreate-coverage-table.sql::ab2d-1069-recreate-coverage-table-with-id-and-month::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage
(
    id                  BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL,
    beneficiary_id      BIGINT              NOT NULL,
    part_d_month        INTEGER             NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month" UNIQUE (contract_id, beneficiary_id, part_d_month);

CREATE INDEX "ix_coverage_contract_id_month" ON coverage (contract_id, part_d_month);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE coverage
(
    id                  BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL,
    beneficiary_id      BIGINT              NOT NULL,
    part_d_month        INTEGER             NOT NULL
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage
(
    id                  BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL,
    beneficiary_id      BIGINT              NOT NULL,
    part_d_month        INTEGER             NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month" UNIQUE (contract_id, beneficiary_id, part_d_month);

CREATE INDEX "ix_coverage_contract_id_month" ON coverage (contract_id, part_d_month);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage
(
    id                  BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL,
    beneficiary_id      BIGINT              NOT NULL,
    part_d_month        INTEGER             NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month" UNIQUE (contract_id, beneficiary_id, part_d_month);

CREATE INDEX "ix_coverage_contract_id_month" ON coverage (contract_id, part_d_month);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage
(
    id                  BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL,
    beneficiary_id      BIGINT              NOT NULL,
    part_d_month        INTEGER             NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month" UNIQUE (contract_id, beneficiary_id, part_d_month);

CREATE INDEX "ix_coverage_contract_id_month" ON coverage (contract_id, part_d_month);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage
(
    id                  BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL,
    beneficiary_id      BIGINT              NOT NULL,
    part_d_month        INTEGER             NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month" UNIQUE (contract_id, beneficiary_id, part_d_month);

CREATE INDEX "ix_coverage_contract_id_month" ON coverage (contract_id, part_d_month);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month" UNIQUE (contract_id, beneficiary_id, part_d_month)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage
(
    id                  BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL,
    beneficiary_id      BIGINT              NOT NULL,
    part_d_month        INTEGER             NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month" UNIQUE (contract_id, beneficiary_id, part_d_month);

CREATE INDEX "ix_coverage_contract_id_month" ON coverage (contract_id, part_d_month);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_coverage_contract_id_month" ON coverage (contract_id, part_d_month)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/ab2d-1069-recreate-coverage-table.sql::ab2d-1069-recreate-coverage-table-with-id-and-month::spathiyil ran successfully in 7ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('ab2d-1069-recreate-coverage-table-with-id-and-month', 'spathiyil', 'db/changelog/v001/ab2d-1069-recreate-coverage-table.sql', NOW(), 25, '9:9f2eb64c2f384109ee2b2cc1d6c0f3ae', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 4949ff7b25b33dde1da6b331b200fe90
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:4949ff7b25b33dde1da6b331b200fe90: as 4b321540bd889808d59d708b44c4dfb8
Running Changeset: db/changelog/v001/add_properties_table.sql::add_properties_table::adaykin
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_properties_table.sql::add_properties_table::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_properties_table.sql::add_properties_table::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_properties_table.sql::add_properties_table::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_properties_table.sql::add_properties_table::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE properties (
    id BIGINT NOT NULL,
    key VARCHAR(80) NOT NULL,
    value VARCHAR(255) NOT NULL
);

ALTER TABLE properties ADD CONSTRAINT "uc_properties_key" UNIQUE (key);
ALTER TABLE properties ADD CONSTRAINT "pk_properties" PRIMARY KEY (id);

INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.core.pool.size', 10);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.max.pool.size', 150);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.scaleToMax.time', 900);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE properties (
    id BIGINT NOT NULL,
    key VARCHAR(80) NOT NULL,
    value VARCHAR(255) NOT NULL
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE properties (
    id BIGINT NOT NULL,
    key VARCHAR(80) NOT NULL,
    value VARCHAR(255) NOT NULL
);

ALTER TABLE properties ADD CONSTRAINT "uc_properties_key" UNIQUE (key);
ALTER TABLE properties ADD CONSTRAINT "pk_properties" PRIMARY KEY (id);

INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.core.pool.size', 10);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.max.pool.size', 150);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.scaleToMax.time', 900);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE properties ADD CONSTRAINT "uc_properties_key" UNIQUE (key)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE properties (
    id BIGINT NOT NULL,
    key VARCHAR(80) NOT NULL,
    value VARCHAR(255) NOT NULL
);

ALTER TABLE properties ADD CONSTRAINT "uc_properties_key" UNIQUE (key);
ALTER TABLE properties ADD CONSTRAINT "pk_properties" PRIMARY KEY (id);

INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.core.pool.size', 10);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.max.pool.size', 150);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.scaleToMax.time', 900);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE properties ADD CONSTRAINT "pk_properties" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE properties (
    id BIGINT NOT NULL,
    key VARCHAR(80) NOT NULL,
    value VARCHAR(255) NOT NULL
);

ALTER TABLE properties ADD CONSTRAINT "uc_properties_key" UNIQUE (key);
ALTER TABLE properties ADD CONSTRAINT "pk_properties" PRIMARY KEY (id);

INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.core.pool.size', 10);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.max.pool.size', 150);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.scaleToMax.time', 900);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.core.pool.size', 10)
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE properties (
    id BIGINT NOT NULL,
    key VARCHAR(80) NOT NULL,
    value VARCHAR(255) NOT NULL
);

ALTER TABLE properties ADD CONSTRAINT "uc_properties_key" UNIQUE (key);
ALTER TABLE properties ADD CONSTRAINT "pk_properties" PRIMARY KEY (id);

INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.core.pool.size', 10);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.max.pool.size', 150);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.scaleToMax.time', 900);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.max.pool.size', 150)
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE properties (
    id BIGINT NOT NULL,
    key VARCHAR(80) NOT NULL,
    value VARCHAR(255) NOT NULL
);

ALTER TABLE properties ADD CONSTRAINT "uc_properties_key" UNIQUE (key);
ALTER TABLE properties ADD CONSTRAINT "pk_properties" PRIMARY KEY (id);

INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.core.pool.size', 10);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.max.pool.size', 150);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.scaleToMax.time', 900);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.scaleToMax.time', 900)
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_properties_table.sql::add_properties_table::adaykin ran successfully in 6ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_properties_table', 'adaykin', 'db/changelog/v001/add_properties_table.sql', NOW(), 26, '9:4b321540bd889808d59d708b44c4dfb8', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as a241f6a84fb5e6da46166a60d62d83d1
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:a241f6a84fb5e6da46166a60d62d83d1: as 1ce4528cb7e133ab82a4302e19f96eae
Running Changeset: db/changelog/v001/modify_hpms_ids.sql::modify_hpms_ids::adaykin
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/modify_hpms_ids.sql::modify_hpms_ids::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/modify_hpms_ids.sql::modify_hpms_ids::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/modify_hpms_ids.sql::modify_hpms_ids::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/modify_hpms_ids.sql::modify_hpms_ids::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE sponsor SET hpms_id = hpms_id * 10000;
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE sponsor SET hpms_id = hpms_id * 10000
[2025-06-25 13:39:59] FINE [liquibase.executor] 27 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/modify_hpms_ids.sql::modify_hpms_ids::adaykin ran successfully in 1ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('modify_hpms_ids', 'adaykin', 'db/changelog/v001/modify_hpms_ids.sql', NOW(), 27, '9:1ce4528cb7e133ab82a4302e19f96eae', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 7af1824f38a7f8f36c1f65b4f28ced04
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:7af1824f38a7f8f36c1f65b4f28ced04: as 2892d085db89c57d490428afd554a164
Running Changeset: db/changelog/v001/add_maintenance_mode_property.sql::raw::includeAll
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_maintenance_mode_property.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_maintenance_mode_property.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_maintenance_mode_property.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_maintenance_mode_property.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'maintenance.mode', 'false');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'maintenance.mode', 'false')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_maintenance_mode_property.sql::raw::includeAll ran successfully in 1ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('raw', 'includeAll', 'db/changelog/v001/add_maintenance_mode_property.sql', NOW(), 28, '9:2892d085db89c57d490428afd554a164', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 7e9182177f7fef478f813e3a89c628cd
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:7e9182177f7fef478f813e3a89c628cd: as 1f680525d625501055d75f689cad740c
Running Changeset: db/changelog/v001/add_contract2beneCache_toggle_property.sql::add_contract2benecache_toggle_in_property_table::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_contract2beneCache_toggle_property.sql::add_contract2benecache_toggle_in_property_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_contract2beneCache_toggle_property.sql::add_contract2benecache_toggle_in_property_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_contract2beneCache_toggle_property.sql::add_contract2benecache_toggle_in_property_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_contract2beneCache_toggle_property.sql::add_contract2benecache_toggle_in_property_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'ContractToBeneCachingOn', 'false');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'ContractToBeneCachingOn', 'false')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_contract2beneCache_toggle_property.sql::add_contract2benecache_toggle_in_property_table::spathiyil ran successfully in 0ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_contract2benecache_toggle_in_property_table', 'spathiyil', 'db/changelog/v001/add_contract2beneCache_toggle_property.sql', NOW(), 29, '9:1f680525d625501055d75f689cad740c', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 4b1c77c39c46b0bc3753a2bf3ca6f8f5
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:4b1c77c39c46b0bc3753a2bf3ca6f8f5: as 829e6389481f7656dd0456fc1e48c153
Running Changeset: db/changelog/v001/add_zip_support_toggle_property.sql::ab2d_1110_add_zip_support_toggle_in_property_table::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_zip_support_toggle_property.sql::ab2d_1110_add_zip_support_toggle_in_property_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_zip_support_toggle_property.sql::ab2d_1110_add_zip_support_toggle_in_property_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_zip_support_toggle_property.sql::ab2d_1110_add_zip_support_toggle_in_property_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_zip_support_toggle_property.sql::ab2d_1110_add_zip_support_toggle_in_property_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'ZipSupportOn', 'false');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'ZipSupportOn', 'false')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_zip_support_toggle_property.sql::ab2d_1110_add_zip_support_toggle_in_property_table::spathiyil ran successfully in 1ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('ab2d_1110_add_zip_support_toggle_in_property_table', 'spathiyil', 'db/changelog/v001/add_zip_support_toggle_property.sql', NOW(), 30, '9:829e6389481f7656dd0456fc1e48c153', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 50903046ad9677a312a51fd043450ea1
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:50903046ad9677a312a51fd043450ea1: as aa5b43dc3feb00237ea290a398b888bb
Running Changeset: db/changelog/v001/ab2d-1144-add-since-val.sql::ab2d-1144-add-since-val::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/ab2d-1144-add-since-val.sql::ab2d-1144-add-since-val::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/ab2d-1144-add-since-val.sql::ab2d-1144-add-since-val::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/ab2d-1144-add-since-val.sql::ab2d-1144-add-since-val::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/ab2d-1144-add-since-val.sql::ab2d-1144-add-since-val::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
--  -------------------------------------------------------------------------------------------------------------------

alter table job add column since TIMESTAMP WITH TIME ZONE;

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
alter table job add column since TIMESTAMP WITH TIME ZONE
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/ab2d-1144-add-since-val.sql::ab2d-1144-add-since-val::lsharshar ran successfully in 0ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('ab2d-1144-add-since-val', 'lsharshar', 'db/changelog/v001/ab2d-1144-add-since-val.sql', NOW(), 31, '9:aa5b43dc3feb00237ea290a398b888bb', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 578645dacda04cae13445ed14dc9bff0
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:578645dacda04cae13445ed14dc9bff0: as a30f704cc8f7b6ddd441184dc7d0763e
Running Changeset: db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql::ab2d_1167_add_column_to_opt_out_table::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql::ab2d_1167_add_column_to_opt_out_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql::ab2d_1167_add_column_to_opt_out_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql::ab2d_1167_add_column_to_opt_out_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql::ab2d_1167_add_column_to_opt_out_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE opt_out
 ADD COLUMN filename        VARCHAR(255)    NOT NULL;
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE opt_out
 ADD COLUMN filename        VARCHAR(255)    NOT NULL
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql::ab2d_1167_add_column_to_opt_out_table::spathiyil ran successfully in 1ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('ab2d_1167_add_column_to_opt_out_table', 'spathiyil', 'db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql', NOW(), 32, '9:a30f704cc8f7b6ddd441184dc7d0763e', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 5d57fca9b26dcdd6d1255eca2eaa78f3
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:5d57fca9b26dcdd6d1255eca2eaa78f3: as 9874f45301083f0b90639efd3fcccc9f
Running Changeset: db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql::ab2d_1167_add_indexes_on_opt_out_table::spathiyil
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql::ab2d_1167_add_indexes_on_opt_out_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql::ab2d_1167_add_indexes_on_opt_out_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql::ab2d_1167_add_indexes_on_opt_out_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql::ab2d_1167_add_indexes_on_opt_out_table::spathiyil
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE INDEX "ix_opt_out_ccw_id"        ON opt_out (ccw_id);
CREATE INDEX "ix_opt_out_ccw_id_hicn"   ON opt_out (ccw_id, hicn);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_opt_out_ccw_id"        ON opt_out (ccw_id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE INDEX "ix_opt_out_ccw_id"        ON opt_out (ccw_id);
CREATE INDEX "ix_opt_out_ccw_id_hicn"   ON opt_out (ccw_id, hicn);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_opt_out_ccw_id_hicn"   ON opt_out (ccw_id, hicn)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql::ab2d_1167_add_indexes_on_opt_out_table::spathiyil ran successfully in 3ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('ab2d_1167_add_indexes_on_opt_out_table', 'spathiyil', 'db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql', NOW(), 33, '9:9874f45301083f0b90639efd3fcccc9f', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 6e690acc3b71fb223663201a3f84d3aa
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:6e690acc3b71fb223663201a3f84d3aa: as d2a28c26cf2074cc8bc917cf22cff266
Running Changeset: db/changelog/v001/add_checksum_length_job_output.sql::add_checksum_length_job_output::adaykin
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_checksum_length_job_output.sql::add_checksum_length_job_output::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_checksum_length_job_output.sql::add_checksum_length_job_output::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_checksum_length_job_output.sql::add_checksum_length_job_output::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_checksum_length_job_output.sql::add_checksum_length_job_output::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE job_output ADD COLUMN checksum VARCHAR(64) NOT NULL;
ALTER TABLE job_output ADD COLUMN file_length BIGINT NOT NULL;
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE job_output ADD COLUMN checksum VARCHAR(64) NOT NULL
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE job_output ADD COLUMN checksum VARCHAR(64) NOT NULL;
ALTER TABLE job_output ADD COLUMN file_length BIGINT NOT NULL;
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE job_output ADD COLUMN file_length BIGINT NOT NULL
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_checksum_length_job_output.sql::add_checksum_length_job_output::adaykin ran successfully in 1ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_checksum_length_job_output', 'adaykin', 'db/changelog/v001/add_checksum_length_job_output.sql', NOW(), 34, '9:d2a28c26cf2074cc8bc917cf22cff266', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as d90576cf52d7a3241598966b0338dfc3
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:d90576cf52d7a3241598966b0338dfc3: as 7b752da6ac153cf9882658dbc9ccc26a
Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-api-request::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-api-request::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-api-request::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-api-request::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-api-request::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_api_request
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        job_id VARCHAR(255),
        user_id VARCHAR(255),
        url VARCHAR(2048),
        ip_address VARCHAR(32),
        token_hash VARCHAR(255),
        request_id VARCHAR(255)
);
ALTER TABLE event_api_request ADD CONSTRAINT "pk_api_request_event" PRIMARY KEY (id);
CREATE INDEX "ix_api_request_user" ON event_api_request (user_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE event_api_request
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        job_id VARCHAR(255),
        user_id VARCHAR(255),
        url VARCHAR(2048),
        ip_address VARCHAR(32),
        token_hash VARCHAR(255),
        request_id VARCHAR(255)
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_api_request
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        job_id VARCHAR(255),
        user_id VARCHAR(255),
        url VARCHAR(2048),
        ip_address VARCHAR(32),
        token_hash VARCHAR(255),
        request_id VARCHAR(255)
);
ALTER TABLE event_api_request ADD CONSTRAINT "pk_api_request_event" PRIMARY KEY (id);
CREATE INDEX "ix_api_request_user" ON event_api_request (user_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_api_request ADD CONSTRAINT "pk_api_request_event" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_api_request
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        job_id VARCHAR(255),
        user_id VARCHAR(255),
        url VARCHAR(2048),
        ip_address VARCHAR(32),
        token_hash VARCHAR(255),
        request_id VARCHAR(255)
);
ALTER TABLE event_api_request ADD CONSTRAINT "pk_api_request_event" PRIMARY KEY (id);
CREATE INDEX "ix_api_request_user" ON event_api_request (user_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_api_request_user" ON event_api_request (user_id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-api-request::lsharshar ran successfully in 4ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-1242-persist-events-api-request', 'lsharshar', 'db/changelog/v001/log_event_schema.sql', NOW(), 35, '9:7b752da6ac153cf9882658dbc9ccc26a', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ed76382b917ba496b070970636c2bf77
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ed76382b917ba496b070970636c2bf77: as d1c9611c7d661a9a70a3f39ee19f2866
Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-api-response::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-api-response::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-api-response::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-api-response::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-api-response::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_api_response
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        response_code INT,
        response_string TEXT,
        description TEXT,
        request_id VARCHAR (255)
);
ALTER TABLE event_api_response ADD CONSTRAINT "pk_api_response_event" PRIMARY KEY (id);
CREATE INDEX "ix_api_response_user" ON event_api_response (user_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE event_api_response
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        response_code INT,
        response_string TEXT,
        description TEXT,
        request_id VARCHAR (255)
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_api_response
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        response_code INT,
        response_string TEXT,
        description TEXT,
        request_id VARCHAR (255)
);
ALTER TABLE event_api_response ADD CONSTRAINT "pk_api_response_event" PRIMARY KEY (id);
CREATE INDEX "ix_api_response_user" ON event_api_response (user_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_api_response ADD CONSTRAINT "pk_api_response_event" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_api_response
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        response_code INT,
        response_string TEXT,
        description TEXT,
        request_id VARCHAR (255)
);
ALTER TABLE event_api_response ADD CONSTRAINT "pk_api_response_event" PRIMARY KEY (id);
CREATE INDEX "ix_api_response_user" ON event_api_response (user_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_api_response_user" ON event_api_response (user_id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-api-response::lsharshar ran successfully in 5ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-1242-persist-events-api-response', 'lsharshar', 'db/changelog/v001/log_event_schema.sql', NOW(), 36, '9:d1c9611c7d661a9a70a3f39ee19f2866', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as d06e559b8dba310fbdfe9b0f72898c1b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:d06e559b8dba310fbdfe9b0f72898c1b: as 63d2c7677379849465ce9e1a8b869599
Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-bene-reload::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-bene-reload::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-bene-reload::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-bene-reload::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-bene-reload::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_bene_reload
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        file_type VARCHAR (255),
        file_name VARCHAR (500),
        number_loaded INT
);
ALTER TABLE event_bene_reload ADD CONSTRAINT "pk_bene_reload_event" PRIMARY KEY (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE event_bene_reload
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        file_type VARCHAR (255),
        file_name VARCHAR (500),
        number_loaded INT
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_bene_reload
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        file_type VARCHAR (255),
        file_name VARCHAR (500),
        number_loaded INT
);
ALTER TABLE event_bene_reload ADD CONSTRAINT "pk_bene_reload_event" PRIMARY KEY (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_bene_reload ADD CONSTRAINT "pk_bene_reload_event" PRIMARY KEY (id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-bene-reload::lsharshar ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-1242-persist-events-bene-reload', 'lsharshar', 'db/changelog/v001/log_event_schema.sql', NOW(), 37, '9:63d2c7677379849465ce9e1a8b869599', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 5937126a2955fd859c3a87e4279a6b7a
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:5937126a2955fd859c3a87e4279a6b7a: as 4ba10405553ec6fad4f831b995ff3efb
Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-bene-search::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-bene-search::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-bene-search::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-bene-search::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-bene-search::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_bene_search
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        contract_number VARCHAR(255),
        num_in_contract INT,
        num_searched INT,
        num_opted_out INT,
        num_errors INT
);
ALTER TABLE event_bene_search ADD CONSTRAINT "pk_bene_search_event" PRIMARY KEY (id);
CREATE INDEX "ix_bene_search_job_id" ON event_bene_search (job_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE event_bene_search
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        contract_number VARCHAR(255),
        num_in_contract INT,
        num_searched INT,
        num_opted_out INT,
        num_errors INT
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_bene_search
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        contract_number VARCHAR(255),
        num_in_contract INT,
        num_searched INT,
        num_opted_out INT,
        num_errors INT
);
ALTER TABLE event_bene_search ADD CONSTRAINT "pk_bene_search_event" PRIMARY KEY (id);
CREATE INDEX "ix_bene_search_job_id" ON event_bene_search (job_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_bene_search ADD CONSTRAINT "pk_bene_search_event" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_bene_search
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        contract_number VARCHAR(255),
        num_in_contract INT,
        num_searched INT,
        num_opted_out INT,
        num_errors INT
);
ALTER TABLE event_bene_search ADD CONSTRAINT "pk_bene_search_event" PRIMARY KEY (id);
CREATE INDEX "ix_bene_search_job_id" ON event_bene_search (job_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_bene_search_job_id" ON event_bene_search (job_id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-bene-search::lsharshar ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-1242-persist-events-bene-search', 'lsharshar', 'db/changelog/v001/log_event_schema.sql', NOW(), 38, '9:4ba10405553ec6fad4f831b995ff3efb', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 2b7464749389b496bb6dac6134f2b5f9
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:2b7464749389b496bb6dac6134f2b5f9: as 97466b76def15f9e6a95f4a11faf34a7
Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-error::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-error::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-error::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-error::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-error::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_error
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        error_type VARCHAR(255),
        description TEXT
);
ALTER TABLE event_error ADD CONSTRAINT "pk_error_event" PRIMARY KEY (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE event_error
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        error_type VARCHAR(255),
        description TEXT
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_error
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        error_type VARCHAR(255),
        description TEXT
);
ALTER TABLE event_error ADD CONSTRAINT "pk_error_event" PRIMARY KEY (id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_error ADD CONSTRAINT "pk_error_event" PRIMARY KEY (id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-error::lsharshar ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-1242-persist-events-error', 'lsharshar', 'db/changelog/v001/log_event_schema.sql', NOW(), 39, '9:97466b76def15f9e6a95f4a11faf34a7', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as d646b95a80ce2727df2cb870950d4277
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:d646b95a80ce2727df2cb870950d4277: as 795670e58e274ed35fb751f0f14bfd5f
Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-file::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-file::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-file::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-file::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-file::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_file
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        file_name VARCHAR (500),
        status VARCHAR (255),
        file_size BIGINT,
        file_hash VARCHAR (255)
);
ALTER TABLE event_file ADD CONSTRAINT "pk_file_event" PRIMARY KEY (id);
CREATE INDEX "ix_file_event_job_id" ON event_file (job_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE event_file
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        file_name VARCHAR (500),
        status VARCHAR (255),
        file_size BIGINT,
        file_hash VARCHAR (255)
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_file
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        file_name VARCHAR (500),
        status VARCHAR (255),
        file_size BIGINT,
        file_hash VARCHAR (255)
);
ALTER TABLE event_file ADD CONSTRAINT "pk_file_event" PRIMARY KEY (id);
CREATE INDEX "ix_file_event_job_id" ON event_file (job_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_file ADD CONSTRAINT "pk_file_event" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_file
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        file_name VARCHAR (500),
        status VARCHAR (255),
        file_size BIGINT,
        file_hash VARCHAR (255)
);
ALTER TABLE event_file ADD CONSTRAINT "pk_file_event" PRIMARY KEY (id);
CREATE INDEX "ix_file_event_job_id" ON event_file (job_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_file_event_job_id" ON event_file (job_id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-file::lsharshar ran successfully in 3ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-1242-persist-events-file', 'lsharshar', 'db/changelog/v001/log_event_schema.sql', NOW(), 40, '9:795670e58e274ed35fb751f0f14bfd5f', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 0bb467de78b88ac75b32ca3ea1553e43
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:0bb467de78b88ac75b32ca3ea1553e43: as aaadac5f6ef2c588adb66f81506b87c4
Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-job_status_change::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-job_status_change::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-job_status_change::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-job_status_change::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-job_status_change::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_job_status_change
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        old_status VARCHAR (255),
        new_status VARCHAR (255),
        description TEXT
);
ALTER TABLE event_job_status_change ADD CONSTRAINT "pk_job_status_change_event" PRIMARY KEY (id);
CREATE INDEX "ix_job_status_job_id" ON event_job_status_change (job_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE event_job_status_change
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        old_status VARCHAR (255),
        new_status VARCHAR (255),
        description TEXT
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_job_status_change
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        old_status VARCHAR (255),
        new_status VARCHAR (255),
        description TEXT
);
ALTER TABLE event_job_status_change ADD CONSTRAINT "pk_job_status_change_event" PRIMARY KEY (id);
CREATE INDEX "ix_job_status_job_id" ON event_job_status_change (job_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_job_status_change ADD CONSTRAINT "pk_job_status_change_event" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE event_job_status_change
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        old_status VARCHAR (255),
        new_status VARCHAR (255),
        description TEXT
);
ALTER TABLE event_job_status_change ADD CONSTRAINT "pk_job_status_change_event" PRIMARY KEY (id);
CREATE INDEX "ix_job_status_job_id" ON event_job_status_change (job_id);

--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_job_status_job_id" ON event_job_status_change (job_id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/log_event_schema.sql::AB2D-1242-persist-events-job_status_change::lsharshar ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('AB2D-1242-persist-events-job_status_change', 'lsharshar', 'db/changelog/v001/log_event_schema.sql', NOW(), 41, '9:aaadac5f6ef2c588adb66f81506b87c4', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 4d8822cc6f35d971189a67560fda92f6
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:4d8822cc6f35d971189a67560fda92f6: as 14141dd8fc0b4a7bffaadd4ce93f12b4
Running Changeset: db/changelog/v001/add_admin_user.sql::add_admin_user::adaykin
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_admin_user.sql::add_admin_user::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_admin_user.sql::add_admin_user::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_admin_user.sql::add_admin_user::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_admin_user.sql::add_admin_user::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999999, 'AB2D Admin', null, null);

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
                                                                                                   '0oa32rfir2xLtx7s2297', null, null, null, (select id from sponsor where hpms_id=999999), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa32rfir2xLtx7s2297'),
                                                         (SELECT id FROM role WHERE name='ADMIN'));
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999999, 'AB2D Admin', null, null)
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999999, 'AB2D Admin', null, null);

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
                                                                                                   '0oa32rfir2xLtx7s2297', null, null, null, (select id from sponsor where hpms_id=999999), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa32rfir2xLtx7s2297'),
                                                         (SELECT id FROM role WHERE name='ADMIN'));
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
                                                                                                   '0oa32rfir2xLtx7s2297', null, null, null, (select id from sponsor where hpms_id=999999), true)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999999, 'AB2D Admin', null, null);

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
                                                                                                   '0oa32rfir2xLtx7s2297', null, null, null, (select id from sponsor where hpms_id=999999), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa32rfir2xLtx7s2297'),
                                                         (SELECT id FROM role WHERE name='ADMIN'));
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa32rfir2xLtx7s2297'),
                                                         (SELECT id FROM role WHERE name='ADMIN'))
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_admin_user.sql::add_admin_user::adaykin ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_admin_user', 'adaykin', 'db/changelog/v001/add_admin_user.sql', NOW(), 42, '9:14141dd8fc0b4a7bffaadd4ce93f12b4', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 1640034e137c1c23d57c8ad4563bdacc
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:1640034e137c1c23d57c8ad4563bdacc: as e3fb3b16bf20ff0672243cc132f6cef8
Running Changeset: db/changelog/v001/update_contract_numbers.sql::update_contract_numbers::adaykin
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/update_contract_numbers.sql::update_contract_numbers::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/update_contract_numbers.sql::update_contract_numbers::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/update_contract_numbers.sql::update_contract_numbers::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/update_contract_numbers.sql::update_contract_numbers::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000'
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/update_contract_numbers.sql::update_contract_numbers::adaykin ran successfully in 7ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('update_contract_numbers', 'adaykin', 'db/changelog/v001/update_contract_numbers.sql', NOW(), 43, '9:e3fb3b16bf20ff0672243cc132f6cef8', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ec2e6dc6dd5559a2b00ce4da2c0d3346
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ec2e6dc6dd5559a2b00ce4da2c0d3346: as 8f44c96b6186bb64495b182278656d9f
Running Changeset: db/changelog/v001/modify_hicn.sql::raw::includeAll
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/modify_hicn.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/modify_hicn.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/modify_hicn.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/modify_hicn.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE opt_out ALTER COLUMN hicn DROP NOT NULL;
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE opt_out ALTER COLUMN hicn DROP NOT NULL
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/modify_hicn.sql::raw::includeAll ran successfully in 0ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('raw', 'includeAll', 'db/changelog/v001/modify_hicn.sql', NOW(), 44, '9:8f44c96b6186bb64495b182278656d9f', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as fc9c4c5e658100d2ba24ad1c6b2fe44f
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:fc9c4c5e658100d2ba24ad1c6b2fe44f: as eb785a55ee836abe5ba6e1db98564331
Running Changeset: db/changelog/v001/ab2d-1377-add-aws-id.sql::ab2d-1377-create-kinesis-logger::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/ab2d-1377-add-aws-id.sql::ab2d-1377-create-kinesis-logger::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/ab2d-1377-add-aws-id.sql::ab2d-1377-create-kinesis-logger::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/ab2d-1377-add-aws-id.sql::ab2d-1377-create-kinesis-logger::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/ab2d-1377-add-aws-id.sql::ab2d-1377-create-kinesis-logger::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_error ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_file ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN aws_id VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_api_request ADD COLUMN aws_id VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_error ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_file ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN aws_id VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_api_response ADD COLUMN aws_id VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_error ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_file ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN aws_id VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_bene_reload ADD COLUMN aws_id VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_error ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_file ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN aws_id VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_bene_search ADD COLUMN aws_id VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_error ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_file ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN aws_id VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_error ADD COLUMN aws_id VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_error ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_file ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN aws_id VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_file ADD COLUMN aws_id VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_error ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_file ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN aws_id VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_job_status_change ADD COLUMN aws_id VARCHAR(255)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/ab2d-1377-add-aws-id.sql::ab2d-1377-create-kinesis-logger::lsharshar ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('ab2d-1377-create-kinesis-logger', 'lsharshar', 'db/changelog/v001/ab2d-1377-add-aws-id.sql', NOW(), 45, '9:eb785a55ee836abe5ba6e1db98564331', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 68431febbb717662b3132600e53aa749
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:68431febbb717662b3132600e53aa749: as 454d5c9fbf77b3c16146cadbef5cd34c
Running Changeset: db/changelog/v001/ab2d-1377-add-env-id.sql::ab2d-1377-create-kinesis-logger::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/ab2d-1377-add-env-id.sql::ab2d-1377-create-kinesis-logger::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/ab2d-1377-add-env-id.sql::ab2d-1377-create-kinesis-logger::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/ab2d-1377-add-env-id.sql::ab2d-1377-create-kinesis-logger::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/ab2d-1377-add-env-id.sql::ab2d-1377-create-kinesis-logger::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_error ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_file ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN environment VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_api_request ADD COLUMN environment VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_error ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_file ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN environment VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_api_response ADD COLUMN environment VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_error ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_file ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN environment VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_bene_reload ADD COLUMN environment VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_error ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_file ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN environment VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_bene_search ADD COLUMN environment VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_error ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_file ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN environment VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_error ADD COLUMN environment VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_error ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_file ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN environment VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_file ADD COLUMN environment VARCHAR(255)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE event_api_request ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_error ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_file ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN environment VARCHAR(255);


--  -------------------------------------------------------------------------------------------------------------------
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_job_status_change ADD COLUMN environment VARCHAR(255)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/ab2d-1377-add-env-id.sql::ab2d-1377-create-kinesis-logger::lsharshar ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('ab2d-1377-create-kinesis-logger', 'lsharshar', 'db/changelog/v001/ab2d-1377-add-env-id.sql', NOW(), 46, '9:454d5c9fbf77b3c16146cadbef5cd34c', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 58cb97ca78f254d272389b4aaf8bc3c0
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:58cb97ca78f254d272389b4aaf8bc3c0: as 2513323997355127434f9f7a8247e616
Running Changeset: db/changelog/v001/create_opt_out_file_table.sql::raw::includeAll
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/create_opt_out_file_table.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/create_opt_out_file_table.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/create_opt_out_file_table.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/create_opt_out_file_table.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE opt_out_file (
    id BIGINT NOT NULL,
    filename VARCHAR(256) NOT NULL
);

ALTER TABLE opt_out_file ADD CONSTRAINT "pk_opt_out_file" PRIMARY KEY (id);
ALTER TABLE opt_out_file ADD CONSTRAINT "uc_opt_out_file_filename" UNIQUE (filename);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE opt_out_file (
    id BIGINT NOT NULL,
    filename VARCHAR(256) NOT NULL
);

ALTER TABLE opt_out_file ADD CONSTRAINT "pk_opt_out_file" PRIMARY KEY (id);
ALTER TABLE opt_out_file ADD CONSTRAINT "uc_opt_out_file_filename" UNIQUE (filename)
[2025-06-25 13:39:59] FINE [liquibase.executor] 0 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] 0 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/create_opt_out_file_table.sql::raw::includeAll ran successfully in 3ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('raw', 'includeAll', 'db/changelog/v001/create_opt_out_file_table.sql', NOW(), 47, '9:2513323997355127434f9f7a8247e616', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as b6e4b165425dd26ae964295fee014648
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:b6e4b165425dd26ae964295fee014648: as 350cacc300b7eca5dc07bbcc5f722431
Running Changeset: db/changelog/v001/add_properties_data_01.sql::add_properties_data_01::lhanekam
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_properties_data_01.sql::add_properties_data_01::lhanekam
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_properties_data_01.sql::add_properties_data_01::lhanekam
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_properties_data_01.sql::add_properties_data_01::lhanekam
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_properties_data_01.sql::add_properties_data_01::lhanekam
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'worker.engaged', 'engaged');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'worker.engaged', 'engaged')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_properties_data_01.sql::add_properties_data_01::lhanekam ran successfully in 1ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_properties_data_01', 'lhanekam', 'db/changelog/v001/add_properties_data_01.sql', NOW(), 48, '9:350cacc300b7eca5dc07bbcc5f722431', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 2591bb8510e5c2dc4277beea8b812358
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:2591bb8510e5c2dc4277beea8b812358: as 0520df2f7041b6e0a73dcfb2bef793ed
Running Changeset: db/changelog/v001/add_attestor_role.sql::add_attestor_role::adaykin
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_attestor_role.sql::add_attestor_role::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_attestor_role.sql::add_attestor_role::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_attestor_role.sql::add_attestor_role::adaykin
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_attestor_role.sql::add_attestor_role::adaykin
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ATTESTOR');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ATTESTOR')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_attestor_role.sql::add_attestor_role::adaykin ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_attestor_role', 'adaykin', 'db/changelog/v001/add_attestor_role.sql', NOW(), 49, '9:0520df2f7041b6e0a73dcfb2bef793ed', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 5daa522d1f22b1228f1a633eec113571
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:5daa522d1f22b1228f1a633eec113571: as 8ab1c9880e0551de2980dbf5abd4415d
Running Changeset: db/changelog/v001/add_created_modified_date.sql::add_created_modified_date::enolan
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_created_modified_date.sql::add_created_modified_date::enolan
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_created_modified_date.sql::add_created_modified_date::enolan
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_created_modified_date.sql::add_created_modified_date::enolan
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_created_modified_date.sql::add_created_modified_date::enolan
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01'
[2025-06-25 13:39:59] FINE [liquibase.executor] 0 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE contract SET created='2000-01-01', modified='2000-01-01'
[2025-06-25 13:39:59] FINE [liquibase.executor] 23 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE coverage SET created='2000-01-01', modified='2000-01-01'
[2025-06-25 13:39:59] FINE [liquibase.executor] 0 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01'
[2025-06-25 13:39:59] FINE [liquibase.executor] 0 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01'
[2025-06-25 13:39:59] FINE [liquibase.executor] 0 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE properties SET created='2000-01-01', modified='2000-01-01'
[2025-06-25 13:39:59] FINE [liquibase.executor] 7 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE role SET created='2000-01-01', modified='2000-01-01'
[2025-06-25 13:39:59] FINE [liquibase.executor] 3 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01'
[2025-06-25 13:39:59] FINE [liquibase.executor] 28 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE contract SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE properties SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE role SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';

ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;

-- noinspection SqlWithoutWhere
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';
[2025-06-25 13:39:59] FINE [liquibase.executor] 
UPDATE user_account SET created='2000-01-01', modified='2000-01-01'
[2025-06-25 13:39:59] FINE [liquibase.executor] 26 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_created_modified_date.sql::add_created_modified_date::enolan ran successfully in 16ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_created_modified_date', 'enolan', 'db/changelog/v001/add_created_modified_date.sql', NOW(), 50, '9:8ab1c9880e0551de2980dbf5abd4415d', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 421efa2a1874cb08091b31f762691782
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:421efa2a1874cb08091b31f762691782: as efc71352c370db1db668872af32cc73d
Running Changeset: db/changelog/v001/add_ip_table.sql::raw::includeAll
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_ip_table.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_ip_table.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_ip_table.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_ip_table.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE sponsor_ip (
    sponsor_id BIGINT NOT NULL,
    ip_address INET,
    PRIMARY KEY (sponsor_id, ip_address)
);

ALTER TABLE sponsor_ip ADD CONSTRAINT "fk_sponsor_ip_to_sponsor"  FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE sponsor_ip (
    sponsor_id BIGINT NOT NULL,
    ip_address INET,
    PRIMARY KEY (sponsor_id, ip_address)
);

ALTER TABLE sponsor_ip ADD CONSTRAINT "fk_sponsor_ip_to_sponsor"  FOREIGN KEY (sponsor_id) REFERENCES sponsor (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] 0 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_ip_table.sql::raw::includeAll ran successfully in 6ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('raw', 'includeAll', 'db/changelog/v001/add_ip_table.sql', NOW(), 51, '9:efc71352c370db1db668872af32cc73d', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ce15a6e39e5f10aae5e32eab9f51d58b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ce15a6e39e5f10aae5e32eab9f51d58b: as a5cfd80c51727bbe0f2e12465c9d567f
Running Changeset: db/changelog/v001/modify_coverage_schema.sql::modify_coverage_schema::wnyffenegger
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/modify_coverage_schema.sql::modify_coverage_schema::wnyffenegger
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/modify_coverage_schema.sql::modify_coverage_schema::wnyffenegger
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/modify_coverage_schema.sql::modify_coverage_schema::wnyffenegger
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/modify_coverage_schema.sql::modify_coverage_schema::wnyffenegger
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
DROP INDEX "ix_coverage_contract_id_month"
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage"
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary"
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract"
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month"
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
DROP TABLE coverage
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
DROP TABLE beneficiary
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Every coverage mapping is uniquely identified by a contract_id, month, and year
CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);

ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);

-- Drop the coverage table by first dropping all constraints and then the table
-- The table should be empty so there is no loss of data

DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";

DROP TABLE coverage;

-- Beneficiary is only used in coverage so table is no longer necessary

DROP TABLE beneficiary;

-- Create table tracking coverage events for history
-- Every time a mapping is started/stopped/completed an event is logged to this table
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);

ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);

-- Instead of writing out year, month, and contract id use a foreign key to bene_coverage_period to identify the
-- coverage mapping and a foreign key to event_bene_coverage_search_status_change to track when the row was created
-- and why it was created
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);

ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/modify_coverage_schema.sql::modify_coverage_schema::wnyffenegger ran successfully in 10ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('modify_coverage_schema', 'wnyffenegger', 'db/changelog/v001/modify_coverage_schema.sql', NOW(), 52, '9:a5cfd80c51727bbe0f2e12465c9d567f', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as c33cd392a70824021f666d49ab7aebf6
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:c33cd392a70824021f666d49ab7aebf6: as a6f74d7a50d5c78dfa7ded71b708b86e
Running Changeset: db/changelog/v001/remove_opt_out.sql::remove_opt_out::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/remove_opt_out.sql::remove_opt_out::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/remove_opt_out.sql::remove_opt_out::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/remove_opt_out.sql::remove_opt_out::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/remove_opt_out.sql::remove_opt_out::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
drop table opt_out_file;
drop table opt_out;
[2025-06-25 13:39:59] FINE [liquibase.executor] 
drop table opt_out_file
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
drop table opt_out_file;
drop table opt_out;
[2025-06-25 13:39:59] FINE [liquibase.executor] 
drop table opt_out
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/remove_opt_out.sql::remove_opt_out::lsharshar ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('remove_opt_out', 'lsharshar', 'db/changelog/v001/remove_opt_out.sql', NOW(), 53, '9:a6f74d7a50d5c78dfa7ded71b708b86e', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 2f53abec4ef949aa4113391301363739
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:2f53abec4ef949aa4113391301363739: as 6aa169f4eecea09b72bdafe1fe352b32
Running Changeset: db/changelog/v001/add_hpms_info_to_contract.sql::raw::includeAll
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_hpms_info_to_contract.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_hpms_info_to_contract.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_hpms_info_to_contract.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_hpms_info_to_contract.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE contract
    ADD COLUMN hpms_parent_org_id BIGINT,
    ADD COLUMN hpms_parent_org_name VARCHAR(255),
    ADD COLUMN hpms_org_marketing_name VARCHAR(255);

INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'hpms.ingest.engaged', 'engaged');
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE contract
    ADD COLUMN hpms_parent_org_id BIGINT,
    ADD COLUMN hpms_parent_org_name VARCHAR(255),
    ADD COLUMN hpms_org_marketing_name VARCHAR(255);

INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'hpms.ingest.engaged', 'engaged')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_hpms_info_to_contract.sql::raw::includeAll ran successfully in 0ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('raw', 'includeAll', 'db/changelog/v001/add_hpms_info_to_contract.sql', NOW(), 54, '9:6aa169f4eecea09b72bdafe1fe352b32', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as e14268331f3f25544d58279d0b99754c
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:e14268331f3f25544d58279d0b99754c: as 119881f0536ac06e62a539add3b99552
Running Changeset: db/changelog/v001/add_coverage_search.sql::add_coverage_search_table::lsharshar
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_coverage_search.sql::add_coverage_search_table::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_coverage_search.sql::add_coverage_search_table::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_coverage_search.sql::add_coverage_search_table::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_coverage_search.sql::add_coverage_search_table::lsharshar
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage_search (
    id BIGINT NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    attempts INTEGER NOT NULL DEFAULT 0,
    created timestamp
);

ALTER TABLE coverage_search ADD CONSTRAINT "pk_coverage_search" PRIMARY KEY (id);
ALTER TABLE coverage_search ADD CONSTRAINT "fk_coverage_search_bene_coverage_period"
    FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period(id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE TABLE coverage_search (
    id BIGINT NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    attempts INTEGER NOT NULL DEFAULT 0,
    created timestamp
)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage_search (
    id BIGINT NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    attempts INTEGER NOT NULL DEFAULT 0,
    created timestamp
);

ALTER TABLE coverage_search ADD CONSTRAINT "pk_coverage_search" PRIMARY KEY (id);
ALTER TABLE coverage_search ADD CONSTRAINT "fk_coverage_search_bene_coverage_period"
    FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period(id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage_search ADD CONSTRAINT "pk_coverage_search" PRIMARY KEY (id)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
CREATE TABLE coverage_search (
    id BIGINT NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    attempts INTEGER NOT NULL DEFAULT 0,
    created timestamp
);

ALTER TABLE coverage_search ADD CONSTRAINT "pk_coverage_search" PRIMARY KEY (id);
ALTER TABLE coverage_search ADD CONSTRAINT "fk_coverage_search_bene_coverage_period"
    FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period(id);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage_search ADD CONSTRAINT "fk_coverage_search_bene_coverage_period"
    FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period(id)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_coverage_search.sql::add_coverage_search_table::lsharshar ran successfully in 2ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_coverage_search_table', 'lsharshar', 'db/changelog/v001/add_coverage_search.sql', NOW(), 55, '9:119881f0536ac06e62a539add3b99552', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as ec5322e6ff971c9653958bf3e7d339fa
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:ec5322e6ff971c9653958bf3e7d339fa: as bc7fd8acdb91c69c0c6d3a0fd7b9359d
Running Changeset: db/changelog/v001/add_last_success_to_coverage_period.sql::add_last_success_to_coverage_period::wnyffenegger
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_last_success_to_coverage_period.sql::add_last_success_to_coverage_period::wnyffenegger
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_last_success_to_coverage_period.sql::add_last_success_to_coverage_period::wnyffenegger
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_last_success_to_coverage_period.sql::add_last_success_to_coverage_period::wnyffenegger
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_last_success_to_coverage_period.sql::add_last_success_to_coverage_period::wnyffenegger
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
ALTER TABLE bene_coverage_period ADD COLUMN last_successful_job TIMESTAMP WITH TIME ZONE DEFAULT NULL;
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE bene_coverage_period ADD COLUMN last_successful_job TIMESTAMP WITH TIME ZONE DEFAULT NULL
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_last_success_to_coverage_period.sql::add_last_success_to_coverage_period::wnyffenegger ran successfully in 1ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_last_success_to_coverage_period', 'wnyffenegger', 'db/changelog/v001/add_last_success_to_coverage_period.sql', NOW(), 56, '9:bc7fd8acdb91c69c0c6d3a0fd7b9359d', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 2f756d61809c7e91ddd8710669420e2b
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:2f756d61809c7e91ddd8710669420e2b: as 4c08fc1a991c456beb880e94e55a4642
Running Changeset: db/changelog/v001/add_mbi_to_coverage.sql::add_mbi_to_coverage::wnyffenegger
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/add_mbi_to_coverage.sql::add_mbi_to_coverage::wnyffenegger
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/add_mbi_to_coverage.sql::add_mbi_to_coverage::wnyffenegger
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/add_mbi_to_coverage.sql::add_mbi_to_coverage::wnyffenegger
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/add_mbi_to_coverage.sql::add_mbi_to_coverage::wnyffenegger
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- All previous coverage information is now useless
DELETE FROM coverage;

-- Secondary identifier that must be reported
ALTER TABLE coverage ADD COLUMN "current_mbi" VARCHAR(32);
ALTER TABLE coverage ADD COLUMN "historic_mbis" VARCHAR(256);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)

-- Adding mbi onto these indexes as an in memory search
DROP INDEX "ix_coverage_period_beneficiary_id_index";
DROP INDEX "ix_coverage_period_beneficiary_id_index_inverted";
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id) INCLUDE (current_mbi, historic_mbis);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id) INCLUDE (current_mbi, historic_mbis);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
DELETE FROM coverage
[2025-06-25 13:39:59] FINE [liquibase.executor] 0 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- All previous coverage information is now useless
DELETE FROM coverage;

-- Secondary identifier that must be reported
ALTER TABLE coverage ADD COLUMN "current_mbi" VARCHAR(32);
ALTER TABLE coverage ADD COLUMN "historic_mbis" VARCHAR(256);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)

-- Adding mbi onto these indexes as an in memory search
DROP INDEX "ix_coverage_period_beneficiary_id_index";
DROP INDEX "ix_coverage_period_beneficiary_id_index_inverted";
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id) INCLUDE (current_mbi, historic_mbis);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id) INCLUDE (current_mbi, historic_mbis);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage ADD COLUMN "current_mbi" VARCHAR(32)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- All previous coverage information is now useless
DELETE FROM coverage;

-- Secondary identifier that must be reported
ALTER TABLE coverage ADD COLUMN "current_mbi" VARCHAR(32);
ALTER TABLE coverage ADD COLUMN "historic_mbis" VARCHAR(256);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)

-- Adding mbi onto these indexes as an in memory search
DROP INDEX "ix_coverage_period_beneficiary_id_index";
DROP INDEX "ix_coverage_period_beneficiary_id_index_inverted";
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id) INCLUDE (current_mbi, historic_mbis);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id) INCLUDE (current_mbi, historic_mbis);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
ALTER TABLE coverage ADD COLUMN "historic_mbis" VARCHAR(256)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- All previous coverage information is now useless
DELETE FROM coverage;

-- Secondary identifier that must be reported
ALTER TABLE coverage ADD COLUMN "current_mbi" VARCHAR(32);
ALTER TABLE coverage ADD COLUMN "historic_mbis" VARCHAR(256);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)

-- Adding mbi onto these indexes as an in memory search
DROP INDEX "ix_coverage_period_beneficiary_id_index";
DROP INDEX "ix_coverage_period_beneficiary_id_index_inverted";
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id) INCLUDE (current_mbi, historic_mbis);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id) INCLUDE (current_mbi, historic_mbis);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
DROP INDEX "ix_coverage_period_beneficiary_id_index"
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- All previous coverage information is now useless
DELETE FROM coverage;

-- Secondary identifier that must be reported
ALTER TABLE coverage ADD COLUMN "current_mbi" VARCHAR(32);
ALTER TABLE coverage ADD COLUMN "historic_mbis" VARCHAR(256);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)

-- Adding mbi onto these indexes as an in memory search
DROP INDEX "ix_coverage_period_beneficiary_id_index";
DROP INDEX "ix_coverage_period_beneficiary_id_index_inverted";
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id) INCLUDE (current_mbi, historic_mbis);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id) INCLUDE (current_mbi, historic_mbis);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
DROP INDEX "ix_coverage_period_beneficiary_id_index_inverted"
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- All previous coverage information is now useless
DELETE FROM coverage;

-- Secondary identifier that must be reported
ALTER TABLE coverage ADD COLUMN "current_mbi" VARCHAR(32);
ALTER TABLE coverage ADD COLUMN "historic_mbis" VARCHAR(256);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)

-- Adding mbi onto these indexes as an in memory search
DROP INDEX "ix_coverage_period_beneficiary_id_index";
DROP INDEX "ix_coverage_period_beneficiary_id_index_inverted";
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id) INCLUDE (current_mbi, historic_mbis);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id) INCLUDE (current_mbi, historic_mbis);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id) INCLUDE (current_mbi, historic_mbis)
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- All previous coverage information is now useless
DELETE FROM coverage;

-- Secondary identifier that must be reported
ALTER TABLE coverage ADD COLUMN "current_mbi" VARCHAR(32);
ALTER TABLE coverage ADD COLUMN "historic_mbis" VARCHAR(256);

-- These two indexes are used for index only searches of the coverage table (B-Tree in memory instead of table on disk)
-- While these indexes slow down insertions they are absolutely vital for the selects (1 minute for a select to 1 second)

-- Adding mbi onto these indexes as an in memory search
DROP INDEX "ix_coverage_period_beneficiary_id_index";
DROP INDEX "ix_coverage_period_beneficiary_id_index_inverted";
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id) INCLUDE (current_mbi, historic_mbis);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id) INCLUDE (current_mbi, historic_mbis);
[2025-06-25 13:39:59] FINE [liquibase.executor] 
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id) INCLUDE (current_mbi, historic_mbis)
[2025-06-25 13:39:59] INFO [liquibase.changelog] Custom SQL executed
[2025-06-25 13:39:59] INFO [liquibase.changelog] ChangeSet db/changelog/v001/add_mbi_to_coverage.sql::add_mbi_to_coverage::wnyffenegger ran successfully in 3ms
[2025-06-25 13:39:59] FINE [liquibase.executor] 
INSERT INTO ab2d.databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_mbi_to_coverage', 'wnyffenegger', 'db/changelog/v001/add_mbi_to_coverage.sql', NOW(), 57, '9:4c08fc1a991c456beb880e94e55a4642', 'sql', '', 'EXECUTED', NULL, NULL, '4.32.0', '0883993631')
[2025-06-25 13:39:59] FINE [liquibase.executor] 1 row(s) affected
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for inputStream as 4abb25c2cacabc23f85379961e49f4e7
[2025-06-25 13:39:59] FINE [liquibase.util] Computed checksum for 9:4abb25c2cacabc23f85379961e49f4e7: as 0a277e452e55ecb30a709b3f65e51288
Running Changeset: db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll
[2025-06-25 13:39:59] INFO [liquibase.ui] Running Changeset: db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Running Changeset: db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Changeset db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.changelog] Reading ChangeSet: db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll
[2025-06-25 13:39:59] FINE [liquibase.executor] Executing Statement: 
-- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id;
[2025-06-25 13:39:59] FINE [liquibase.executor] 
-- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id
[2025-06-25 13:39:59] SEVERE [liquibase.changelog] ChangeSet db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll encountered an exception.
liquibase.exception.DatabaseException: ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id]
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:519)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:85)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:187)
	at liquibase.executor.AbstractExecutor.execute(AbstractExecutor.java:148)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1198)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:793)
	at liquibase.changelog.visitor.UpdateVisitor.executeAcceptedChange(UpdateVisitor.java:127)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:71)
	at liquibase.changelog.ChangeLogIterator.lambda$run$0(ChangeLogIterator.java:133)
	at liquibase.Scope.lambda$child$0(Scope.java:216)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:215)
	at liquibase.Scope.child(Scope.java:194)
	at liquibase.changelog.ChangeLogIterator.lambda$run$1(ChangeLogIterator.java:122)
	at liquibase.Scope.lambda$child$0(Scope.java:216)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:215)
	at liquibase.Scope.child(Scope.java:194)
	at liquibase.Scope.child(Scope.java:282)
	at liquibase.Scope.child(Scope.java:286)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:91)
	at liquibase.command.core.AbstractUpdateCommandStep.lambda$run$0(AbstractUpdateCommandStep.java:114)
	at liquibase.Scope.lambda$child$0(Scope.java:216)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:215)
	at liquibase.Scope.child(Scope.java:194)
	at liquibase.command.core.AbstractUpdateCommandStep.run(AbstractUpdateCommandStep.java:112)
	at liquibase.command.core.UpdateCommandStep.run(UpdateCommandStep.java:100)
	at com.datical.liquibase.ext.command.ProUpdateCommandStep.run(ProUpdateCommandStep.java:44)
	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:263)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:201)
	at liquibase.command.CommandScope.execute(CommandScope.java:251)
	at liquibase.integration.commandline.CommandRunner.call(CommandRunner.java:51)
	at liquibase.integration.commandline.CommandRunner.call(CommandRunner.java:21)
	at picocli.CommandLine.executeUserObject(CommandLine.java:2031)
	at picocli.CommandLine.access$1500(CommandLine.java:148)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2469)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2461)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2423)
	at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
	at picocli.CommandLine$RunLast.execute(CommandLine.java:2425)
	at picocli.CommandLine.execute(CommandLine.java:2174)
	at liquibase.integration.commandline.LiquibaseCommandLine.lambda$execute$2(LiquibaseCommandLine.java:420)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:201)
	at liquibase.integration.commandline.LiquibaseCommandLine.lambda$execute$3(LiquibaseCommandLine.java:395)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:201)
	at liquibase.integration.commandline.LiquibaseCommandLine.execute(LiquibaseCommandLine.java:392)
	at liquibase.integration.commandline.LiquibaseCommandLine.main(LiquibaseCommandLine.java:117)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at liquibase.integration.commandline.LiquibaseLauncher.main(LiquibaseLauncher.java:120)
Caused by: org.postgresql.util.PSQLException: ERROR: relation "public.sponsor" does not exist
  Position: 130
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:356)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:317)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:312)
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:511)
	... 53 more

[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.report.ShowSummaryGenerator instance liquibase.report.StandardShowSummaryGenerator
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.report.ShowSummaryGenerator instance com.datical.liquibase.ext.reports.ProShowSummaryGenerator

UPDATE SUMMARY
Run:                         57
Previously run:               0
Filtered out:                 0
-------------------------------
Total change sets:          106

[2025-06-25 13:39:59] INFO [liquibase.util] UPDATE SUMMARY
[2025-06-25 13:39:59] INFO [liquibase.util] Run:                         57
[2025-06-25 13:39:59] INFO [liquibase.util] Previously run:               0
[2025-06-25 13:39:59] INFO [liquibase.util] Filtered out:                 0
[2025-06-25 13:39:59] INFO [liquibase.util] -------------------------------
[2025-06-25 13:39:59] INFO [liquibase.util] Total change sets:          106
[2025-06-25 13:39:59] INFO [liquibase.util] Update summary generated
[2025-06-25 13:39:59] INFO [liquibase.command] Update command encountered an exception.
[2025-06-25 13:39:59] FINE [liquibase.executor] Release Database Lock
[2025-06-25 13:39:59] FINE [liquibase.executor] Changelog query completed.
[2025-06-25 13:39:59] INFO [liquibase.lockservice] Successfully released change log lock
[2025-06-25 13:39:59] FINE [liquibase.configuration] Found 'liquibase.command.internalRollbackOnError.database' configuration of 'postgres @ jdbc:postgresql://localhost:5432/test_database (Default Schema: ab2d)'
    command argument 'database' of 'postgres @ jdbc:postgresql://localhost:5432/test_database (Default Schema: ab2d)'
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.command.internalRollbackOnError.defaultCatalogName found
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.command.internalRollbackOnError.defaultSchemaName found
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.command.internalRollbackOnError.driver found
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.command.internalRollbackOnError.driverPropertiesFile found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Found 'liquibase.command.internalRollbackOnError.exception' configuration of 'liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll:
     Reason: liquibase.exception.DatabaseException: ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id]'
    command argument 'exception' of 'liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll:
     Reason: liquibase.exception.DatabaseException: ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id]'
[2025-06-25 13:39:59] FINE [liquibase.configuration] Found 'liquibase.command.internalRollbackOnError.listener' configuration of 'liquibase.changelog.visitor.DefaultChangeExecListener@316cda31'
    command argument 'listener' of 'liquibase.changelog.visitor.DefaultChangeExecListener@316cda31'
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.command.internalRollbackOnError.password found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Found 'liquibase.command.internalRollbackOnError.rollbackOnError' configuration of 'false'
    command argument 'rollbackOnError' of 'false'
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.command.internalRollbackOnError.runOnce found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.command.internalRollbackOnError.runOnce is using the default value of true
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.command.runOnce is using the default value of true
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.command.internalRollbackOnError.skipDatabaseStep found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.command.internalRollbackOnError.skipDatabaseStep is using the default value of false
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.command.skipDatabaseStep is using the default value of false
[2025-06-25 13:39:59] FINE [liquibase.configuration] Found 'liquibase.command.internalRollbackOnError.updateReportParameters' configuration of 'UpdateReportParameters(changelogArgValue=db/changelog/db.changelog-master.yaml, jdbcUrl=jdbc:postgresql://localhost:5432/test_database, tag=null, commandTitle=Update, success=false, databaseInfo=DatabaseInfo(databaseType=PostgreSQL, version=16.9 (Postgres.app), databaseUrl=jdbc:postgresql://localhost:5432/test_database), runtimeInfo=RuntimeInfo(systemUsername=ben, hostname=Bens-MacBook-Pro.local, os=Mac OS X, interfaceType=null, startTime=null, updateDuration=null, liquibaseVersion=4.32.0, javaVersion=24.0.1), operationInfo=OperationInfo(command=null, operationOutcome=fail, operationOutcomeErrorMsg=null, exception=Migration failed for changeset db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll:
     Reason: liquibase.exception.DatabaseException: ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id], updateSummaryMsg=
UPDATE SUMMARY
Run:                         57
Previously run:               0
Filtered out:                 0
-------------------------------
Total change sets:          106

, rowsAffected=null, rollbackOnError=false, labels=null, contexts=), customData=CustomData(customDataFile=null, fileContents=null), changesetInfo=ChangesetInfo(changesetCount=58, pendingChangesetCount=0, failedChangesetCount=1, changesetInfoList=[IndividualChangesetInfo(index=1, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateSequence-hibernate_sequence, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE SEQUENCE hibernate_sequence START WITH 1 INCREMENT BY 1;]), IndividualChangesetInfo(index=2, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-beneficiary, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE beneficiary
(
    id                  BIGINT              NOT NULL,
    patient_id          VARCHAR(255)        NOT NULL
);
ALTER TABLE beneficiary ADD CONSTRAINT "pk_beneficiary" PRIMARY KEY (id);
ALTER TABLE beneficiary ADD CONSTRAINT "uc_beneficiary_patient_id" UNIQUE (patient_id);]), IndividualChangesetInfo(index=3, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-sponsor, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE sponsor
(
    id                  BIGINT              NOT NULL,
    hpms_id             INTEGER             NOT NULL,
    org_name            VARCHAR(255)        NOT NULL,
    legal_name          VARCHAR(255),
    parent_id           BIGINT
);
ALTER TABLE sponsor ADD CONSTRAINT "pk_sponsor" PRIMARY KEY (id);
ALTER TABLE sponsor ADD CONSTRAINT "fk_sponsor_to_sponsor_parent" FOREIGN KEY (parent_id) REFERENCES sponsor (id);]), IndividualChangesetInfo(index=4, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-contract, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE contract
(
    id                  BIGINT              NOT NULL,
    contract_number     VARCHAR(255)        NOT NULL,
    contract_name       VARCHAR(255)        NOT NULL,
    sponsor_id          BIGINT NOT NULL,
    attested_on         TIMESTAMP WITH TIME ZONE
);
ALTER TABLE contract ADD CONSTRAINT "pk_contract" PRIMARY KEY (id);
ALTER TABLE contract ADD CONSTRAINT "uc_contract_contract_number" UNIQUE (contract_number);
ALTER TABLE contract ADD CONSTRAINT "fk_contract_to_sponsor" FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);]), IndividualChangesetInfo(index=5, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-coverage, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE coverage
(
    beneficiary_id      BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL
);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_beneficiary_id_contract_id" UNIQUE (beneficiary_id, contract_id);]), IndividualChangesetInfo(index=6, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-user_account, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE user_account
(
    id                  BIGINT              NOT NULL,
    username           VARCHAR(64)         NOT NULL,
    first_name          VARCHAR(64),
    last_name           VARCHAR(64),
    email               VARCHAR(255),
    sponsor_id          BIGINT              NOT NULL,
    enabled             BOOLEAN             NOT NULL
);
ALTER TABLE user_account ADD CONSTRAINT "pk_user_account" PRIMARY KEY (id);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_username" UNIQUE (username);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_email" UNIQUE (email);
ALTER TABLE user_account ADD CONSTRAINT "fk_user_account_to_sponsor"  FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);]), IndividualChangesetInfo(index=7, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-role, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE role
(
    id                  BIGINT              NOT NULL,
    name                VARCHAR(64)         NOT NULL
);
ALTER TABLE role ADD CONSTRAINT "pk_role" PRIMARY KEY (id);
ALTER TABLE role ADD CONSTRAINT "uc_role_name" UNIQUE (name);]), IndividualChangesetInfo(index=8, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-user_role, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE user_role
(
    user_account_id     BIGINT              NOT NULL,
    role_id             BIGINT              NOT NULL
);
ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id);
ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_role" FOREIGN KEY (role_id) REFERENCES role (id);
ALTER TABLE user_role ADD CONSTRAINT "uc_user_role_user_account_id_role_id" UNIQUE (user_account_id, role_id);]), IndividualChangesetInfo(index=9, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-job, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE job
(
    id                  BIGINT              NOT NULL,
    job_uuid            VARCHAR(255)        NOT NULL,
    user_account_id     BIGINT              NOT NULL,
    created_at          TIMESTAMP WITH TIME ZONE         NOT NULL,
    expires_at          TIMESTAMP WITH TIME ZONE,
    resource_types      VARCHAR(255),
    status              VARCHAR(32)         NOT NULL,
    status_message      TEXT,
    request_url         TEXT,
    progress            INT,
    last_poll_time      TIMESTAMP WITH TIME ZONE,
    completed_at        TIMESTAMP WITH TIME ZONE
);
ALTER TABLE job ADD CONSTRAINT "pk_job" PRIMARY KEY (id);
ALTER TABLE job ADD CONSTRAINT uc_job_job_uuid UNIQUE (job_uuid);
ALTER TABLE job ADD CONSTRAINT "fk_job_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id);]), IndividualChangesetInfo(index=10, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-job_output, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE job_output
(
    id                  BIGINT              NOT NULL,
    job_id              BIGINT              NOT NULL,
    file_path           TEXT                NOT NULL,
    fhir_resource_type  VARCHAR(255)        NOT NULL,
    error               BOOLEAN             NOT NULL
);
ALTER TABLE job_output ADD CONSTRAINT "pk_job_output" PRIMARY KEY (id);
ALTER TABLE job_output ADD CONSTRAINT "fk_job_output_to_job" FOREIGN KEY (job_id) REFERENCES job (id);]), IndividualChangesetInfo(index=11, changesetAuthor=spathiyil, changesetId=AB2D-514-CreateTable-consent, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE consent
(
    id                  BIGINT                      NOT NULL,
    hicn                VARCHAR(64)                 NOT NULL,
    effective_date      DATE                        NOT NULL,
    policy_code         VARCHAR(255)                NOT NULL,
    purpose_code        VARCHAR(255)                NOT NULL,
    lo_inc_code         VARCHAR(255)                NOT NULL,
    scope_code          VARCHAR(255)                NOT NULL
);
ALTER TABLE consent ADD CONSTRAINT "pk_consent" PRIMARY KEY (id);
CREATE INDEX "ix_consent_hicn" ON consent (hicn);]), IndividualChangesetInfo(index=12, changesetAuthor=dkrylovsb, changesetId=initial_data_seed, changelogFile=db/changelog/v001/seed_data.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ADMIN');
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'SPONSOR');
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 1, 'Haag-Goodwin', null, null);
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999, 'Kutch LLC', null,
                                                                           (select id from sponsor where hpms_id=1));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'EileenCFrierson@example.com', 'Eileen', 'Frierson', 'EileenCFrierson@example.com', (select id from sponsor where hpms_id=999), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='EileenCFrierson@example.com'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0001', 'S0001',
                                                                                           (select id from sponsor where hpms_id=999), '2019-11-01');]), IndividualChangesetInfo(index=13, changesetAuthor=spathiyil, changesetId=ab2d-599-rename-consent-table-to-opt_out, changelogFile=db/changelog/v001/ab2d-599-rename-consent.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE consent RENAME TO opt_out;
ALTER TABLE opt_out RENAME CONSTRAINT "pk_consent" TO "pk_opt_out";
ALTER INDEX "ix_consent_hicn" RENAME TO "ix_opt_out_hicn";]), IndividualChangesetInfo(index=14, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/add_contract_number_to_job.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[ALTER TABLE job ADD COLUMN contract_id BIGINT DEFAULT NULL;
ALTER TABLE job ADD CONSTRAINT "fk_job_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);]), IndividualChangesetInfo(index=15, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/remove_not_null_job_output.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[ALTER TABLE job_output ALTER COLUMN fhir_resource_type DROP NOT NULL;]), IndividualChangesetInfo(index=16, changesetAuthor=spathiyil, changesetId=ab2d-828-increase-username-column-length, changelogFile=db/changelog/v001/ab2d-828-increase-username-column-length.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE user_account ALTER COLUMN username TYPE VARCHAR(255);]), IndividualChangesetInfo(index=17, changesetAuthor=lsharshar, changesetId=ab2d-777-opt-out-resolve-ben-id-mbi, changelogFile=db/changelog/v001/ab2d-777-resolve_diff_ids.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE opt_out ADD COLUMN mbi VARCHAR(255);
ALTER TABLE opt_out ADD COLUMN ccw_id VARCHAR(255);]), IndividualChangesetInfo(index=18, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/add_sbx_accounts.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 8, 'PDP-SBX', null, null);

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 2, 'PDP-100', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 3, 'PDP-1000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 4, 'PDP-2000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 5, 'PDP-5000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 6, 'PDP-10000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 7, 'PDP-30000', null, (select id from sponsor where hpms_id=8));

UPDATE user_account SET enabled = false WHERE username = 'EileenCFrierson@example.com';

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lsrdZw5uWRx297', null, null, null, (select id from sponsor where hpms_id=2), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lsrdZw5uWRx297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lc65ErV8OmY297', null, null, null, (select id from sponsor where hpms_id=3), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lc65ErV8OmY297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lkicpxFGkGt297', null, null, null, (select id from sponsor where hpms_id=4), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lkicpxFGkGt297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0l6c1tQbTikz297', null, null, null, (select id from sponsor where hpms_id=5), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0l6c1tQbTikz297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lm9qoAtJHqC297', null, null, null, (select id from sponsor where hpms_id=6), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lm9qoAtJHqC297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lrjyVeVAZjt297', null, null, null, (select id from sponsor where hpms_id=7), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lrjyVeVAZjt297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0000', 'S0000',
                                                                                           (select id from sponsor where hpms_id=2), '2019-11-01');

UPDATE contract SET sponsor_id = (select id from sponsor where hpms_id = 3) WHERE contract_number = 'S0001';

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0002', 'S0002',
                                                                                           (select id from sponsor where hpms_id=4), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0005', 'S0005',
                                                                                           (select id from sponsor where hpms_id=5), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0010', 'S0010',
                                                                                           (select id from sponsor where hpms_id=6), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0030', 'S0030',
                                                                                           (select id from sponsor where hpms_id=7), '2019-11-01');]), IndividualChangesetInfo(index=19, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/add_multicontract_data.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 9, 'AB2D-PDP-MULTICONTRACT', null, null);

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 10, 'AB2D-PDP-S0003', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 11, 'AB2D-PDP-S0004', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 12, 'AB2D-PDP-S0006', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 13, 'AB2D-PDP-S0007', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 14, 'AB2D-PDP-S0008', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 15, 'AB2D-PDP-S0009', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 16, 'AB2D-PDP-S0015', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 17, 'AB2D-PDP-S0100', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 18, 'AB2D-PDP-S0200', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 19, 'AB2D-PDP-S0300', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 20, 'AB2D-PDP-S0400', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 21, 'AB2D-PDP-S0500', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 22, 'AB2D-PDP-S1000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 23, 'AB2D-PDP-S2000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 24, 'AB2D-PDP-S3000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 25, 'AB2D-PDP-S5000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 26, 'AB2D-PDP-S9000', null, (select id from sponsor where hpms_id=9));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t7wfhvB2qSqPg297', null, null, null, (select id from sponsor where hpms_id=9), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t7wfhvB2qSqPg297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t7wdgfB2qSRTg397', null, null, null, (select id from sponsor where hpms_id=10), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t7wdgfB2qSRTg397'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca27wdgfKefjefTg534', null, null, null, (select id from sponsor where hpms_id=11), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca27wdgfKefjefTg534'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca27wcvnxkjjefTg334', null, null, null, (select id from sponsor where hpms_id=12), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca27wcvnxkjjefTg334'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca27w535jfejefTg124', null, null, null, (select id from sponsor where hpms_id=13), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca27w535jfejefTg124'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca902fhewffhhhwg144', null, null, null, (select id from sponsor where hpms_id=14), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca902fhewffhhhwg144'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '039fuewmn44fhhhwg144', null, null, null, (select id from sponsor where hpms_id=15), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='039fuewmn44fhhhwg144'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '832hfwef93hfkkf3hhhh', null, null, null, (select id from sponsor where hpms_id=16), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='832hfwef93hfkkf3hhhh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '9fhselhffhf93jhflshh', null, null, null, (select id from sponsor where hpms_id=17), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='9fhselhffhf93jhflshh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '39fhklsfzxmneu32feff', null, null, null, (select id from sponsor where hpms_id=18), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='39fhklsfzxmneu32feff'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'bvk329df23fhjfsdjkef', null, null, null, (select id from sponsor where hpms_id=19), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='bvk329df23fhjfsdjkef'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vdbewfjzjhfew93fh3hh', null, null, null, (select id from sponsor where hpms_id=20), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vdbewfjzjhfew93fh3hh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'zvhjefio239fhiew2fff', null, null, null, (select id from sponsor where hpms_id=21), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='zvhjefio239fhiew2fff'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vxcliwefnl239f03f2jf', null, null, null, (select id from sponsor where hpms_id=22), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vxcliwefnl239f03f2jf'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vzdhwfehj3249fwejkfh', null, null, null, (select id from sponsor where hpms_id=23), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vzdhwfehj3249fwejkfh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vznkweicln349fn32rjj', null, null, null, (select id from sponsor where hpms_id=24), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vznkweicln349fn32rjj'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'xi43hl32sdfl3kfkljew', null, null, null, (select id from sponsor where hpms_id=25), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='xi43hl32sdfl3kfkljew'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'afwjil423fweohfwejkl', null, null, null, (select id from sponsor where hpms_id=26), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='afwjil423fweohfwejkl'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0003', 'S0003',
                                                                                           (select id from sponsor where hpms_id=10), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0004', 'S0004',
                                                                                           (select id from sponsor where hpms_id=11), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0006', 'S0006',
                                                                                           (select id from sponsor where hpms_id=12), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0007', 'S0007',
                                                                                           (select id from sponsor where hpms_id=13), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0008', 'S0008',
                                                                                           (select id from sponsor where hpms_id=14), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0009', 'S0009',
                                                                                           (select id from sponsor where hpms_id=15), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0015', 'S0015',
                                                                                           (select id from sponsor where hpms_id=16), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0100', 'S0100',
                                                                                           (select id from sponsor where hpms_id=17), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0200', 'S0200',
                                                                                           (select id from sponsor where hpms_id=18), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0300', 'S0300',
                                                                                           (select id from sponsor where hpms_id=19), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0400', 'S0400',
                                                                                           (select id from sponsor where hpms_id=20), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0500', 'S0500',
                                                                                           (select id from sponsor where hpms_id=21), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S1000', 'S1000',
                                                                                           (select id from sponsor where hpms_id=22), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S2000', 'S2000',
                                                                                           (select id from sponsor where hpms_id=23), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S3000', 'S3000',
                                                                                           (select id from sponsor where hpms_id=24), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S5000', 'S5000',
                                                                                           (select id from sponsor where hpms_id=25), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S9000', 'S9000',
                                                                                           (select id from sponsor where hpms_id=26), '2019-11-01');]), IndividualChangesetInfo(index=20, changesetAuthor=lsharshar, changesetId=AB2D-747-filter-out-claims-on-dates, changelogFile=db/changelog/v001/update_attestation_date.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[UPDATE contract SET attested_on='2000-01-01';]), IndividualChangesetInfo(index=21, changesetAuthor=adaykin, changesetId=add_concurrent_job_column, changelogFile=db/changelog/v001/add_concurrent_job_column.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE user_account ADD COLUMN max_parallel_jobs INT DEFAULT 1 NOT NULL;
UPDATE user_account SET max_parallel_jobs = 3;
UPDATE user_account SET max_parallel_jobs = 30 WHERE username = '0oa2t7wfhvB2qSqPg297';]), IndividualChangesetInfo(index=22, changesetAuthor=adaykin, changesetId=add_downloaded_to_job_output, changelogFile=db/changelog/v001/add_downloaded_to_job_output.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE job_output ADD COLUMN downloaded boolean NOT NULL DEFAULT false;
ALTER TABLE job_output ADD CONSTRAINT "uc_job_id_file_path" UNIQUE (job_id, file_path);]), IndividualChangesetInfo(index=23, changesetAuthor=lsharshar, changesetId=ab2d-934-allow-for-zip-downloads, changelogFile=db/changelog/v001/ab2d-934-allow-for-zip-downloads.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE job ADD COLUMN output_format VARCHAR(255);]), IndividualChangesetInfo(index=24, changesetAuthor=spathiyil, changesetId=ab2d-1069-drop-coverage-table, changelogFile=db/changelog/v001/ab2d-1069-recreate-coverage-table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[DROP TABLE coverage;]), IndividualChangesetInfo(index=25, changesetAuthor=spathiyil, changesetId=ab2d-1069-recreate-coverage-table-with-id-and-month, changelogFile=db/changelog/v001/ab2d-1069-recreate-coverage-table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE coverage
(
    id                  BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL,
    beneficiary_id      BIGINT              NOT NULL,
    part_d_month        INTEGER             NOT NULL
);
ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month" UNIQUE (contract_id, beneficiary_id, part_d_month);
CREATE INDEX "ix_coverage_contract_id_month" ON coverage (contract_id, part_d_month);]), IndividualChangesetInfo(index=26, changesetAuthor=adaykin, changesetId=add_properties_table, changelogFile=db/changelog/v001/add_properties_table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE properties (
    id BIGINT NOT NULL,
    key VARCHAR(80) NOT NULL,
    value VARCHAR(255) NOT NULL
);
ALTER TABLE properties ADD CONSTRAINT "uc_properties_key" UNIQUE (key);
ALTER TABLE properties ADD CONSTRAINT "pk_properties" PRIMARY KEY (id);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.core.pool.size', 10);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.max.pool.size', 150);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.scaleToMax.time', 900);]), IndividualChangesetInfo(index=27, changesetAuthor=adaykin, changesetId=modify_hpms_ids, changelogFile=db/changelog/v001/modify_hpms_ids.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[UPDATE sponsor SET hpms_id = hpms_id * 10000;]), IndividualChangesetInfo(index=28, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/add_maintenance_mode_property.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'maintenance.mode', 'false');]), IndividualChangesetInfo(index=29, changesetAuthor=spathiyil, changesetId=add_contract2benecache_toggle_in_property_table, changelogFile=db/changelog/v001/add_contract2beneCache_toggle_property.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'ContractToBeneCachingOn', 'false');]), IndividualChangesetInfo(index=30, changesetAuthor=spathiyil, changesetId=ab2d_1110_add_zip_support_toggle_in_property_table, changelogFile=db/changelog/v001/add_zip_support_toggle_property.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'ZipSupportOn', 'false');]), IndividualChangesetInfo(index=31, changesetAuthor=lsharshar, changesetId=ab2d-1144-add-since-val, changelogFile=db/changelog/v001/ab2d-1144-add-since-val.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[alter table job add column since TIMESTAMP WITH TIME ZONE;]), IndividualChangesetInfo(index=32, changesetAuthor=spathiyil, changesetId=ab2d_1167_add_column_to_opt_out_table, changelogFile=db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE opt_out
 ADD COLUMN filename        VARCHAR(255)    NOT NULL;]), IndividualChangesetInfo(index=33, changesetAuthor=spathiyil, changesetId=ab2d_1167_add_indexes_on_opt_out_table, changelogFile=db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE INDEX "ix_opt_out_ccw_id"        ON opt_out (ccw_id);
CREATE INDEX "ix_opt_out_ccw_id_hicn"   ON opt_out (ccw_id, hicn);]), IndividualChangesetInfo(index=34, changesetAuthor=adaykin, changesetId=add_checksum_length_job_output, changelogFile=db/changelog/v001/add_checksum_length_job_output.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE job_output ADD COLUMN checksum VARCHAR(64) NOT NULL;
ALTER TABLE job_output ADD COLUMN file_length BIGINT NOT NULL;]), IndividualChangesetInfo(index=35, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-api-request, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_api_request
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        job_id VARCHAR(255),
        user_id VARCHAR(255),
        url VARCHAR(2048),
        ip_address VARCHAR(32),
        token_hash VARCHAR(255),
        request_id VARCHAR(255)
);
ALTER TABLE event_api_request ADD CONSTRAINT "pk_api_request_event" PRIMARY KEY (id);
CREATE INDEX "ix_api_request_user" ON event_api_request (user_id);]), IndividualChangesetInfo(index=36, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-api-response, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_api_response
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        response_code INT,
        response_string TEXT,
        description TEXT,
        request_id VARCHAR (255)
);
ALTER TABLE event_api_response ADD CONSTRAINT "pk_api_response_event" PRIMARY KEY (id);
CREATE INDEX "ix_api_response_user" ON event_api_response (user_id);]), IndividualChangesetInfo(index=37, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-bene-reload, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_bene_reload
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        file_type VARCHAR (255),
        file_name VARCHAR (500),
        number_loaded INT
);
ALTER TABLE event_bene_reload ADD CONSTRAINT "pk_bene_reload_event" PRIMARY KEY (id);]), IndividualChangesetInfo(index=38, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-bene-search, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_bene_search
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        contract_number VARCHAR(255),
        num_in_contract INT,
        num_searched INT,
        num_opted_out INT,
        num_errors INT
);
ALTER TABLE event_bene_search ADD CONSTRAINT "pk_bene_search_event" PRIMARY KEY (id);
CREATE INDEX "ix_bene_search_job_id" ON event_bene_search (job_id);]), IndividualChangesetInfo(index=39, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-error, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_error
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        error_type VARCHAR(255),
        description TEXT
);
ALTER TABLE event_error ADD CONSTRAINT "pk_error_event" PRIMARY KEY (id);]), IndividualChangesetInfo(index=40, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-file, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_file
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        file_name VARCHAR (500),
        status VARCHAR (255),
        file_size BIGINT,
        file_hash VARCHAR (255)
);
ALTER TABLE event_file ADD CONSTRAINT "pk_file_event" PRIMARY KEY (id);
CREATE INDEX "ix_file_event_job_id" ON event_file (job_id);]), IndividualChangesetInfo(index=41, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-job_status_change, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_job_status_change
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        old_status VARCHAR (255),
        new_status VARCHAR (255),
        description TEXT
);
ALTER TABLE event_job_status_change ADD CONSTRAINT "pk_job_status_change_event" PRIMARY KEY (id);
CREATE INDEX "ix_job_status_job_id" ON event_job_status_change (job_id);]), IndividualChangesetInfo(index=42, changesetAuthor=adaykin, changesetId=add_admin_user, changelogFile=db/changelog/v001/add_admin_user.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999999, 'AB2D Admin', null, null);
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
                                                                                                   '0oa32rfir2xLtx7s2297', null, null, null, (select id from sponsor where hpms_id=999999), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa32rfir2xLtx7s2297'),
                                                         (SELECT id FROM role WHERE name='ADMIN'));]), IndividualChangesetInfo(index=43, changesetAuthor=adaykin, changesetId=update_contract_numbers, changelogFile=db/changelog/v001/update_contract_numbers.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';]), IndividualChangesetInfo(index=44, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/modify_hicn.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[ALTER TABLE opt_out ALTER COLUMN hicn DROP NOT NULL;]), IndividualChangesetInfo(index=45, changesetAuthor=lsharshar, changesetId=ab2d-1377-create-kinesis-logger, changelogFile=db/changelog/v001/ab2d-1377-add-aws-id.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE event_api_request ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_error ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_file ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN aws_id VARCHAR(255);]), IndividualChangesetInfo(index=46, changesetAuthor=lsharshar, changesetId=ab2d-1377-create-kinesis-logger, changelogFile=db/changelog/v001/ab2d-1377-add-env-id.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE event_api_request ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_error ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_file ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN environment VARCHAR(255);]), IndividualChangesetInfo(index=47, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/create_opt_out_file_table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[CREATE TABLE opt_out_file (
    id BIGINT NOT NULL,
    filename VARCHAR(256) NOT NULL
);

ALTER TABLE opt_out_file ADD CONSTRAINT "pk_opt_out_file" PRIMARY KEY (id);
ALTER TABLE opt_out_file ADD CONSTRAINT "uc_opt_out_file_filename" UNIQUE (filename);]), IndividualChangesetInfo(index=48, changesetAuthor=lhanekam, changesetId=add_properties_data_01, changelogFile=db/changelog/v001/add_properties_data_01.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'worker.engaged', 'engaged');]), IndividualChangesetInfo(index=49, changesetAuthor=adaykin, changesetId=add_attestor_role, changelogFile=db/changelog/v001/add_attestor_role.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ATTESTOR');]), IndividualChangesetInfo(index=50, changesetAuthor=enolan, changesetId=add_created_modified_date, changelogFile=db/changelog/v001/add_created_modified_date.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE contract SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE properties SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE role SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';]), IndividualChangesetInfo(index=51, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/add_ip_table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[CREATE TABLE sponsor_ip (
    sponsor_id BIGINT NOT NULL,
    ip_address INET,
    PRIMARY KEY (sponsor_id, ip_address)
);

ALTER TABLE sponsor_ip ADD CONSTRAINT "fk_sponsor_ip_to_sponsor"  FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);]), IndividualChangesetInfo(index=52, changesetAuthor=wnyffenegger, changesetId=modify_coverage_schema, changelogFile=db/changelog/v001/modify_coverage_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);
DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";
DROP TABLE coverage;
DROP TABLE beneficiary;
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);
ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);]), IndividualChangesetInfo(index=53, changesetAuthor=lsharshar, changesetId=remove_opt_out, changelogFile=db/changelog/v001/remove_opt_out.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[drop table opt_out_file;
drop table opt_out;]), IndividualChangesetInfo(index=54, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/add_hpms_info_to_contract.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[ALTER TABLE contract
    ADD COLUMN hpms_parent_org_id BIGINT,
    ADD COLUMN hpms_parent_org_name VARCHAR(255),
    ADD COLUMN hpms_org_marketing_name VARCHAR(255);

INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'hpms.ingest.engaged', 'engaged');]), IndividualChangesetInfo(index=55, changesetAuthor=lsharshar, changesetId=add_coverage_search_table, changelogFile=db/changelog/v001/add_coverage_search.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE coverage_search (
    id BIGINT NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    attempts INTEGER NOT NULL DEFAULT 0,
    created timestamp
);
ALTER TABLE coverage_search ADD CONSTRAINT "pk_coverage_search" PRIMARY KEY (id);
ALTER TABLE coverage_search ADD CONSTRAINT "fk_coverage_search_bene_coverage_period"
    FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period(id);]), IndividualChangesetInfo(index=56, changesetAuthor=wnyffenegger, changesetId=add_last_success_to_coverage_period, changelogFile=db/changelog/v001/add_last_success_to_coverage_period.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE bene_coverage_period ADD COLUMN last_successful_job TIMESTAMP WITH TIME ZONE DEFAULT NULL;]), IndividualChangesetInfo(index=57, changesetAuthor=wnyffenegger, changesetId=add_mbi_to_coverage, changelogFile=db/changelog/v001/add_mbi_to_coverage.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[DELETE FROM coverage;
ALTER TABLE coverage ADD COLUMN "current_mbi" VARCHAR(32);
ALTER TABLE coverage ADD COLUMN "historic_mbis" VARCHAR(256);
DROP INDEX "ix_coverage_period_beneficiary_id_index";
DROP INDEX "ix_coverage_period_beneficiary_id_index_inverted";
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id) INCLUDE (current_mbi, historic_mbis);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id) INCLUDE (current_mbi, historic_mbis);]), IndividualChangesetInfo(index=58, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql, comment=null, success=false, changesetOutcome=FAILED, errorMsg=ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id], labels=null, contexts=null, attributes=[], generatedSql=[-- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id;])], pendingChangesetInfoList=[]), date=Wed Jun 25 13:39:59 MST 2025)'
    command argument 'updateReportParameters' of 'UpdateReportParameters(changelogArgValue=db/changelog/db.changelog-master.yaml, jdbcUrl=jdbc:postgresql://localhost:5432/test_database, tag=null, commandTitle=Update, success=false, databaseInfo=DatabaseInfo(databaseType=PostgreSQL, version=16.9 (Postgres.app), databaseUrl=jdbc:postgresql://localhost:5432/test_database), runtimeInfo=RuntimeInfo(systemUsername=ben, hostname=Bens-MacBook-Pro.local, os=Mac OS X, interfaceType=null, startTime=null, updateDuration=null, liquibaseVersion=4.32.0, javaVersion=24.0.1), operationInfo=OperationInfo(command=null, operationOutcome=fail, operationOutcomeErrorMsg=null, exception=Migration failed for changeset db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll:
     Reason: liquibase.exception.DatabaseException: ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id], updateSummaryMsg=
UPDATE SUMMARY
Run:                         57
Previously run:               0
Filtered out:                 0
-------------------------------
Total change sets:          106

, rowsAffected=null, rollbackOnError=false, labels=null, contexts=), customData=CustomData(customDataFile=null, fileContents=null), changesetInfo=ChangesetInfo(changesetCount=58, pendingChangesetCount=0, failedChangesetCount=1, changesetInfoList=[IndividualChangesetInfo(index=1, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateSequence-hibernate_sequence, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE SEQUENCE hibernate_sequence START WITH 1 INCREMENT BY 1;]), IndividualChangesetInfo(index=2, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-beneficiary, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE beneficiary
(
    id                  BIGINT              NOT NULL,
    patient_id          VARCHAR(255)        NOT NULL
);
ALTER TABLE beneficiary ADD CONSTRAINT "pk_beneficiary" PRIMARY KEY (id);
ALTER TABLE beneficiary ADD CONSTRAINT "uc_beneficiary_patient_id" UNIQUE (patient_id);]), IndividualChangesetInfo(index=3, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-sponsor, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE sponsor
(
    id                  BIGINT              NOT NULL,
    hpms_id             INTEGER             NOT NULL,
    org_name            VARCHAR(255)        NOT NULL,
    legal_name          VARCHAR(255),
    parent_id           BIGINT
);
ALTER TABLE sponsor ADD CONSTRAINT "pk_sponsor" PRIMARY KEY (id);
ALTER TABLE sponsor ADD CONSTRAINT "fk_sponsor_to_sponsor_parent" FOREIGN KEY (parent_id) REFERENCES sponsor (id);]), IndividualChangesetInfo(index=4, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-contract, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE contract
(
    id                  BIGINT              NOT NULL,
    contract_number     VARCHAR(255)        NOT NULL,
    contract_name       VARCHAR(255)        NOT NULL,
    sponsor_id          BIGINT NOT NULL,
    attested_on         TIMESTAMP WITH TIME ZONE
);
ALTER TABLE contract ADD CONSTRAINT "pk_contract" PRIMARY KEY (id);
ALTER TABLE contract ADD CONSTRAINT "uc_contract_contract_number" UNIQUE (contract_number);
ALTER TABLE contract ADD CONSTRAINT "fk_contract_to_sponsor" FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);]), IndividualChangesetInfo(index=5, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-coverage, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE coverage
(
    beneficiary_id      BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL
);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_beneficiary_id_contract_id" UNIQUE (beneficiary_id, contract_id);]), IndividualChangesetInfo(index=6, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-user_account, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE user_account
(
    id                  BIGINT              NOT NULL,
    username           VARCHAR(64)         NOT NULL,
    first_name          VARCHAR(64),
    last_name           VARCHAR(64),
    email               VARCHAR(255),
    sponsor_id          BIGINT              NOT NULL,
    enabled             BOOLEAN             NOT NULL
);
ALTER TABLE user_account ADD CONSTRAINT "pk_user_account" PRIMARY KEY (id);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_username" UNIQUE (username);
ALTER TABLE user_account ADD CONSTRAINT "uc_user_account_email" UNIQUE (email);
ALTER TABLE user_account ADD CONSTRAINT "fk_user_account_to_sponsor"  FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);]), IndividualChangesetInfo(index=7, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-role, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE role
(
    id                  BIGINT              NOT NULL,
    name                VARCHAR(64)         NOT NULL
);
ALTER TABLE role ADD CONSTRAINT "pk_role" PRIMARY KEY (id);
ALTER TABLE role ADD CONSTRAINT "uc_role_name" UNIQUE (name);]), IndividualChangesetInfo(index=8, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-user_role, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE user_role
(
    user_account_id     BIGINT              NOT NULL,
    role_id             BIGINT              NOT NULL
);
ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id);
ALTER TABLE user_role ADD CONSTRAINT "fk_user_role_to_role" FOREIGN KEY (role_id) REFERENCES role (id);
ALTER TABLE user_role ADD CONSTRAINT "uc_user_role_user_account_id_role_id" UNIQUE (user_account_id, role_id);]), IndividualChangesetInfo(index=9, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-job, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE job
(
    id                  BIGINT              NOT NULL,
    job_uuid            VARCHAR(255)        NOT NULL,
    user_account_id     BIGINT              NOT NULL,
    created_at          TIMESTAMP WITH TIME ZONE         NOT NULL,
    expires_at          TIMESTAMP WITH TIME ZONE,
    resource_types      VARCHAR(255),
    status              VARCHAR(32)         NOT NULL,
    status_message      TEXT,
    request_url         TEXT,
    progress            INT,
    last_poll_time      TIMESTAMP WITH TIME ZONE,
    completed_at        TIMESTAMP WITH TIME ZONE
);
ALTER TABLE job ADD CONSTRAINT "pk_job" PRIMARY KEY (id);
ALTER TABLE job ADD CONSTRAINT uc_job_job_uuid UNIQUE (job_uuid);
ALTER TABLE job ADD CONSTRAINT "fk_job_to_user_account" FOREIGN KEY (user_account_id) REFERENCES user_account (id);]), IndividualChangesetInfo(index=10, changesetAuthor=spathiyil, changesetId=AB2D-291-CreateTable-job_output, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE job_output
(
    id                  BIGINT              NOT NULL,
    job_id              BIGINT              NOT NULL,
    file_path           TEXT                NOT NULL,
    fhir_resource_type  VARCHAR(255)        NOT NULL,
    error               BOOLEAN             NOT NULL
);
ALTER TABLE job_output ADD CONSTRAINT "pk_job_output" PRIMARY KEY (id);
ALTER TABLE job_output ADD CONSTRAINT "fk_job_output_to_job" FOREIGN KEY (job_id) REFERENCES job (id);]), IndividualChangesetInfo(index=11, changesetAuthor=spathiyil, changesetId=AB2D-514-CreateTable-consent, changelogFile=db/changelog/v001/schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE consent
(
    id                  BIGINT                      NOT NULL,
    hicn                VARCHAR(64)                 NOT NULL,
    effective_date      DATE                        NOT NULL,
    policy_code         VARCHAR(255)                NOT NULL,
    purpose_code        VARCHAR(255)                NOT NULL,
    lo_inc_code         VARCHAR(255)                NOT NULL,
    scope_code          VARCHAR(255)                NOT NULL
);
ALTER TABLE consent ADD CONSTRAINT "pk_consent" PRIMARY KEY (id);
CREATE INDEX "ix_consent_hicn" ON consent (hicn);]), IndividualChangesetInfo(index=12, changesetAuthor=dkrylovsb, changesetId=initial_data_seed, changelogFile=db/changelog/v001/seed_data.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ADMIN');
INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'SPONSOR');
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 1, 'Haag-Goodwin', null, null);
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999, 'Kutch LLC', null,
                                                                           (select id from sponsor where hpms_id=1));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'EileenCFrierson@example.com', 'Eileen', 'Frierson', 'EileenCFrierson@example.com', (select id from sponsor where hpms_id=999), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='EileenCFrierson@example.com'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0001', 'S0001',
                                                                                           (select id from sponsor where hpms_id=999), '2019-11-01');]), IndividualChangesetInfo(index=13, changesetAuthor=spathiyil, changesetId=ab2d-599-rename-consent-table-to-opt_out, changelogFile=db/changelog/v001/ab2d-599-rename-consent.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE consent RENAME TO opt_out;
ALTER TABLE opt_out RENAME CONSTRAINT "pk_consent" TO "pk_opt_out";
ALTER INDEX "ix_consent_hicn" RENAME TO "ix_opt_out_hicn";]), IndividualChangesetInfo(index=14, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/add_contract_number_to_job.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[ALTER TABLE job ADD COLUMN contract_id BIGINT DEFAULT NULL;
ALTER TABLE job ADD CONSTRAINT "fk_job_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);]), IndividualChangesetInfo(index=15, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/remove_not_null_job_output.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[ALTER TABLE job_output ALTER COLUMN fhir_resource_type DROP NOT NULL;]), IndividualChangesetInfo(index=16, changesetAuthor=spathiyil, changesetId=ab2d-828-increase-username-column-length, changelogFile=db/changelog/v001/ab2d-828-increase-username-column-length.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE user_account ALTER COLUMN username TYPE VARCHAR(255);]), IndividualChangesetInfo(index=17, changesetAuthor=lsharshar, changesetId=ab2d-777-opt-out-resolve-ben-id-mbi, changelogFile=db/changelog/v001/ab2d-777-resolve_diff_ids.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE opt_out ADD COLUMN mbi VARCHAR(255);
ALTER TABLE opt_out ADD COLUMN ccw_id VARCHAR(255);]), IndividualChangesetInfo(index=18, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/add_sbx_accounts.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 8, 'PDP-SBX', null, null);

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 2, 'PDP-100', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 3, 'PDP-1000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 4, 'PDP-2000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 5, 'PDP-5000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 6, 'PDP-10000', null, (select id from sponsor where hpms_id=8));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 7, 'PDP-30000', null, (select id from sponsor where hpms_id=8));

UPDATE user_account SET enabled = false WHERE username = 'EileenCFrierson@example.com';

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lsrdZw5uWRx297', null, null, null, (select id from sponsor where hpms_id=2), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lsrdZw5uWRx297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lc65ErV8OmY297', null, null, null, (select id from sponsor where hpms_id=3), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lc65ErV8OmY297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lkicpxFGkGt297', null, null, null, (select id from sponsor where hpms_id=4), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lkicpxFGkGt297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0l6c1tQbTikz297', null, null, null, (select id from sponsor where hpms_id=5), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0l6c1tQbTikz297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lm9qoAtJHqC297', null, null, null, (select id from sponsor where hpms_id=6), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lm9qoAtJHqC297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t0lrjyVeVAZjt297', null, null, null, (select id from sponsor where hpms_id=7), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t0lrjyVeVAZjt297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0000', 'S0000',
                                                                                           (select id from sponsor where hpms_id=2), '2019-11-01');

UPDATE contract SET sponsor_id = (select id from sponsor where hpms_id = 3) WHERE contract_number = 'S0001';

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0002', 'S0002',
                                                                                           (select id from sponsor where hpms_id=4), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0005', 'S0005',
                                                                                           (select id from sponsor where hpms_id=5), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0010', 'S0010',
                                                                                           (select id from sponsor where hpms_id=6), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0030', 'S0030',
                                                                                           (select id from sponsor where hpms_id=7), '2019-11-01');]), IndividualChangesetInfo(index=19, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/add_multicontract_data.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 9, 'AB2D-PDP-MULTICONTRACT', null, null);

INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 10, 'AB2D-PDP-S0003', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 11, 'AB2D-PDP-S0004', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 12, 'AB2D-PDP-S0006', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 13, 'AB2D-PDP-S0007', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 14, 'AB2D-PDP-S0008', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 15, 'AB2D-PDP-S0009', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 16, 'AB2D-PDP-S0015', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 17, 'AB2D-PDP-S0100', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 18, 'AB2D-PDP-S0200', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 19, 'AB2D-PDP-S0300', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 20, 'AB2D-PDP-S0400', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 21, 'AB2D-PDP-S0500', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 22, 'AB2D-PDP-S1000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 23, 'AB2D-PDP-S2000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 24, 'AB2D-PDP-S3000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 25, 'AB2D-PDP-S5000', null, (select id from sponsor where hpms_id=9));
INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 26, 'AB2D-PDP-S9000', null, (select id from sponsor where hpms_id=9));

INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t7wfhvB2qSqPg297', null, null, null, (select id from sponsor where hpms_id=9), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t7wfhvB2qSqPg297'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0oa2t7wdgfB2qSRTg397', null, null, null, (select id from sponsor where hpms_id=10), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa2t7wdgfB2qSRTg397'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca27wdgfKefjefTg534', null, null, null, (select id from sponsor where hpms_id=11), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca27wdgfKefjefTg534'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca27wcvnxkjjefTg334', null, null, null, (select id from sponsor where hpms_id=12), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca27wcvnxkjjefTg334'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca27w535jfejefTg124', null, null, null, (select id from sponsor where hpms_id=13), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca27w535jfejefTg124'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '0ca902fhewffhhhwg144', null, null, null, (select id from sponsor where hpms_id=14), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0ca902fhewffhhhwg144'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '039fuewmn44fhhhwg144', null, null, null, (select id from sponsor where hpms_id=15), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='039fuewmn44fhhhwg144'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '832hfwef93hfkkf3hhhh', null, null, null, (select id from sponsor where hpms_id=16), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='832hfwef93hfkkf3hhhh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '9fhselhffhf93jhflshh', null, null, null, (select id from sponsor where hpms_id=17), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='9fhselhffhf93jhflshh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    '39fhklsfzxmneu32feff', null, null, null, (select id from sponsor where hpms_id=18), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='39fhklsfzxmneu32feff'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'bvk329df23fhjfsdjkef', null, null, null, (select id from sponsor where hpms_id=19), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='bvk329df23fhjfsdjkef'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vdbewfjzjhfew93fh3hh', null, null, null, (select id from sponsor where hpms_id=20), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vdbewfjzjhfew93fh3hh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'zvhjefio239fhiew2fff', null, null, null, (select id from sponsor where hpms_id=21), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='zvhjefio239fhiew2fff'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vxcliwefnl239f03f2jf', null, null, null, (select id from sponsor where hpms_id=22), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vxcliwefnl239f03f2jf'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vzdhwfehj3249fwejkfh', null, null, null, (select id from sponsor where hpms_id=23), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vzdhwfehj3249fwejkfh'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'vznkweicln349fn32rjj', null, null, null, (select id from sponsor where hpms_id=24), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='vznkweicln349fn32rjj'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'xi43hl32sdfl3kfkljew', null, null, null, (select id from sponsor where hpms_id=25), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='xi43hl32sdfl3kfkljew'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
    'afwjil423fweohfwejkl', null, null, null, (select id from sponsor where hpms_id=26), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='afwjil423fweohfwejkl'),
                                                         (SELECT id FROM role WHERE name='SPONSOR'));

INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0003', 'S0003',
                                                                                           (select id from sponsor where hpms_id=10), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0004', 'S0004',
                                                                                           (select id from sponsor where hpms_id=11), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0006', 'S0006',
                                                                                           (select id from sponsor where hpms_id=12), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0007', 'S0007',
                                                                                           (select id from sponsor where hpms_id=13), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0008', 'S0008',
                                                                                           (select id from sponsor where hpms_id=14), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0009', 'S0009',
                                                                                           (select id from sponsor where hpms_id=15), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0015', 'S0015',
                                                                                           (select id from sponsor where hpms_id=16), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0100', 'S0100',
                                                                                           (select id from sponsor where hpms_id=17), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0200', 'S0200',
                                                                                           (select id from sponsor where hpms_id=18), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0300', 'S0300',
                                                                                           (select id from sponsor where hpms_id=19), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0400', 'S0400',
                                                                                           (select id from sponsor where hpms_id=20), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S0500', 'S0500',
                                                                                           (select id from sponsor where hpms_id=21), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S1000', 'S1000',
                                                                                           (select id from sponsor where hpms_id=22), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S2000', 'S2000',
                                                                                           (select id from sponsor where hpms_id=23), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S3000', 'S3000',
                                                                                           (select id from sponsor where hpms_id=24), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S5000', 'S5000',
                                                                                           (select id from sponsor where hpms_id=25), '2019-11-01');
INSERT INTO contract (id, contract_number, contract_name, sponsor_id, attested_on) VALUES ((select nextval('hibernate_sequence')),'S9000', 'S9000',
                                                                                           (select id from sponsor where hpms_id=26), '2019-11-01');]), IndividualChangesetInfo(index=20, changesetAuthor=lsharshar, changesetId=AB2D-747-filter-out-claims-on-dates, changelogFile=db/changelog/v001/update_attestation_date.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[UPDATE contract SET attested_on='2000-01-01';]), IndividualChangesetInfo(index=21, changesetAuthor=adaykin, changesetId=add_concurrent_job_column, changelogFile=db/changelog/v001/add_concurrent_job_column.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE user_account ADD COLUMN max_parallel_jobs INT DEFAULT 1 NOT NULL;
UPDATE user_account SET max_parallel_jobs = 3;
UPDATE user_account SET max_parallel_jobs = 30 WHERE username = '0oa2t7wfhvB2qSqPg297';]), IndividualChangesetInfo(index=22, changesetAuthor=adaykin, changesetId=add_downloaded_to_job_output, changelogFile=db/changelog/v001/add_downloaded_to_job_output.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE job_output ADD COLUMN downloaded boolean NOT NULL DEFAULT false;
ALTER TABLE job_output ADD CONSTRAINT "uc_job_id_file_path" UNIQUE (job_id, file_path);]), IndividualChangesetInfo(index=23, changesetAuthor=lsharshar, changesetId=ab2d-934-allow-for-zip-downloads, changelogFile=db/changelog/v001/ab2d-934-allow-for-zip-downloads.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE job ADD COLUMN output_format VARCHAR(255);]), IndividualChangesetInfo(index=24, changesetAuthor=spathiyil, changesetId=ab2d-1069-drop-coverage-table, changelogFile=db/changelog/v001/ab2d-1069-recreate-coverage-table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[DROP TABLE coverage;]), IndividualChangesetInfo(index=25, changesetAuthor=spathiyil, changesetId=ab2d-1069-recreate-coverage-table-with-id-and-month, changelogFile=db/changelog/v001/ab2d-1069-recreate-coverage-table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE coverage
(
    id                  BIGINT              NOT NULL,
    contract_id         BIGINT              NOT NULL,
    beneficiary_id      BIGINT              NOT NULL,
    part_d_month        INTEGER             NOT NULL
);
ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_beneficiary" FOREIGN KEY (beneficiary_id) REFERENCES beneficiary (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_contract" FOREIGN KEY (contract_id) REFERENCES contract (id);
ALTER TABLE coverage ADD CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month" UNIQUE (contract_id, beneficiary_id, part_d_month);
CREATE INDEX "ix_coverage_contract_id_month" ON coverage (contract_id, part_d_month);]), IndividualChangesetInfo(index=26, changesetAuthor=adaykin, changesetId=add_properties_table, changelogFile=db/changelog/v001/add_properties_table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE properties (
    id BIGINT NOT NULL,
    key VARCHAR(80) NOT NULL,
    value VARCHAR(255) NOT NULL
);
ALTER TABLE properties ADD CONSTRAINT "uc_properties_key" UNIQUE (key);
ALTER TABLE properties ADD CONSTRAINT "pk_properties" PRIMARY KEY (id);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.core.pool.size', 10);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.max.pool.size', 150);
INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'pcp.scaleToMax.time', 900);]), IndividualChangesetInfo(index=27, changesetAuthor=adaykin, changesetId=modify_hpms_ids, changelogFile=db/changelog/v001/modify_hpms_ids.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[UPDATE sponsor SET hpms_id = hpms_id * 10000;]), IndividualChangesetInfo(index=28, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/add_maintenance_mode_property.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'maintenance.mode', 'false');]), IndividualChangesetInfo(index=29, changesetAuthor=spathiyil, changesetId=add_contract2benecache_toggle_in_property_table, changelogFile=db/changelog/v001/add_contract2beneCache_toggle_property.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'ContractToBeneCachingOn', 'false');]), IndividualChangesetInfo(index=30, changesetAuthor=spathiyil, changesetId=ab2d_1110_add_zip_support_toggle_in_property_table, changelogFile=db/changelog/v001/add_zip_support_toggle_property.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'ZipSupportOn', 'false');]), IndividualChangesetInfo(index=31, changesetAuthor=lsharshar, changesetId=ab2d-1144-add-since-val, changelogFile=db/changelog/v001/ab2d-1144-add-since-val.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[alter table job add column since TIMESTAMP WITH TIME ZONE;]), IndividualChangesetInfo(index=32, changesetAuthor=spathiyil, changesetId=ab2d_1167_add_column_to_opt_out_table, changelogFile=db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE opt_out
 ADD COLUMN filename        VARCHAR(255)    NOT NULL;]), IndividualChangesetInfo(index=33, changesetAuthor=spathiyil, changesetId=ab2d_1167_add_indexes_on_opt_out_table, changelogFile=db/changelog/v001/ab2d_1167_add_column_to_opt_out_table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE INDEX "ix_opt_out_ccw_id"        ON opt_out (ccw_id);
CREATE INDEX "ix_opt_out_ccw_id_hicn"   ON opt_out (ccw_id, hicn);]), IndividualChangesetInfo(index=34, changesetAuthor=adaykin, changesetId=add_checksum_length_job_output, changelogFile=db/changelog/v001/add_checksum_length_job_output.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE job_output ADD COLUMN checksum VARCHAR(64) NOT NULL;
ALTER TABLE job_output ADD COLUMN file_length BIGINT NOT NULL;]), IndividualChangesetInfo(index=35, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-api-request, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_api_request
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        job_id VARCHAR(255),
        user_id VARCHAR(255),
        url VARCHAR(2048),
        ip_address VARCHAR(32),
        token_hash VARCHAR(255),
        request_id VARCHAR(255)
);
ALTER TABLE event_api_request ADD CONSTRAINT "pk_api_request_event" PRIMARY KEY (id);
CREATE INDEX "ix_api_request_user" ON event_api_request (user_id);]), IndividualChangesetInfo(index=36, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-api-response, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_api_response
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        response_code INT,
        response_string TEXT,
        description TEXT,
        request_id VARCHAR (255)
);
ALTER TABLE event_api_response ADD CONSTRAINT "pk_api_response_event" PRIMARY KEY (id);
CREATE INDEX "ix_api_response_user" ON event_api_response (user_id);]), IndividualChangesetInfo(index=37, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-bene-reload, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_bene_reload
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        file_type VARCHAR (255),
        file_name VARCHAR (500),
        number_loaded INT
);
ALTER TABLE event_bene_reload ADD CONSTRAINT "pk_bene_reload_event" PRIMARY KEY (id);]), IndividualChangesetInfo(index=38, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-bene-search, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_bene_search
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        contract_number VARCHAR(255),
        num_in_contract INT,
        num_searched INT,
        num_opted_out INT,
        num_errors INT
);
ALTER TABLE event_bene_search ADD CONSTRAINT "pk_bene_search_event" PRIMARY KEY (id);
CREATE INDEX "ix_bene_search_job_id" ON event_bene_search (job_id);]), IndividualChangesetInfo(index=39, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-error, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_error
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        error_type VARCHAR(255),
        description TEXT
);
ALTER TABLE event_error ADD CONSTRAINT "pk_error_event" PRIMARY KEY (id);]), IndividualChangesetInfo(index=40, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-file, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_file
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        file_name VARCHAR (500),
        status VARCHAR (255),
        file_size BIGINT,
        file_hash VARCHAR (255)
);
ALTER TABLE event_file ADD CONSTRAINT "pk_file_event" PRIMARY KEY (id);
CREATE INDEX "ix_file_event_job_id" ON event_file (job_id);]), IndividualChangesetInfo(index=41, changesetAuthor=lsharshar, changesetId=AB2D-1242-persist-events-job_status_change, changelogFile=db/changelog/v001/log_event_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE event_job_status_change
(
        id SERIAL,
        time_of_event TIMESTAMP WITH TIME ZONE,
        user_id VARCHAR(255),
        job_id VARCHAR(255),
        old_status VARCHAR (255),
        new_status VARCHAR (255),
        description TEXT
);
ALTER TABLE event_job_status_change ADD CONSTRAINT "pk_job_status_change_event" PRIMARY KEY (id);
CREATE INDEX "ix_job_status_job_id" ON event_job_status_change (job_id);]), IndividualChangesetInfo(index=42, changesetAuthor=adaykin, changesetId=add_admin_user, changelogFile=db/changelog/v001/add_admin_user.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[INSERT INTO sponsor (id, hpms_id, org_name, legal_name, parent_id) VALUES ((select nextval('hibernate_sequence')), 999999, 'AB2D Admin', null, null);
INSERT INTO user_account (id, username, first_name, last_name, email, sponsor_id, enabled) VALUES ((select nextval('hibernate_sequence')),
                                                                                                   '0oa32rfir2xLtx7s2297', null, null, null, (select id from sponsor where hpms_id=999999), true);
INSERT INTO user_role (user_account_id, role_id) VALUES ((SELECT id FROM user_account WHERE username='0oa32rfir2xLtx7s2297'),
                                                         (SELECT id FROM role WHERE name='ADMIN'));]), IndividualChangesetInfo(index=43, changesetAuthor=adaykin, changesetId=update_contract_numbers, changelogFile=db/changelog/v001/update_contract_numbers.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[UPDATE contract SET contract_number = 'Z0000', contract_name = 'Z0000' WHERE contract_number = 'S0000';
UPDATE contract SET contract_number = 'Z0001', contract_name = 'Z0001' WHERE contract_number = 'S0001';
UPDATE contract SET contract_number = 'Z0002', contract_name = 'Z0002' WHERE contract_number = 'S0002';
UPDATE contract SET contract_number = 'Z0003', contract_name = 'Z0003' WHERE contract_number = 'S0003';
UPDATE contract SET contract_number = 'Z0004', contract_name = 'Z0004' WHERE contract_number = 'S0004';
UPDATE contract SET contract_number = 'Z0005', contract_name = 'Z0005' WHERE contract_number = 'S0005';
UPDATE contract SET contract_number = 'Z0006', contract_name = 'Z0006' WHERE contract_number = 'S0006';
UPDATE contract SET contract_number = 'Z0007', contract_name = 'Z0007' WHERE contract_number = 'S0007';
UPDATE contract SET contract_number = 'Z0008', contract_name = 'Z0008' WHERE contract_number = 'S0008';
UPDATE contract SET contract_number = 'Z0009', contract_name = 'Z0009' WHERE contract_number = 'S0009';
UPDATE contract SET contract_number = 'Z0010', contract_name = 'Z0010' WHERE contract_number = 'S0010';
UPDATE contract SET contract_number = 'Z0015', contract_name = 'Z0015' WHERE contract_number = 'S0015';
UPDATE contract SET contract_number = 'Z0030', contract_name = 'Z0030' WHERE contract_number = 'S0030';
UPDATE contract SET contract_number = 'Z0100', contract_name = 'Z0100' WHERE contract_number = 'S0100';
UPDATE contract SET contract_number = 'Z0200', contract_name = 'Z0200' WHERE contract_number = 'S0200';
UPDATE contract SET contract_number = 'Z0300', contract_name = 'Z0300' WHERE contract_number = 'S0300';
UPDATE contract SET contract_number = 'Z0400', contract_name = 'Z0400' WHERE contract_number = 'S0400';
UPDATE contract SET contract_number = 'Z0500', contract_name = 'Z0500' WHERE contract_number = 'S0500';
UPDATE contract SET contract_number = 'Z1000', contract_name = 'Z1000' WHERE contract_number = 'S1000';
UPDATE contract SET contract_number = 'Z2000', contract_name = 'Z2000' WHERE contract_number = 'S2000';
UPDATE contract SET contract_number = 'Z3000', contract_name = 'Z3000' WHERE contract_number = 'S3000';
UPDATE contract SET contract_number = 'Z5000', contract_name = 'Z5000' WHERE contract_number = 'S5000';
UPDATE contract SET contract_number = 'Z9000', contract_name = 'Z9000' WHERE contract_number = 'S9000';]), IndividualChangesetInfo(index=44, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/modify_hicn.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[ALTER TABLE opt_out ALTER COLUMN hicn DROP NOT NULL;]), IndividualChangesetInfo(index=45, changesetAuthor=lsharshar, changesetId=ab2d-1377-create-kinesis-logger, changelogFile=db/changelog/v001/ab2d-1377-add-aws-id.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE event_api_request ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_error ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_file ADD COLUMN aws_id VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN aws_id VARCHAR(255);]), IndividualChangesetInfo(index=46, changesetAuthor=lsharshar, changesetId=ab2d-1377-create-kinesis-logger, changelogFile=db/changelog/v001/ab2d-1377-add-env-id.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE event_api_request ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_api_response ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_reload ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_bene_search ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_error ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_file ADD COLUMN environment VARCHAR(255);
ALTER TABLE event_job_status_change ADD COLUMN environment VARCHAR(255);]), IndividualChangesetInfo(index=47, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/create_opt_out_file_table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[CREATE TABLE opt_out_file (
    id BIGINT NOT NULL,
    filename VARCHAR(256) NOT NULL
);

ALTER TABLE opt_out_file ADD CONSTRAINT "pk_opt_out_file" PRIMARY KEY (id);
ALTER TABLE opt_out_file ADD CONSTRAINT "uc_opt_out_file_filename" UNIQUE (filename);]), IndividualChangesetInfo(index=48, changesetAuthor=lhanekam, changesetId=add_properties_data_01, changelogFile=db/changelog/v001/add_properties_data_01.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'worker.engaged', 'engaged');]), IndividualChangesetInfo(index=49, changesetAuthor=adaykin, changesetId=add_attestor_role, changelogFile=db/changelog/v001/add_attestor_role.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[INSERT INTO role (id, name) VALUES ((select nextval('hibernate_sequence')), 'ATTESTOR');]), IndividualChangesetInfo(index=50, changesetAuthor=enolan, changesetId=add_created_modified_date, changelogFile=db/changelog/v001/add_created_modified_date.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE beneficiary
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE beneficiary SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE contract
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE contract SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE coverage
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE coverage SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE opt_out
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE opt_out SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE opt_out_file
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE opt_out_file SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE properties
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE properties SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE role
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE role SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE sponsor
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE sponsor SET created='2000-01-01', modified='2000-01-01';
ALTER TABLE user_account
    ADD COLUMN created timestamp,
    ADD COLUMN modified timestamp;
UPDATE user_account SET created='2000-01-01', modified='2000-01-01';]), IndividualChangesetInfo(index=51, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/add_ip_table.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[CREATE TABLE sponsor_ip (
    sponsor_id BIGINT NOT NULL,
    ip_address INET,
    PRIMARY KEY (sponsor_id, ip_address)
);

ALTER TABLE sponsor_ip ADD CONSTRAINT "fk_sponsor_ip_to_sponsor"  FOREIGN KEY (sponsor_id) REFERENCES sponsor (id);]), IndividualChangesetInfo(index=52, changesetAuthor=wnyffenegger, changesetId=modify_coverage_schema, changelogFile=db/changelog/v001/modify_coverage_schema.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE bene_coverage_period
(
    id SERIAL NOT NULL,
    contract_id BIGINT NOT NULL,
    month INTEGER NOT NULL,
    year INTEGER NOT NULL,
    status VARCHAR(255),
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE
);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "pk_bene_coverage_period" PRIMARY KEY (id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "fk_bene_coverage_period_to_contract" FOREIGN KEY (contract_id) REFERENCES contract(id);
ALTER TABLE bene_coverage_period ADD CONSTRAINT "unique_bene_coverage_period_to_contract" UNIQUE (contract_id, month, year);
DROP INDEX "ix_coverage_contract_id_month";
ALTER TABLE coverage DROP CONSTRAINT "pk_coverage";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_beneficiary";
ALTER TABLE coverage DROP CONSTRAINT "fk_coverage_to_contract";
ALTER TABLE coverage DROP CONSTRAINT "uc_coverage_contract_id_beneficiary_id_month";
DROP TABLE coverage;
DROP TABLE beneficiary;
CREATE TABLE event_bene_coverage_search_status_change
(
    id BIGSERIAL,
    bene_coverage_period_id INTEGER NOT NULL,
    old_status VARCHAR(255),
    new_status VARCHAR(255) NOT NULL,
    created TIMESTAMP WITH TIME ZONE,
    modified TIMESTAMP WITH TIME ZONE,
    description TEXT
);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "pk_event_bene_coverage_search" PRIMARY KEY (id);
ALTER TABLE event_bene_coverage_search_status_change ADD CONSTRAINT "fk_bene_coverage_search_update_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
CREATE INDEX "ix_bene_coverage_search_status_job_id" ON event_bene_coverage_search_status_change(bene_coverage_period_id);
CREATE TABLE coverage
(
    id BIGSERIAL NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    bene_coverage_search_event_id BIGINT NOT NULL,
    beneficiary_id VARCHAR(255) NOT NULL
);
ALTER TABLE coverage ADD CONSTRAINT "pk_coverage" PRIMARY KEY (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_period" FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period (id);
ALTER TABLE coverage ADD CONSTRAINT "fk_coverage_to_bene_coverage_search_event" FOREIGN KEY (bene_coverage_search_event_id) REFERENCES event_bene_coverage_search_status_change(id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id);]), IndividualChangesetInfo(index=53, changesetAuthor=lsharshar, changesetId=remove_opt_out, changelogFile=db/changelog/v001/remove_opt_out.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[drop table opt_out_file;
drop table opt_out;]), IndividualChangesetInfo(index=54, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/add_hpms_info_to_contract.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=null, contexts=null, attributes=[], generatedSql=[ALTER TABLE contract
    ADD COLUMN hpms_parent_org_id BIGINT,
    ADD COLUMN hpms_parent_org_name VARCHAR(255),
    ADD COLUMN hpms_org_marketing_name VARCHAR(255);

INSERT INTO properties (id, key, value) VALUES((select nextval('hibernate_sequence')), 'hpms.ingest.engaged', 'engaged');]), IndividualChangesetInfo(index=55, changesetAuthor=lsharshar, changesetId=add_coverage_search_table, changelogFile=db/changelog/v001/add_coverage_search.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[CREATE TABLE coverage_search (
    id BIGINT NOT NULL,
    bene_coverage_period_id INTEGER NOT NULL,
    attempts INTEGER NOT NULL DEFAULT 0,
    created timestamp
);
ALTER TABLE coverage_search ADD CONSTRAINT "pk_coverage_search" PRIMARY KEY (id);
ALTER TABLE coverage_search ADD CONSTRAINT "fk_coverage_search_bene_coverage_period"
    FOREIGN KEY (bene_coverage_period_id) REFERENCES bene_coverage_period(id);]), IndividualChangesetInfo(index=56, changesetAuthor=wnyffenegger, changesetId=add_last_success_to_coverage_period, changelogFile=db/changelog/v001/add_last_success_to_coverage_period.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[ALTER TABLE bene_coverage_period ADD COLUMN last_successful_job TIMESTAMP WITH TIME ZONE DEFAULT NULL;]), IndividualChangesetInfo(index=57, changesetAuthor=wnyffenegger, changesetId=add_mbi_to_coverage, changelogFile=db/changelog/v001/add_mbi_to_coverage.sql, comment=null, success=true, changesetOutcome=EXECUTED, errorMsg=null, labels=, contexts=null, attributes=[], generatedSql=[DELETE FROM coverage;
ALTER TABLE coverage ADD COLUMN "current_mbi" VARCHAR(32);
ALTER TABLE coverage ADD COLUMN "historic_mbis" VARCHAR(256);
DROP INDEX "ix_coverage_period_beneficiary_id_index";
DROP INDEX "ix_coverage_period_beneficiary_id_index_inverted";
CREATE INDEX "ix_coverage_period_beneficiary_id_index" ON coverage(bene_coverage_period_id, beneficiary_id) INCLUDE (current_mbi, historic_mbis);
CREATE INDEX "ix_coverage_period_beneficiary_id_index_inverted" ON coverage(beneficiary_id, bene_coverage_period_id) INCLUDE (current_mbi, historic_mbis);]), IndividualChangesetInfo(index=58, changesetAuthor=includeAll, changesetId=raw, changelogFile=db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql, comment=null, success=false, changesetOutcome=FAILED, errorMsg=ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id], labels=null, contexts=null, attributes=[], generatedSql=[-- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id;])], pendingChangesetInfoList=[]), date=Wed Jun 25 13:39:59 MST 2025)'
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.command.internalRollbackOnError.url found
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.command.internalRollbackOnError.username found
[2025-06-25 13:39:59] FINE [liquibase.command] Pipeline for command 'internalRollbackOnError: liquibase.command.core.helpers.DbUrlConnectionArgumentsCommandStep then liquibase.command.core.helpers.DbUrlConnectionCommandStep then com.datical.liquibase.ext.command.UserMetadataMdcCommandStep then com.datical.liquibase.ext.command.InternalRollbackOnErrorCommandStep
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.command.internalRollbackOnError.runOnce is using the default value of true
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.command.runOnce is using the default value of true
[2025-06-25 13:39:59] FINE [liquibase.command] Writing output with encoding 'UTF-8'
[2025-06-25 13:39:59] FINE [liquibase.command] Executing internal command dbUrlConnectionArguments
[2025-06-25 13:39:59] FINE [liquibase.command] Executing internal command dbUrlConnectionCommandStep
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.command.internalRollbackOnError.skipDatabaseStep is using the default value of false
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.command.skipDatabaseStep is using the default value of false
[2025-06-25 13:39:59] FINE [liquibase.command] Executing internal command userMetadataMdc
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.command.internalRollbackOnError.runOnce is using the default value of true
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.command.runOnce is using the default value of true
[2025-06-25 13:39:59] FINE [liquibase.command] Executing internal command internalRollbackOnError
[2025-06-25 13:39:59] INFO [liquibase.command] Logging exception.
ERROR: Exception Details
[2025-06-25 13:39:59] INFO [liquibase.ui] ERROR: Exception Details
ERROR: Exception Primary Class:  PSQLException
[2025-06-25 13:39:59] INFO [liquibase.ui] ERROR: Exception Primary Class:  PSQLException
ERROR: Exception Primary Reason:  ERROR: relation "public.sponsor" does not exist
  Position: 130
[2025-06-25 13:39:59] INFO [liquibase.ui] ERROR: Exception Primary Reason:  ERROR: relation "public.sponsor" does not exist
  Position: 130
ERROR: Exception Primary Source:  PostgreSQL 16.9 (Postgres.app)
[2025-06-25 13:39:59] INFO [liquibase.ui] ERROR: Exception Primary Source:  PostgreSQL 16.9 (Postgres.app)
[2025-06-25 13:39:59] INFO [liquibase.command] Command execution complete
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.analytics.AnalyticsListener instance liquibase.analytics.LiquibaseAnalyticsListener
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.analytics.AnalyticsListener instance liquibase.analytics.NoOpAnalyticsListener
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.analytics.devOverride found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.analytics.devOverride is using the default value of false
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.analytics.configEndpointUrl found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.analytics.configEndpointUrl is using the default value of https://config.liquibase.com/analytics.yaml
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.analytics.enabled found
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.analytics.configCacheTimeoutMillis found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.analytics.configCacheTimeoutMillis is using the default value of 3600000
[2025-06-25 13:39:59] FINE [liquibase.servicelocator] Loaded liquibase.analytics.configuration.AnalyticsConfiguration instance liquibase.analytics.configuration.LiquibaseRemoteAnalyticsConfiguration
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.analytics.logLevel found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.analytics.logLevel is using the default value of OFF
[2025-06-25 13:39:59] FINE [liquibase.configuration] No configuration value for liquibase.analytics.configEndpointTimeoutMillis found
[2025-06-25 13:39:59] FINE [liquibase.configuration] Configuration liquibase.analytics.configEndpointTimeoutMillis is using the default value of 1500
[2025-06-25 13:40:00] FINE [liquibase] Ignoring report generation: invalid license
[2025-06-25 13:40:00] INFO [liquibase.command] Logging exception.
ERROR: Exception Details
[2025-06-25 13:40:00] INFO [liquibase.ui] ERROR: Exception Details
ERROR: Exception Primary Class:  PSQLException
[2025-06-25 13:40:00] INFO [liquibase.ui] ERROR: Exception Primary Class:  PSQLException
ERROR: Exception Primary Reason:  ERROR: relation "public.sponsor" does not exist
  Position: 130
[2025-06-25 13:40:00] INFO [liquibase.ui] ERROR: Exception Primary Reason:  ERROR: relation "public.sponsor" does not exist
  Position: 130
ERROR: Exception Primary Source:  PostgreSQL 16.9 (Postgres.app)
[2025-06-25 13:40:00] INFO [liquibase.ui] ERROR: Exception Primary Source:  PostgreSQL 16.9 (Postgres.app)
[2025-06-25 13:40:00] INFO [liquibase.command] Command execution complete
[2025-06-25 13:40:00] SEVERE [liquibase.integration] Migration failed for changeset db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll:
     Reason: liquibase.exception.DatabaseException: ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id]
liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll:
     Reason: liquibase.exception.DatabaseException: ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id]
	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:310)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:201)
	at liquibase.command.CommandScope.execute(CommandScope.java:251)
	at com.datical.liquibase.ext.command.InternalRollbackOnErrorCommandStep.executeCommand(InternalRollbackOnErrorCommandStep.java:318)
	at com.datical.liquibase.ext.command.ProUpdateCommandStep.run(ProUpdateCommandStep.java:60)
	at liquibase.command.CommandScope.lambda$execute$6(CommandScope.java:263)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:201)
	at liquibase.command.CommandScope.execute(CommandScope.java:251)
	at liquibase.integration.commandline.CommandRunner.call(CommandRunner.java:51)
	at liquibase.integration.commandline.CommandRunner.call(CommandRunner.java:21)
	at picocli.CommandLine.executeUserObject(CommandLine.java:2031)
	at picocli.CommandLine.access$1500(CommandLine.java:148)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2469)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2461)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2423)
	at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
	at picocli.CommandLine$RunLast.execute(CommandLine.java:2425)
	at picocli.CommandLine.execute(CommandLine.java:2174)
	at liquibase.integration.commandline.LiquibaseCommandLine.lambda$execute$2(LiquibaseCommandLine.java:420)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:201)
	at liquibase.integration.commandline.LiquibaseCommandLine.lambda$execute$3(LiquibaseCommandLine.java:395)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:201)
	at liquibase.integration.commandline.LiquibaseCommandLine.execute(LiquibaseCommandLine.java:392)
	at liquibase.integration.commandline.LiquibaseCommandLine.main(LiquibaseCommandLine.java:117)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at liquibase.integration.commandline.LiquibaseLauncher.main(LiquibaseLauncher.java:120)
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll:
     Reason: liquibase.exception.DatabaseException: ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id]
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:155)
	at liquibase.command.core.AbstractUpdateCommandStep.lambda$run$0(AbstractUpdateCommandStep.java:114)
	at liquibase.Scope.lambda$child$0(Scope.java:216)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:215)
	at liquibase.Scope.child(Scope.java:194)
	at liquibase.command.core.AbstractUpdateCommandStep.run(AbstractUpdateCommandStep.java:112)
	at liquibase.command.core.UpdateCommandStep.run(UpdateCommandStep.java:100)
	at com.datical.liquibase.ext.command.ProUpdateCommandStep.run(ProUpdateCommandStep.java:44)
	... 25 more
Caused by: liquibase.exception.MigrationFailedException: Migration failed for changeset db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll:
     Reason: liquibase.exception.DatabaseException: ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id]
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:845)
	at liquibase.changelog.visitor.UpdateVisitor.executeAcceptedChange(UpdateVisitor.java:127)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:71)
	at liquibase.changelog.ChangeLogIterator.lambda$run$0(ChangeLogIterator.java:133)
	at liquibase.Scope.lambda$child$0(Scope.java:216)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:215)
	at liquibase.Scope.child(Scope.java:194)
	at liquibase.changelog.ChangeLogIterator.lambda$run$1(ChangeLogIterator.java:122)
	at liquibase.Scope.lambda$child$0(Scope.java:216)
	at liquibase.Scope.child(Scope.java:225)
	at liquibase.Scope.child(Scope.java:215)
	at liquibase.Scope.child(Scope.java:194)
	at liquibase.Scope.child(Scope.java:282)
	at liquibase.Scope.child(Scope.java:286)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:91)
	... 33 more
Caused by: liquibase.exception.DatabaseException: ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id]
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:519)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:85)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:187)
	at liquibase.executor.AbstractExecutor.execute(AbstractExecutor.java:148)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1198)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:793)
	... 48 more
Caused by: org.postgresql.util.PSQLException: ERROR: relation "public.sponsor" does not exist
  Position: 130
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:356)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:317)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:312)
	at liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback.doInStatement(JdbcExecutor.java:511)
	... 53 more


Unexpected error running Liquibase: Migration failed for changeset db/changelog/v001/ab2d-2701-map-credentials-directly-to-contracts.sql::raw::includeAll:
     Reason: liquibase.exception.DatabaseException: ERROR: relation "public.sponsor" does not exist
  Position: 130 [Failed SQL: (0) -- Set notifications to 'warning' or greater

SET client_min_messages TO WARNING;

-- Drop uc_user_account_email constraint on user_account table

ALTER TABLE user_account DROP CONSTRAINT IF EXISTS uc_user_account_email;

-- Add contract_id to user_account table

ALTER TABLE user_account ADD COLUMN IF NOT EXISTS contract_id bigint;

-- Update existing user_account records with their correct sponsor id

UPDATE public.user_account h
SET sponsor_id = a.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id OR a.parent_id = e.sponsor_id
WHERE h.id = e.id;

-- Update existing user_account records with their correct contract id

UPDATE public.user_account h
SET contract_id = d.id
FROM public.sponsor a
INNER JOIN public.contract d
ON a.id = d.sponsor_id
INNER JOIN public.user_account e
ON a.id = e.sponsor_id
WHERE h.id = e.id]

