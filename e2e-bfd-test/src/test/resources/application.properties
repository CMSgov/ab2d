efs.mount=${java.io.tmpdir}/jobdownloads/

execution.env=${AB2D_EXECUTION_ENV:#{'local'}}
eob.job.queueing.frequency=1
## ----------------------------------------------------------------------------  DATA-SOURCE CONFIG
spring.datasource.url=${DB_URL}?reWriteBatchedInserts=true
spring.datasource.hikari.data-source-properties.reWriteBatchedInserts=true
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

## --------------------- @SCHEDULED annotation thread pool size
spring.task.scheduling.pool.size=8

## ----------------------------------------------------------------------------  JPA CONFIG
spring.jpa.hibernate.ddl-auto=none
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

## ----------------------------------------------------------------------------  SPRING INTEGRATION CONFIG
spring.integration.jdbc.initialize-schema=always

spring.liquibase.enabled=true
spring.liquibase.contexts=test
spring.liquibase.liquibase-schema=public
spring.liquibase.default-schema=ab2d

spring.main.allow-bean-definition-overriding=true

spring.cloud.compatibility-verifier.enabled=false


# Set max number of patients to be put into patient search queue
eob.job.patient.queue.max.size=10000

file.try.lock.timeout=30
report.progress.db.frequency=10
report.progress.log.frequency=10

## fail the job if >= 10% of the records fail
failure.threshold=10

## ---------------------------------------------------------------------------- CONTRACT-2-BENE CONFIG
contract2bene.caching.threshold=10

## ----------------------------------------------------------------------------- JOB PROCESSOR THREAD-POOL CONFIG
## These properties apply to "mainJobProcessingPool".
job.core.pool.size=5
job.max.pool.size=10
job.queue.capacity=0

## These properties apply to "patientCoverageThreadPool"
# Never run automatically in testing
coverage.update.schedule=0 0 0 1 * ? 2099
coverage.core.pool.size=12
coverage.update.max.attempts=3
coverage.update.initial.delay=1
# Never runs because the date is February 31st
coverage.update.monitoring.interval=0 0 5 31 2 ?
coverage.update.load.schedule=0 0 5 31 2 ?
coverage.verify.schedule=0 0 * * * ?

## ----------------------------------------------------------------------------- STUCK JOB
## -- run every 2 hours but not in testing
stuck.job.cron.schedule=0 0 0 1 * ? 2099
stuck.job.cancel.threshold=6

## ----------------------------------------------------------------------------- LOGGING LEVEL
logging.level.root=WARN
logging.level.gov.cms.ab2d=INFO
logging.level.org.springframework=WARN
logging.level.com.zaxxer.hikari=WARN
logging.level.org.hibernate=WARN
logging.level.org.quartz=DEBUG
logging.level.liquibase=WARN

health.requiredSpareMemoryInMB=32
health.urlsToCheck=http://www.google.com,http://www.facebook.com

## ------------------------------------------------------------------------------ BFD Health Check
bfd.health.check.schedule=0 0 0 1 * ? 2099
bfd.health.check.consecutive.successes=3
bfd.health.check.consecutive.failures=3
bfd.health.check.enabled=false

## ----------------------------------------------------------------------------- Filter out coverage by year
patient.contract.year=2020
bfd.earliest.data.date=01/01/2020
bfd.earliest.data.date.special.contracts=01/01/1990

## -----------------------------------------------------------------------------
# Handle instanceId to avoid hostname issues in Jenkins agents
spring.quartz.properties.org.quartz.scheduler.instanceId=ab2d-worker-unit-testing-quartz

bfd.keystore.password=${AB2D_BFD_KEYSTORE_PASSWORD}
bfd.keystore.location=${AB2D_BFD_KEYSTORE_LOCATION}

audit.files.ttl.hours=72

eob.job.patient.queue.page.size=1000
# Number of EOBs to search per file
eob.job.patient.number.per.thread=10

aggregator.multiplier=3
aggregator.directory.finished=finished
aggregator.directory.streaming=streaming
aggregator.file.buffer.size=0

eob.job.patient.number.per.thread=10

cloud.aws.end-point.uri:${AWS_SQS_URL:#{'http://localhost:4566'}}
cloud.aws.stack.auto=false
cloud.aws.region.static=us-east-1

feature.sqs.enabled=false

pcp.core.pool.size=20
pcp.max.pool.size=30
pcp.scaleToMax.time=10

contract.base.url=${MICROSERVICES_URL:#{'localhost:8070'}}

spring.profiles.active=test

