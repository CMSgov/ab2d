
name: start-job-test

on:
  push:
    branches: [ start-job-workflow ]
  workflow_dispatch: # Allow manual trigger
    inputs:
      contractNumber:
        description: 'Contract to start a job for'
        type: string
        required: true
        default: 'Z0001'
      fhirVersion:
        description: 'FHIR version'
        type: choice
        options:
          - STU3
          - R4
        default: STU3
      since:
        description: 'Since date to use for a job. The earliest accepted date is 2020-02-13T00:00:00.000-05:00'
        type: string
        required: true
      until:
        description: 'Until date to use for a job. Accepted date format for V2 is 2020-02-13T00:00:00.000-05:00'
        type: string
        required: false
      apiUrlPrefix:
        description: 'Origin of request for a job. May correspond to actual AB2D API URL or not.'
        type: string
        required: true
        default: 'https://impl.ab2d.cms.gov'

jobs:
  start-job:
    runs-on: self-hosted

    env:
      #      CONTRACT_NUMBER: ${{ inputs.contractNumber }}
      #      FHIR_VERSION: ${{ inputs.fhirVersion }}
      #      SINCE: ${{ inputs.since }}
      #      UNTIL: ${{ inputs.until }}
      #      API_URL_PREFIX: ${{ inputs.apiUrlPrefix }}
      CONTRACT_NUMBER: 'Z0001'
      FHIR_VERSION: 'STU3'
      SINCE: '2020-02-13T00:00:00.000-05:00'
      UNTIL: '2024-12-31T00:00:00.000-05:00'
      API_URL_PREFIX: 'https://impl.ab2d.cms.gov'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create Python3 venv
        #        run: ./scripts/setup-venv.sh
        run: |
          # Any error will cause the script to exit immediately
          set -e
          # Create python3 virtual environment for deployments
          # and verify that
          python3 --version
          # Create virtualenv
          python3 -m venv ./venv
          . ./venv/bin/activate
          # Check that version is active and log for
          python --version

      - name: Assume role in AB2D account for this environment
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.TEST_ACCOUNT_ID }}:role/delegatedadmin/developer/ab2d-test-github-actions

      - name: Set env vars from AWS params in AB2D account
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            PGHOST=/aws/reference/secretsmanager/ab2d/ab2d-east-impl/module/db/database_host/2020-01-02-09-15-01
            PGPORT=/aws/reference/secretsmanager/ab2d/ab2d-east-impl/module/db/database_port/2020-01-02-09-15-01
            PGUSER=/aws/reference/secretsmanager/ab2d/ab2d-east-impl/module/db/database_user/2020-01-02-09-15-01
            PGDATABASE=/aws/reference/secretsmanager/ab2d/ab2d-east-impl/module/db/database_name/2020-01-02-09-15-01
            PGPASSWORD=/aws/reference/secretsmanager/ab2d/ab2d-east-impl/module/db/database_password/2020-01-02-09-15-01
            DATABASE_SCHEMA_NAME=/aws/reference/secretsmanager/ab2d/ab2d-east-impl/module/db/schema_name/2020-01-02-09-15-01

      - name: Test env variables
        run: |
          echo "contract number=CONTRACT_NUMBER"
          echo "fhir version=$FHIR_VERSION"
          echo "API URL prefix=$API_URL_PREFIX"
          echo "since=$SINCE"
          echo "until=$UNTIL"
          echo "DB host=$DATABASE_HOST"
          echo "DB port=$DATABASE_PORT"
          echo "DB user=$DATABASE_USER"
          echo "DB schema name=$DATABASE_SCHEMA_NAME"

      - name: Install psql
        run: |
          sudo dnf install postgresql15 -y

      - name: Insert record
        run: |
          set -e
          
          SQL_GET_ORGANIZATION=$(envsubst < ./scripts/get-organization.sh)
          
          ORGANIZATION=$(
          psql \
          -t \
          --command="${SQL_GET_ORGANIZATION}" \
          | head -n 1 \
          | xargs \
          | tr -d '\r')

          echo "organization = ${ORGANIZATION}

          if [[ ${FHIR_VERSION} = "R4" ]]; then
            echo "R4"
          else
            echo "STU3"
          fi