name: Verify deployment

on:
  workflow_call:
    inputs:
      environment:
        required: false
        type: string
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options:
          - dev
          - test
          - sbx
          - prod

env:
  # NOTE: Required checks set in repository branch protection rules/rulesets cannot be skipped
  # with the native path filtering. This regex and the 'workflow' job below is a hack to only
  # run the lengthier/costlier workflows when there are relevant files changed.
  # See https://github.com/orgs/community/discussions/44490 for a discussion.
  workflow_files_re: '^(api|common|coverage|e2e-bfd-test|e2e-test|job|src|worker)/.+$|^(pom.xml|settings.xml)$|^.github/workflows/(build|deploy|e2e-test|unit-integration-test|verify-deploy).yml$'
jobs:
  workflow:
    name: Checking workflow
    runs-on: ubuntu-24.04
    outputs:
      files: ${{ steps.workflow_files.outputs.files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - id: workflow_files
        name: Set output
        run: |-
          git diff --name-only --diff-filter=ACMRTD HEAD^ HEAD |\
            grep -P "${workflow_files_re}" \
          && echo "files=true" >> $GITHUB_OUTPUT || echo "files=" >> $GITHUB_OUTPUT
  test:
    needs: workflow
    if: needs.workflow.outputs.files
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Assume role in AB2D account for this environment
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        env:
          ACCOUNT: ${{ inputs.environment == '' && 'test' || inputs.environment }}
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets[format('{0}_ACCOUNT_ID', env.ACCOUNT)] }}:role/delegatedadmin/developer/ab2d-${{ env.ACCOUNT }}-github-actions
          
      - name: Set environment-specific variables
        run: |
          ENVIRONMENT="${{ inputs.environment || 'test' }}"
          if [ "$ENVIRONMENT" == "test" ]; then
            echo "SECRET_ID=ab2d/ab2d-east-impl/jenkins-verify-api" >> $GITHUB_ENV
            echo "BASE_URL=https://impl.ab2d.cms.gov" >> $GITHUB_ENV
            echo "EXPORT_URL=https://impl.ab2d.cms.gov/api/v2/fhir/Patient/?_type=ExplanationOfBenefit&_since=2020-02-13T00:00:00.000-05:00&_outputFormat=application%2Ffhir%2Bndjson" >> $GITHUB_ENV
          elif [ "$ENVIRONMENT" == "dev" ]; then
            echo "SECRET_ID=ab2d/ab2d-dev/jenkins-verify-basic-auth" >> $GITHUB_ENV
            echo "BASE_URL=https://dev.ab2d.cms.gov" >> $GITHUB_ENV
            echo "EXPORT_URL=https://dev.ab2d.cms.gov/api/v2/fhir/Patient/?_type=ExplanationOfBenefit&_since=2020-02-13T00:00:00.000-05:00&_outputFormat=application%2Ffhir%2Bndjson" >> $GITHUB_ENV
          elif [ "$ENVIRONMENT" == "sbx" ]; then
            echo "SECRET_ID=ab2d/ab2d-sbx-sandbox/jenkins-verify-basic-auth" >> $GITHUB_ENV
            echo "BASE_URL=https://sbx.ab2d.cms.gov" >> $GITHUB_ENV
            echo "EXPORT_URL=https://sbx.ab2d.cms.gov/api/v2/fhir/Patient/?_type=ExplanationOfBenefit&_since=2020-02-13T00:00:00.000-05:00&_outputFormat=application%2Ffhir%2Bndjson" >> $GITHUB_ENV
          elif [ "$ENVIRONMENT" == "prod" ]; then
            echo "SECRET_ID=ab2d/ab2d-east-prod/jenkins-verify-basic-auth" >> $GITHUB_ENV
            echo "BASE_URL=https://api.ab2d.cms.gov" >> $GITHUB_ENV
            echo "EXPORT_URL=https://api.ab2d.cms.gov/api/v2/fhir/Patient/?_type=ExplanationOfBenefit&_since=2020-02-13T00:00:00.000-05:00&_outputFormat=application%2Ffhir%2Bndjson" >> $GITHUB_ENV
          else
            echo "Invalid environment: $ENVIRONMENT"
            exit 1
          fi

      - name: Set script file based on environment
        run: echo "script=./scripts/verify-deployment.sh" >> $GITHUB_ENV

      - name: Run deployment verification script
        run: |
          chmod +x ./scripts/verify-deployment.sh
          ./scripts/verify-deployment.sh "$SECRET_ID" "$BASE_URL" "$EXPORT_URL"
        env:
          SECRET_ID: ${{ env.SECRET_ID }}
          BASE_URL: ${{ env.BASE_URL }}
          EXPORT_URL: ${{ env.EXPORT_URL }}
