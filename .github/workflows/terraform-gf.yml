name: terraform-gf
run-name: tf ${{ inputs.apply && 'apply' || 'plan' }} ${{ inputs.service }} ${{ inputs.environment }}

on:
  workflow_call:
    inputs:
      apply:
        required: false
        type: boolean
      environment:
        required: true
        type: string  # Choice not allowed in workflow_call, so using string
      ops_branch:
        required: false
        type: string
        default: 'main'
      service:
        required: true
        type: string  # Same as above

  workflow_dispatch:  # Manual trigger with dropdowns
    inputs:
      apply:
        required: false
        type: boolean
        default: false
      environment:
        required: true
        type: choice
        options:
          - dev
          - test
          - sandbox
          - prod
      ops_branch:
        required: false
        type: string
        default: 'main'
      service:
        required: true
        type: choice
        options:
          - api
          - api_gateway
          - bfd_insights
          - controller
          - core
          - eventbridge
          - lambda
          - microservices
          - web
          - worker

jobs:
  terraform:
    permissions:
      contents: read
      id-token: write
    runs-on: codebuild-ab2d-${{github.run_id}}-${{github.run_attempt}}

    steps:
      - name: Get AWS params
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            OPS_GITHUB_TOKEN=/ci/github/token

      - name: Checkout AB2D-Ops Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: 'cmsgov/ab2d-ops'
          token: ${{ env.OPS_GITHUB_TOKEN }}
          ref: ${{ inputs.ops_branch }}

      - name: Assume role in AB2D account for this environment
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{contains(fromJSON('["dev", "test"]'), inputs.environment) && secrets.NON_PROD_ACCOUNT || secrets.PROD_ACCOUNT}}:role/delegatedadmin/developer/ab2d-${{ inputs.environment }}-github-actions

      - name: Terraform Init & Plan
        working-directory: terraform/services/${{ inputs.service }}/
        run: |
          terraform init -reconfigure -backend-config=../../backends/${{ inputs.environment }}.s3.tfbackend
          terraform plan -var env=${{ inputs.environment }} -out=tfplan | tee plan_output.txt

      - name: Terraform Apply
        if: ${{ inputs.apply == true }}
        working-directory: terraform/services/${{ inputs.service }}/
        run: |
          terraform apply -input=false tfplan

      - name: Cleanup Terraform Plan
        if: always()
        working-directory: terraform/services/${{ inputs.service }}/
        run: |
          rm -f tfplan plan_output.txt
