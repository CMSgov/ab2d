name: promote

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      module:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options:
          - sbx
          - prod
          - prod-test  
      module:
        required: true
        type: choice
        options:
          - api
          - worker          
permissions:
  contents: read
  id-token: write
  
jobs:
  promote:
    runs-on: ubuntu-latest
    env:
        ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
        AWS_REGION: ${{ vars.AWS_REGION }}
        DEPLOYMENT_ENV: ${{ vars[format('{0}_DEPLOYMENT_ENV', inputs.environment)] }}

    steps:
      - name: Assume role in AB2D Management account
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.MGMT_ACCOUNT_ID }}:role/delegatedadmin/developer/ab2d-mgmt-github-actions    
          
      - name: Retag images in ECR
        run: |
          ECR_REPO_DOMAIN="${{ secrets.MGMT_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com"
          ECR_REPO_URI="$ECR_REPO_DOMAIN/ab2d_${{ inputs.module }}"

          # Define target tags based on the environment
          if [ "${{ inputs.environment }}" == "sbx" ]; then
            TARGET_TAG="sandbox-latest"
          elif [ "${{ inputs.environment }}" == "prod" ]; then
            TARGET_TAG="prod-latest"
          elif [ "${{ inputs.environment }}" == "prod-test" ]; then
            TARGET_TAG="prod-test-latest"
          else
            echo "Unsupported environment: ${{ inputs.environment }}"
            exit 1
          fi

          # Get the manifest of the latest test image
          MANIFEST=$(aws ecr batch-get-image --repository-name "ab2d_${{ inputs.module }}" --image-ids imageTag=ab2d-east-impl-latest --output text --query 'images[].imageManifest' --debug)

          # Retag the image
          aws ecr put-image --repository-name "ab2d_${{ inputs.module }}" --image-tag "$TARGET_TAG" --image-manifest "$MANIFEST"

      - name: Verify new tags
        run: |
          aws ecr describe-images --repository-name "ab2d_${{ inputs.module }}"
