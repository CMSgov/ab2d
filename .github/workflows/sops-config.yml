name: sops-config
run-name: sops-config ${{ inputs.apply && 'apply' || 'plan' }}  ${{ inputs.environment }}

on:
  push:
    branches:
      - tofu-workflow
  workflow_call:
    inputs:
      apply:
        required: false
        type: boolean
      environment:
        required: true
        type: string

  workflow_dispatch:  # Manual trigger with dropdowns
    inputs:
      apply:
        description: "Apply tofu?"
        required: false
        type: boolean
        default: false
      environment:
        description: "AB2D environment"
        required: true
        type: choice
        options:
          - dev
          - test
          - sandbox
          - prod

env:
  TENV_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  terraform:
    permissions:
      contents: read
      id-token: write
    runs-on: codebuild-ab2d-${{github.run_id}}-${{github.run_attempt}}
    env:
      AWS_ACCOUNT: ${{ secrets.aws_account || (contains(fromJSON('["dev", "test"]'), inputs.environment) && secrets.NON_PROD_ACCOUNT || secrets.PROD_ACCOUNT) }}
      AB2D_ENV: ${{ inputs.environment }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Assume role in AB2D account for this environment
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/delegatedadmin/developer/ab2d-${{ env.AB2D_ENV }}-github-actions

      - name: Install Cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159  # v3.9.2
    
      - name: Install tofu
        uses: cmsgov/cdap/actions/setup-tenv@8343fb96563ce4b74c4dececee9b268f42bd4a40

      - name: Tofu init & plan
        working-directory: ops/services/10-config
        run: |
          tofu init -var=parent_env=$AB2D_ENV -reconfigure
          tofu workspace select -var=parent_env=$AB2D_ENV  -or-create=true $AB2D_ENV 
          tofu plan -exclude 'module.sops.local_file.sopsw[0]' -out=tfplan

      - name: Tofu apply
        if: ${{ inputs.apply == true }}
        working-directory: ops/services/10-config
        run: |
          tofu apply -exclude 'module.sops.local_file.sopsw[0]' -input=false tfplan 
