name: end-to-end-gf tests
run-name: end-to-end-gf tests ${{ inputs.environment }}

on:
  push:
    branches: [ "ephemeral-e2e" ]

  workflow_call:
    inputs:
      environment:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      environment:
        description: AB2D environment
        type: string
        required: true
        default: 'test'
      api_base_url:
        description: Overrides the 'base-url' property for testing in ephemeral environments
        required: false
        type: string

concurrency:
  group: ${{ inputs.environment }}-e2e-test

jobs:
  test:
    permissions:
      contents: read
      id-token: write
    runs-on: codebuild-ab2d-${{github.run_id}}-${{github.run_attempt}}
    env:
      AB2D_V2_ENABLED: 'true'
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      AWS_ACCOUNT: ${{ secrets.NON_PROD_ACCOUNT }}
#      AWS_ACCOUNT: ${{ (inputs.environment == 'sandbox' || inputs.environment == '6675-sandbox') && secrets.PROD_ACCOUNT || secrets.NON_PROD_ACCOUNT }}
      #      AB2D_ENV: ${{ inputs.environment }}
      AB2D_ENV: '6755-dev'

    steps:
      - name: Set environment-specific variables
        run: |
#          if [ "$AB2D_ENV" == "6755-dev" ]; then
#            ROLE_TO_ASSUME="dev";
#          elif [ "$AB2D_ENV" == "6755-test" ]; then
#            ROLE_TO_ASSUME="test";
#          elif [ "$AB2D_ENV" == "6755-sandbox" ]; then
#            ROLE_TO_ASSUME="sandbox";
#          elif [ "$AB2D_ENV" == "6755-prod" ]; then
#            ROLE_TO_ASSUME="prod";
#          else
#            ROLE_TO_ASSUME=$AB2D_ENV
#          fi
          ROLE_TO_ASSUME=${AB2D_ENV#6755-}
          echo "ROLE_TO_ASSUME=${ROLE_TO_ASSUME}" >> $GITHUB_ENV

      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/delegatedadmin/developer/ab2d-${{ env.ROLE_TO_ASSUME }}-github-actions

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set env vars from AWS params
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            ARTIFACTORY_URL=/artifactory/url
            ARTIFACTORY_USER=/artifactory/user
            ARTIFACTORY_PASSWORD=/artifactory/password
            AB2D_BFD_KEYSTORE_PASSWORD=/ab2d/${{ env.AB2D_ENV }}/worker/sensitive/bfd_keystore_password
            OKTA_CLIENT_ID=/ab2d/mgmt/okta/sensitive/test-pdp-100-id
            OKTA_CLIENT_PASSWORD=/ab2d/mgmt/okta/sensitive/test-pdp-100-secret
            SECONDARY_USER_OKTA_CLIENT_ID=/ab2d/mgmt/okta/sensitive/test-pdp-1000-id
            SECONDARY_USER_OKTA_CLIENT_PASSWORD=/ab2d/mgmt/okta/sensitive/test-pdp-1000-secret

      - name: Run e2e-test
        env:
          E2E_ENVIRONMENT: 'DEV'
#         E2E_ENVIRONMENT: ${{ inputs.environment == 'dev' && 'DEV' || inputs.environment == '6755-dev' && 'DEV' || inputs.environment == 'test' && 'IMPL' || inputs.environment == '6755-test' && 'IMPL' || inputs.environment == 'sandbox' && 'SBX' || inputs.environment == '6755-sandbox' && 'SBX' }}
#          API_BASE_URL: ${{ inputs.api_base_url }}
          API_BASE_URL: 'https://ab2d-6755-dev-api-372095153.us-east-1.elb.amazonaws.com'
        run: |
          mvn test -s settings.xml -pl e2e-test -am -Dtest=TestRunner -DfailIfNoTests=false -Dsurefire.failIfNoSpecifiedTests=false -Dusername=$ARTIFACTORY_USER -Dpassword=$ARTIFACTORY_PASSWORD -Drepository_url=$ARTIFACTORY_URL --no-transfer-progress
