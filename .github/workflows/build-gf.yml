name: build-gf
run-name: build-gf non-prod ${{ inputs.module }}

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      module:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      module:
        description: AB2D module
        required: true
        type: choice
        options:
          - api
          - worker

jobs:
  build:
    permissions:
      contents: read
      id-token: write
    runs-on: codebuild-ab2d-${{github.run_id}}-${{github.run_attempt}}
    env:
      AWS_ACCOUNT: ${{ secrets.NON_PROD_ACCOUNT }}
      MODULE: ${{ inputs.module }}
      ECR_REPO: ab2d-${{ inputs.module }}
      TAG_PREFIX: ab2d-${{ inputs.module }}
    steps:
      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/delegatedadmin/developer/ab2d-test-github-actions

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set env vars from AWS params in BCDA management account
        uses: cmsgov/cdap/actions/aws-params-env-action@main
        with:
          params: |
            ARTIFACTORY_URL=/artifactory/url
            ARTIFACTORY_USER=/artifactory/user
            ARTIFACTORY_PASSWORD=/artifactory/password

      - name: Build package
        run: mvn -U clean package -s settings.xml -Dcheckstyle.skip -DskipTests -Dusername="${ARTIFACTORY_USER}" -Dpassword="${ARTIFACTORY_PASSWORD}" -Drepository_url="${ARTIFACTORY_URL}"

      - name: Build image and push to ECR
        working-directory: ./${{ env.MODULE }}
        run: |
          ECR_DOMAIN="$AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com"
          SHA_SHORT=$(git rev-parse --short HEAD)
          aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_DOMAIN
          ECR_URI="$ECR_DOMAIN/$ECR_REPO"
          TAG_SHORT="$TAG_PREFIX-$GITHUB_REF_NAME-$SHA_SHORT"
          docker build -t "$ECR_URI:$TAG_SHORT" .
          docker push "$ECR_URI" --all-tags
          echo "Published **$ECR_URI:$TAG_SHORT**" >> $GITHUB_STEP_SUMMARY
