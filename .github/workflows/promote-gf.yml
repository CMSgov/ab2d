name: promote-gf
run-name: promote-gf ${{ inputs.module }} ${{ inputs.environment }} ${{ inputs.image_tag }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: AB2D environment
        required: true
        type: choice
        options:
          - sandbox
          - prod
      module:
        description: AB2D module
        required: true
        type: choice
        options:
          - api
          - worker
      image_tag:
        description: Image tag to promote (e.g., ab2d-api-xxxxxxxx)
        required: true
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  promote:
    runs-on: codebuild-ab2d-${{github.run_id}}-${{github.run_attempt}}
    env:
      AWS_ACCOUNT: ${{ secrets.PROD_ACCOUNT }}
      AB2D_ENV: ${{ inputs.environment }}
      MODULE: ${{ inputs.module }}
      IMAGE_TAG: ${{ inputs.image_tag }}
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/delegatedadmin/developer/ab2d-${{ env.AB2D_ENV }}-github-actions

      - name: Retag ECR Image
        env:
          ECR_REPO_DOMAIN: ${{ env.AWS_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
          ECR_REPO: ab2d-${{ env.MODULE }}
          CONTENT_TYPE: application/vnd.docker.distribution.manifest.v2+json
        run: |
          TOKEN=$(aws ecr get-authorization-token --output text --query 'authorizationData[].authorizationToken')
          AUTH_HEADER="Authorization: Basic $TOKEN"
          
          echo "Fetching manifest for image: $IMAGE_TAG"
          MANIFEST=$(curl -sSL -H "$AUTH_HEADER" -H "Accept: $CONTENT_TYPE" \
            https://$ECR_REPO_DOMAIN/v2/$ECR_REPO/manifests/$IMAGE_TAG)

          if [ -z "$MANIFEST" ]; then
            echo "Error: Unable to fetch manifest for image tag $IMAGE_TAG"
            exit 1
          fi

          LATEST_TAG="ab2d-${AB2D_ENV}-latest"
          echo "Promoting $IMAGE_TAG to $LATEST_TAG"

          curl -sSL -X PUT -H "$AUTH_HEADER" -H "Content-Type: $CONTENT_TYPE" \
            -d "$MANIFEST" \
            https://$ECR_REPO_DOMAIN/v2/$ECR_REPO/manifests/$LATEST_TAG

          echo "Successfully tagged $LATEST_TAG"
