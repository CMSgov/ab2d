name: deploy-terraform

on:
  workflow_call:
    inputs:
      apply:
        required: false
        type: boolean
      environment:
        required: true
        type: string
      branch_name:
        required: false
        type: string
        default: 'main'
  workflow_dispatch:
    inputs:
      apply:
        required: false
        type: boolean
        default: false
      environment:
        required: true
        type: choice
        options:
          - ab2d-east-impl
          - ab2d-dev
          - ab2d-sbx-sandbox
          - ab2d-east-prod
          - ab2d-east-prod-test
      branch_name:
        required: false
        type: string
        default: 'main'
  pull_request:  # Runs on all PRs, but we will filter Terraform changes later
    types: [opened, synchronize, reopened]

jobs:
  terraform:
    runs-on: self-hosted


    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      DEPLOYMENT_ENV: ${{ vars[format('{0}_DEPLOYMENT_ENV', github.event.inputs.environment || 'ab2d-dev') ] }}
      AWS_ACCOUNT_NUMBER: ${{ secrets[format('{0}_ACCOUNT_ID', github.event.inputs.environment || 'dev') ] }}

    steps:

      - name: Get AWS params
        uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            OPS_GITHUB_TOKEN=/ci/github/token
    
      - name: Checkout AB2D-Ops Repository
        uses: actions/checkout@v4
        with:
          repository: 'cmsgov/ab2d-ops'
          token: ${{ env.OPS_GITHUB_TOKEN }}        

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # You can use '20' for latest LTS

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.0"

      - name: Verify Terraform Installation
        run: terraform version

          
      - name: Detect Changes in Terraform Directory
        id: check_changes
        run: |
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD | grep '^terraform/' || true)
          if [[ -z "$CHANGED_FILES" ]]; then
            echo "No changes detected in terraform/ directory. Skipping Terraform job."
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "Terraform changes detected:"
            echo "$CHANGED_FILES"
          fi

      - name: Skip Job if No Terraform Changes
        if: env.skip == 'true'
        run: |
          echo "No relevant Terraform changes, exiting job."
          exit 0

      - name: Assume role in target account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::349849222861:role/delegatedadmin/developer/ab2d-dev-github-actions

      - name: Verify AWS Account Selection
        run: |
          if [[ -z "${{ env.AWS_ACCOUNT_NUMBER }}" ]]; then
            echo "Error: AWS_ACCOUNT_NUMBER is not set for environment ${{ inputs.environment }}"
            exit 1
          fi
          echo "Using AWS Account ID: $AWS_ACCOUNT_NUMBER"

      - name: Terraform Init & Plan
        working-directory: terraform/environments/ab2d/core/
        run: |
          terraform init -no-color -reconfigure -backend-config=backend/ab2d-dev.conf
          terraform plan -no-color -var env=ab2d-dev -out=core.tfplan | tee plan_output.txt

      - name: Post Terraform Plan Output as PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('terraform/environments/ab2d/core/plan_output.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Terraform Plan Output\n\`\`\`\n${planOutput}\n\`\`\``
            });

      - name: Cleanup Terraform Plan
        if: always()
        working-directory: terraform/environments/ab2d/core/
        run: |
          rm -f core.tfplan plan_output.txt
