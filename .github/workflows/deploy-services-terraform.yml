name: deploy-terraform

on:
  workflow_call:
    inputs:
      apply:
        required: false
        type: boolean
      environment:
        required: true
        type: string
      branch_name:
        required: false
        type: string
        default: 'main'
  workflow_dispatch:
    inputs:
      apply:
        required: false
        type: boolean
        default: false
      environment:
        required: true
        type: choice
        options:
          - ab2d-east-impl
          - ab2d-dev
          - ab2d-sbx-sandbox
          - ab2d-east-prod
          - ab2d-east-prod-test
      branch_name:
        required: false
        type: string
        default: 'main'
  pull_request:
    paths:
      - 'terraform/**'

jobs:
  terraform:
    runs-on: self-hosted

    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      DEPLOYMENT_ENV: ${{ vars[format('{0}_DEPLOYMENT_ENV', github.event.inputs.environment || inputs.environment)] }}
      AWS_ACCOUNT_NUMBER: ${{ secrets[format('{0}_ACCOUNT_ID', github.event.inputs.environment || inputs.environment)] }}

    steps:

      - name: Assume role in target account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets[format('{0}_ACCOUNT', inputs.environment)] }}:role/delegatedadmin/developer/ab2d-${{ inputs.environment }}-github-actions

      - name: Checkout AB2D-Ops Repository
        uses: actions/checkout@v4
        with:
          repository: 'cmsgov/AB2D-Ops'

      - name: Verify AWS Account Selection
        run: |
          if [[ -z "${{ env.AWS_ACCOUNT_NUMBER }}" ]]; then
            echo "Error: AWS_ACCOUNT_NUMBER is not set for environment ${{ inputs.environment }}"
            exit 1
          fi
          echo "Using AWS Account ID: $AWS_ACCOUNT_NUMBER"

      - name: Assume AWS Role
        run: |
          source scripts/functions/fn_get_temporary_aws_credentials_via_aws_sts_assume_role.sh
          fn_get_temporary_aws_credentials_via_aws_sts_assume_role ${AWS_ACCOUNT_NUMBER} ${{ inputs.environment }} > /dev/null 2>&1

      - name: Terraform Init & Plan
        working-directory: terraform/environments/ab2d/core/
        run: |
          terraform init -no-color -reconfigure -backend-config=backend/${{ inputs.environment }}.conf
          terraform plan -no-color -var env=${{ inputs.environment }} -out=core.tfplan

      - name: Post Terraform Plan Output as PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('terraform/environments/ab2d/core/core.tfplan', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Terraform Plan Output\n\`\`\`\n${planOutput}\n\`\`\``
            });

      - name: Terraform Approve
        if: ${{ inputs.apply == true }}
        run: |
          echo "Terraform plan requires manual approval before apply."

      - name: Terraform Apply
        if: ${{ inputs.apply == true }}
        working-directory: terraform/environments/ab2d/core/
        run: |
          terraform apply -input=false -no-color core.tfplan

      - name: Cleanup Terraform Plan
        if: always()
        working-directory: terraform/environments/ab2d/core/
        run: |
          rm -f core.tfplan
